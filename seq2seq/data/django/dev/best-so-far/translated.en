attrs dictionary dictionary attrs dictionary with attrs entry for ' attrs ' , substitute an empty string for ' .
if not ,
BASE00_ALPHABET is a string ' _UNK ' .
if if true is true and self . field_name is not contained in current_app ,
return self . value . value .
import module types .
return value under the key key of self .
get the value under the ' addrport ' key of the options dictionary , substitute it for table_name_filter .
import module module .
call the self . _lock . writer method , with the result perform the following
call the method _UNK . _UNK with string ' _UNK ' _UNK ' and integer dictionary as arguments , use the result as an argument , substitute the result for value .
replace ' path ' in string ' \n ' , replace every them ' in it with path with get ' , replace ' is replaced with command , substitute the result for the result .
if bits is false ,
skip this loop iteration .
for every key in self ,
substitute self . var for value .
for every i and enumerated enumerated iterable ,
import module sys .
call the function local , substitute the result for _active .
call the method connection . creation . extend with 0 arguments : return list of the function path , and called with 0 arguments :
property decorator ,
for every field , return result of the function _UNK with return value of the method os . _UNK , with an argument path ,
substitute second and key and second element of value for opts .
call the method self . connection . _UNK .
if self . save_as_new is true ,
if formatter is false ,
try ,
define the method __repr__ with argument self .
increment factor by 0 .
call the method msgs . decode with an argument string ' utf-0 ' , substitute the result for msgs .
if not ,
call the method parser . parse , return the result .
do nothing .
define the function gettext_noop with an argument message .
property decorator ,
substitute gettext for logger . _UNK .
output_transaction is boolean True .
format_locations is a list containing an empty string .
substitute bp for lbp .
if html_message is true ,
write integer to 0 .
move is a 0 0 .
for every i in result of method l , called with 0 arguments : i and i in result ,
append i to self .
self . _UNK is an instance of MultiValueDict class .
call the method __init__ . __init__ with 0 arguments : self , text , subtype and subtype .
for the path . path in a directory , for every path in the result ,
import module sys .
return output .
substitute tokens for self . tokens .
from django . utils . models import upath into default name space .
return boolean True .
call the method self . tag , with attrs and attrs as the arguments .
define the method resolve_context with 0 arguments : self and context .
define the method add_arguments with 0 arguments self and parser .
try ,
if path is an instance of six . string_types class .
call the method handler . endElement with an argument string ' _UNK ' .
define the method self with 0 arguments : self , name , config and version set to boolean False .
if val is None ,
if first element of bits is not equal to string ' ,
set name to the result and value to result .
convert value into an integer and substitute it for value .
if is not None ,
with self . mutex perform ,
derive the class Command from the BaseCommand class .
increment i-th element of result by piece .
get the absolute file of the file _UNK .
if is a string " _UNK . _UNK " is contained in settings .
return value .
if self . widgets is not None ,
return errors .
do nothing .
if changes is smaller and equal to equal to self . buffer and self . using is not equal to length of self . remaining ,
return ip_str .
define the function path with 0 arguments : path and path set to a string .
append model to app_list_value .
skip this loop iteration .
call the method httpd . _UNK with an argument _UNK .
pending_references is an empty dictionary .
define the method render with 0 arguments : self and context .
from django . utils . translation import ugettext_lazy into default name space .
define the method parse with an argument self .
call the method self . getvalue , return the result .
substitute self . __class__ for self . _queryset .
break from the loop execution .
define the function _has_changed with arguments : data , data and db .
substitute locale_dir for retval .
call the method parser . add_library with an argument message .
define the method is_hidden with an argument self .
substitute i is an tuple of subject for i-th class , substitute subject for i
from django . db . migrations . fastcgi import MigrationLoader into default name space .
call the method parser . delete_first_token .
if TypeError or TypeError exceptions are caught ,
split is one by ' ' character , substitute the result for bits .
from django . conf import settings into default name space .
call the method base00 . strip with s , strip the result of the bytes string , return the result .
return result .
self . _UNK is an empty list .
call the method self . output_transaction , substitute the result for field_value .
from django . core import urlresolvers into default name space .
define the method _UNK with self class instance , unpacked list args and dictionary kwargs as arguments .
call the function _checkLevel with an argument level , extend the result .
call the method __init__ from the base class of the class IntegerField , with an argument field .
try ,
from django . utils . html import escape into default name space .
for every sql in migrations_to_squash ,
return None .
yield obj of the obj . __class__ . __class__ and base class .
call the method request . request with 0 arguments : request and context .
if plan is true ,
import module os .
self . _changed_data is an empty list .
if " " " " " is contained in new_name is contained in values ,
divide offset . seconds 00 and integer 0 . 00 00 and result . seconds 00 .
if self . _wrapped is contained in empty ,
substitute language for self . language .
derive the class Node form the base class object .
if lib is true ,
substitute form . _callback for form .
python_0_unicode_compatible decorator ,
return an empty string ,
if not ,
call the method self . args . args with unpacked list args , return the result .
if value if if return value , if value is not equal value , return
statement is an empty list .
if call to function to_locale with exist location as False ,
remove the element element from substitute remaining_bits for colors .
append every result of the function v . compile_filter , append the result to an list v , for every v and v in boolean True , append the result in a list , substitute the result for list .
define the method _UNK with arguments self and obj .
self . help a a string " " , where %s " is replaced with filter_name .
divide timezone by integer 00 , substitute the result of the division for hour and hour .
if tag is contained in self . _UNK ,
for every f in fields ,
finally perform ,
if lang_code is not None and lang_code is not contained in lang_code and lang_code is not contained ,
if IndexError exception is caught ,
with call to the function transaction . atomic with arguments : connection . alias and connection set to connection . alias , as the argument ,
if not ,
for every bit in return value of the function data .
define the method __deepcopy__ with arguments self and memo .
substitute self . _stream for stream .
define the function _UNK with 0 arguments value and arg .
define the method render with 0 arguments : self , name , value and attrs set to None .
substitute key for result . key .
settings . output_transaction is boolean True .
except ImportError .
if last element of chunks is empty ,
_UNK 
get the name attribute of the _UNK dictionary of caches dictionary , return value .
import module module .
if not ,
for every handler in handlers ,
content_length is an integer 0 .
if value equals value or self . empty_values is true ,
if is an empty list .
substitute self for self . close_called .
self . can_import_settings is boolean False .
define the method to_python with arguments self and value .
_UNK is None .
substitute self . default_timeout for retval .
define the function _import_module with arguments types and paths .
if key is contained in d ,
plural is an empty list .
try ,
if num is greater than self . _max_entries ,
break from the loop execution .
can_import_settings is boolean False .
_iteritems is a list " items " .
substitute offset for self . lineno .
if max_age is not None ,
define the method to_python with arguments self and value .
if answer is false ,
locales is a difference of the sets and sets sets .
property decorator ,
call the function warnings . warn with 0 arguments : string " django . utils . utils be removed in Django 0 . 0 . " .
if not ,
return callback and an empty string .
define the method render with 0 arguments : self and context .
if the value under the key key of the self . dicts dictionary .
substitute name for new_mod .
call the method self . make_key with key and version set to version as arguments , substitute the result for key .
for every arg in arg arg of arg . _UNK , for every first element of arg into a list .
self . asvar is None .
if not ,
evaluate the function digest , substitute the result for timetuple and timetuple , call the function urlparse with 0 arguments : empty and empty list
call the method options with dictionary kwargs as argument , for every field as the argument for the result .
substitute choices for self . choices .
define the method __next__ with an argument self .
if not ,
replace ' %s ' in string " %s %s %s " with key and value under the key key of the output dictionary , append
from django . utils import six into default name space .
from django . utils import six and six into default name space .
replace every occurrence of the result of the function s , s with s ' s ' is s with s ' ( ' as argument , return the result .
call the method f . getlist with argument self . argv as the argument .
if self has an attribute ' _UNK ' ,
derive the class ChunkIter from the base class Field class .
define initialization method __init__ , with self class instance as the argument .
with string ' %s ' and ' %s ' is replaced with dirpath and %s , %s . %s is replaced with string ' %s
otherwise if if first element of args equals to equal to string ' ,
derive the class SerializationError from the Exception base class .
if newretval is not None ,
get the value under the ' META ' key . key .
define the method b with 0 arguments : self and bytes .
COMMENT_TAG_END is a string ' _UNK ' .
call the method self . endElement with an argument string ' name ' , substitute the result for final_attrs .
call the method handler . addQuickElement with 0 arguments : string ' link ' and value under the ' link ' key of the item
if categories is true ,
_UNK 
define the method _isdst with 0 arguments : self and dt .
if value under the ' unique_id ' key of the item dictionary is not None ,
_UNK the _UNK _UNK _UNK _UNK " _UNK " as argument , substitute the result for value .
define the method content with an argument self .
property the property object _UNK for _UNK _UNK .
define the method create_variable_node with 0 arguments : self and filter_expression .
define the function resolve with 0 arguments : path and urlconf set to None .
call the function __new__ with arguments instance and params as arguments .
for every key_value in define ,
define the function regroup with 0 arguments : parser and token .
if converter is false ,
get the value under the ' interactive ' key of the options dictionary , substitute it for host .
call the function warnings . warn with 0 arguments : string " _UNK is deprecated with Django _UNK . " and RemovedInDjango00Warning .
try ,
call the method method , substitute the result for self . style .
derive the class HttpResponse from the HttpResponse base class .
from django . core . management . base import BaseCommand and CommandError into default name space .
derive the class DefaultStorage from the Tags base class .
if value under the DEFAULT_CACHE_ALIAS key of the dictionary dictionary .
call the method self . stdout . write with an argument string " . \n . \n " .
return s .
call the function formatdate with 0 elements : template_name , self . files and dirs , substitute the result for digest .
call the method self . validate_key with 0 arguments : key and value .
import module module .
if value is not contained in result ,
if AttributeError exception is caught ,
from django . apps import apps into default name space .
return value under the name key of the data dictionary , if it doesnt exists
if p is greater or equal to integer 0 ,
call the method logging . _UNK with an argument string ' pk ' ,
append self . fk . name to form . name .
increment i by 0 .
call the function blankout from 0 arguments : result of %d ( %d ) , %d and %d .
derive the class HiddenInput from the HiddenInput base class .
except ImportError .
get the function attribute , created with an argument obj .
try ,
msg is a string " The " %s " , where ' %s ' is replaced with __name__ .
raise an NotImplementedError with an argument string ' subclasses of the BaseArchive provide a reload ( ) method ' .
_UNK 
call the function conditional_escape with an argument bytes , substitute the result for value under the ' title ' key of the html dictionary .
self . _unget_history is an empty list .
get attribute attribute attribute from the object object , if it exists substitute it for m , if not val is None .
if response is None ,
raise _UNK _UNK with _UNK key as a key .
return new_context .
call the method __init__ with an argument base class of the class BaseInlineFormSet .
from django . core . management . base import CommandError into default name space .
from django . conf import settings into default name space .
raise an _UNK exception with string ' number number to number number is a integer 0 .
if not ,
raise an TypeError with an argument string ' _UNK to the add to the the string ' to version ' .
write " " No " . \n " with check . " write " %s " .
write new s . write .
from django . core . management . base import BaseCommand and CommandError into default name space .
call the function os . _UNK with arguments : fd and _UNK , substitute the result for fd .
if not ,
substitute self . _meta for opts .
import module warnings .
substitute token . source for 0 , token and token .
call the function smart_text , substitute the result for content .
try ,
return a string " _UNK " .
import module .
call the function format_html with 0 arguments : strings , endblock and boolean string , substitute the result for nodelist .
call the function _UNK with an argument value , substitute the result for value .
loader is a instance of the loader . loader function .
if s is an instance of SafeData or SafeData ,
join string ' , join them into a string , substitute the result for self . error_class .
try ,
if settings . USE_L00N is None ,
substitute prefix for self . prefix .
self . _UNK is a instance of _UNK class .
delete the value under the ' author_name ' key of self .
convert name to lowercase equals lowercase or it equals to string ' .
define the method __str__ with an argument self .
call the function ugettext_lazy with an argument options , substitute the result for options .
if ignore is true and errors is true ,
call the method self . xml . endElement with an argument string " natural ' .
try ,
if connection . introspection . introspection . dirname method with model . db_table directory with directory ,
return retval .
if string ' forloop ' is contained in context ,
do nothing .
endless loop ,
self . find_template_cache is an empty dictionary .
return dec .
define the function get_ns_resolver with 0 arguments : dt and encoding .
call the function Deserializer . _UNK with 0 arguments : name , _UNK class of a function Deserializer called with 0 arguments : app_name , and unpacked dictionary result , for every pattern and result of the function _UNK .
substitute substitute base for klass .
format the string " ( %s " %s " and %s " with the result of the method url , replace the result is replaced with self . __starttag_text .
call the method self . build_attrs with 0 arguments : type , type , self . encoding , substitute the result for name and name
define the method create_nodelist with an argument self .
call the method _UNK with argument set to the ' as argument , substitute the result for self . cookies .
if length of args is greater than integer 0 ,
__all__ is an list containing a string ' __all__ ' .
define the method create_token with 0 arguments : self , token_string and in_tag .
field_notes is an empty list .
remove the beginning from plist .
raise an ImproperlyConfigured exception with an argument string " template . to " %r arguments : " , %r , %r , %r and stacklevel .
from import import everything into default name space .
raise an NotImplementedError with an argument string ' subclasses of _UNK must provide an listdir ( ) method ) method ' .
try ,
delete first element of bits .
return self . html_name .
join is a list containing a list containing a elements of basedir , for every basedir in a string ' locale ' , for every path in a string , separated by the list , separated by the string ' .
if key is not contained in dict ,
define the function _UNK with argument obj .
format is a string ' % ' .
return nothing .
define the function _UNK with 0 arguments : msgs and msgs .
substitute __name__ . __name__ for base . __name__ .
from django . template . base import TemplateDoesNotExist into default name space .
get the value under the ' database ' key of the options dictionary , substitute it as the key for connection .
raise the CommandError with an argument " The The _UNK %s . %s ( %s ) %s . " . " with ' %s ' with __name__ . __name__ , and ' %s ' with __name__ .
define the method __init__ with arguments self , instance , params and params as an empty .
if fake is true ,
skip this loop iteration .
if settings . _UNK is true ,
call the function _ . _ with an argument string ' ( %s ) ) ' , with 0 : result of the function _
substitute stream for self . _stream .
from django . template . _UNK import BaseLoader into default name space .
if OSError , renamed to e , exception is caught ,
replace %s " - - of result . \n " , write it to self . stdout .
call the function six . reraise with 0 arguments : msg , third element of the result of the function exc_info . exc_info called with 0 arguments : msg and list of result .
take first element of first element of first element of whitespaces , substitute it for self .
otherwise if value is an instance of datetime . date ,
if middleware has an attribute ' process_response ' ,
call the method self . _UNK with string ' _UNK ' and _UNK as an argument , substitute the result for _UNK .
call the method parser . parse_args with 0 arguments : suffix , suffix set to string ' _UNK ' , substitute ' %s ' for key .
_UNK 
do nothing .
append the to self . _UNK .
define the function _UNK with 0 arguments : parser and token .
self . _errors is None .
from django . conf import settings into default name space .
call the function _UNK . _UNK , use the result as an key of the index dictionary , substitute it for _UNK .
if e to e for e . _UNK for e . _UNK is false and e . _UNK is not false , or e . _UNK is false , substitute the result of the list containing list of list verbosity .
if not ,
get real_name attribute from the object object , substitute it for key_func .
call the method handler . addQuickElement with 0 arguments : string " _UNK ' , a list containing a string , handlers and string containing a list : for ' title ' , for self . label and "
if val is None ,
return self . html_name .
close the process with an argument 0 .
substitute RadioFieldRenderer for oldroot .
call the method method . __init__ . __init__ with an argument self .
return obj .
if not ,
TOKEN_VAR is integer 0 .
if min_length is not None ,
call the function force_text with 0 arguments : result of the function %r ( formated with 0 arguments : s , %d and string " formated with s , s and errors .
convert self . file and append string . .
if OSError , renamed to e , exception is caught ,
call the method self . _UNK with arguments name and name , return the result
if IndexError exception is caught ,
define the method write with 0 arguments : self , outfile and encoding .
if not ,
if file has an attribute ' add_arguments ' ,
for every i in result of method l , called with 0 arguments : i and i in result ,
do nothing .
if self . username and self . can_import_settings are boolean False ,
raise an ImproperlyConfigured exception with an argument string " _UNK ' _UNK ' is not _UNK or _UNK _UNK . " .
upload_handlers . encoding .
define the function wrapper with 0 arguments : unpacked list args and unpacked dictionary kwargs .
define the method __init__ with 0 arguments : self , instance , META set to None , make set to None , and set set to None .
substitute TemplateLoader for hidden_widget .
property decorator ,
return result .
call the method self . _UNK with 0 arguments template_name and template_name , assign the result to root and root , respectively .
return self . _callback .
for every filename in filelist ,
append elements of p , append elements of ' to ' _ ' , append it to the result of the list _ , append it to the list containing end index , append it to the result .
close the file self . stream .
call the method self . next_token , substitute the result for self . _UNK .
raise an error exception with value .
define the method ugettext with an argument message .
call the method self . iteritems , return list of results .
decorator stringfilter ,
get the iterable self . object_list , substitute the result for output .
call the method new_class . _UNK , with attr as the new_class .
call the method self . validate_key with arguments key and default_list as arguments .
if failures equals integer 0 ,
call the method out with an argument data from the base class of the class TypedChoiceField , substitute the result for t .
if value is an instance of Promise .
try ,
call the function wit with 0 arguments : string ' endblock ' , ' for attrs and attrs , substitute the result for val .
return self . _errors .
substitute content_length for self . _content_length .
from django . db . migrations . migrations import MigrationExecutor into default name space .
call the method handler . startElement with 0 arguments : string " and string " _UNK " , result .
week_number is integer 00 .
decrement self . active_readers by integer 0 ,
substitute length of filelist for extensions .
if value under the ' level ' key of config dictionary is not equal to integer 0 ,
if illegal_formatting is true ,
call the function force_text with argument bytes and store result in the result .
replace %s . %s " in string " %s %s " with model . _meta . object_name and model . __name__ , respectively .
if not ,
if ValueError exception is caught ,
substitute token for self . token .
if format is not contained in _serializers ,
import module types .
if start is not equal to upto ,
evaluate the function equals equal to integer 0 , return boolean True .
yield one .
get the first element of the first element of name , substitute it for c .
return an empty string ,
raise CommandError CommandError with an argument string " : %s : %s " , where ' %s ' is replaced with app_label .
if self . can_delete is true and call to the method self . initial_form_count with an argument form evaluates to true ,
if length of self . sequence is integer 0 ,
try ,
from django . utils import translation into default namespace .
from logging import import .
call the method connection . creation . setdefault with 0 arguments : model and model , and extend list with the result of the function
get the dictionary cls . error_messages dictionary with definition dictionary , if it dictionary , if it doesnt at out .
define the function import_module with an argument locale .
if self . encoding exists substitute it for encoding .
remove first element from result .
define the method __init__ with arguments self , regex , path and mimetype .
_UNK 
if value is not equal to value or return value of the call to function called with an argument string ' _UNK ' and value is not equal to length ,
try ,
import module os .
for every digit in locales ,
return _UNK .
get the value under the ' widget ' key of the attrs . attrs dictionary , if it , substitute it for id_ , if
return a string ' by 0 in last element of last . second element of last element of last . second element of ' , respectively .
from django import import import into default name space .
if not ,
call the function split with an argument split , substitute the result for self . extra_headers .
slice is an instance of Decimal created with integer length of result of delta . seconds function with an argument tt .
if settings . USE_I00N is true ,
define the method get_unique_error_message with arguments self and unpacked list migration .
call the method __init__ from the base class of the class , with 0 arguments : token , token , token and token .
call the method x . text_type ,
call the function six . text_type with an argument offset .
call the method render from the base class of the class class , called with 0 arguments : name , value and attrs .
if field_type equals a string ' endcomment ' ,
return boolean False .
call the function escape with 0 arguments : return value of the function call to function with 0 arguments : nodelist , and length of the function nodelist . encode called , and encoding .
if self . __iter__ is true and equal is grater or equal . blocks , and self . var is greater than length of self . blocks is not equal to integer 0 ,
return extra_classes .
for every f in files ,
define the function force_bytes with 0 arguments : safe and safe set to a string ' _UNK ' .
return r .
if Exception exception is caught ,
substitute self . field . widget for widget .
define the method _setup with argument self .
substitute value for self . value .
call the function force_text with an argument settings . _UNK , use the result is an argument .
if value is true ,
derive the class Command from the BaseCommand class .
define the method _UNK with 0 arguments self and f .
call the method self . _UNK with 0 arguments : self . argv , unpacked list containing 0 elements : unpacked index and unpacked dictionary
if initial is not None , substitute initial for initial , otherwise otherwise is an empty string .
call the function _ with an argument string ' % this value is not equal than or or equal to s . " , substitute the result for value .
field_notes is an empty list .
substitute third element of renamed_method for function_name .
move integer 0 for 00 .
define the method render with 0 arguments : self and context .
substitute base for self . base .
define the function _UNK with 0 arguments path and path set to None .
pythonrc is a lambda function with 0 arguments : return value . _UNK , return value is a result with a string ' _UNK ' , and result .
if _UNK exception is caught ,
skip this loop iteration .
if __name__ has an attribute ' __name__ ' .
if not ,
from django . core . management . base import AppCommand into default name space .
substitute self . rawdata for rawdata .
call the method parser . parse with an argument tuple with an element string ' _UNK ' , substitute the result for nodelist .
define the method _UNK with an argument self .
return self .
increment i by 0 .
groupid is a string " _UNK . _UNK " .
for every form in valid_forms ,
call the method __init__ from the base class of the class BaseInlineFormSet , with an argument date .
call the method self . close .
define the method _itervalues with an argument self .
define the function _UNK with 0 arguments value and value .
call the method self . instance . exclude with an argument exclude set to exclude .
call the function avoid_wrapping with an argument value , return the result .
for every path in paths ,
return maybe .
try ,
call the method force_text with 0 arguments : self . label and results , substitute the result for v . label and label , for
if exclude is not None ,
return self . content .
if settings . DEBUG is true ,
if not ,
call the method self . xml . startElement with arguments string ' natural ' and an empty dictionary .
if slots is None ,
call the method self . _UNK . _UNK .
derive class CacheEntry from the base class object .
remove first element of list under self . find_template_cache and value .
if ttl is not None ,
result is an empty list .
if _UNK is a boolean True ,
if not ,
_func_globals is a string " _UNK " .
if filters is true ,
define the function input .
if IndexError exception is caught ,
call the function _UNK with an argument settings . _UNK as value of the settings . _UNK _UNK , substitute the result for level .
try ,
if an exception occurred ,
append self . fed to app_dirs .
if not ,
call the function to_python . strip with argument value , strip the result of the function date , strip an argument equal .
convert value into a string , %s ' , substitute the result for value .
derive the class MinLengthValidator from the base class BaseTemporalField class .
except KeyError exception is caught ,
if settings . USE_TZ is true ,
from django . utils import translation into default namespace .
define the function input .
call the method datetime_safe . as_tuple with an argument value , substitute the result for
define the method initial_form_count with an argument self .
return boolean True .
define the method copy with an argument self .
call the method self . validate_key with argument key .
label is a string " " " .
define the function _generator .
return dec .
define the function parse_http_date with an argument date .
register . tag decorator function with an argument ' if ' ,
get the value under the ' exclude ' attribute of the options exists , if it exists substitute it for self . error_messages , if
from django . conf import settings into default name space .
substitute i for self . pointer .
append a string ' _UNK ' and _UNK ' is a _UNK with _UNK : string ' _ ' and field_notes of e to a list , separated of the resulting list , extend the list with msg .
if middleware has an attribute ' utime ' ,
return a dictionary containing 0 initial : elements for ' MultiValueDict ' , return an empty string .
define the function _UNK with an argument middleware_class .
define the method clean with arguments self and value .
return line .
derive the class TextInput from the TextInput base class .
classmethod classmethod ,
define the method tzname with 0 arguments : self and dt .
define the method _UNK with an argument self .
output_transaction is boolean False .
skip this loop iteration .
_UNK 
substitute boundary for self . nodelist_empty .
define the method __init__ with 0 arguments : self , name , value and nodelist .
code is a string ' _UNK ' .
raise an ValueError exception with an argument string " %r : %r : %s " , where ' %s ' is replaced with name .
if StandardError , renamed to e , exception is caught ,
call the method self . file . close .
guid_attrs is an empty dictionary .
if m is false ,
substitute i-th element of i-th element for value under the ' ns ' key of the state dictionary .
for every function out with return value of the function force_text , called with an argument c , for every c in paths .
if model_identifier is false ,
substitute pk . pk for pk .
if not ,
define the function _UNK with 0 arguments : parser and token .
append arg to strings arg as an empty string .
call the function _ with an argument string ' . ' , return the result .
call the function year with 0 arguments : date . year and year . year , substitute the result for datetime .
if file sql_file exists ,
if IndexError exception is caught ,
from django . utils import six into default name space .
if sequence_sql is true ,
next is integer 00 .
return result .
except SkipFile exception is caught ,
decorator register with argument Tags . register .
if self . file file does not directory ,
iterator is an instance of class class .
define the method __repr__ with an argument self .
if app_config . label is contained in app_config .
if module os . name equals string ' nt ' ,
call the method copy . copy , substitute the result for lib .
return template_name .
if not ,
try ,
if options to options in options under the options key is not zero , for every index is true .
skip this loop iteration .
for every value of self . errors created with value is a value of the method smart_text with self . instance .
substitute i for p .
self . find_template_cache is an empty dictionary .
call the function timezone . get_current_timezone , substitute the result for current_timezone .
decorator function register . filter with an argument is_safe set to boolean True .
if settings . username is None substitute self . META for request .
if _default is None ,
derive the class Command from the AppCommand base class .
if TypeError or TypeError exceptions are caught ,
from importlib import import_module .
return self . size .
call the method parser . compile_filter with an argument args , append the result to args .
return _UNK instance of the _UNK class created created with 0 arguments : value , key and unpacked dictionary d .
__all__ is a tuple containing strings ' Meta ' , ' Meta ' .
define the method __repr__ with argument self .
call the os . unlink function with argument os .
call the method __init__ from the base class of the base class .
call the method self . _UNK with an argument token .
from __future__ import unicode_literals into default name space .
if input_formats is not None ,
_UNK 
raise an ValueError exception with an argument string " input input input " .
define the function _UNK with an argument model .
substitute handler for self . _queryset .
if exception exception is caught ,
if value has an attribute ' __iter__ ' and value is not an instance of six . text_type class ,
import module os .
call the method addr . encode with an argument ' utf-0 ' , ascii the result to a string ' ascii ' .
call the method parser . add_argument with 0 arguments : string ' _UNK ' , action set to string ' _UNK ' , help set to string ' _UNK ' , and help set to string ' _UNK be be _UNK . " .
substitute complain for reverse .
if log is contained in seen_data ,
join return elements of words , join the result of the bytes list with elements of bytes index into a string , return the result
if _UNK is true ,
call the function self . prepare_value with an argument value , substitute the result for value under the ' value ' key of the loop_dict
call the function func with 0 arguments : unpacked list args and unpacked dictionary kwargs , return the result .
return a string ' _UNK ' formated with the result .
try ,
from django . utils . utils . moves import RemovedInDjango00Warning into default name space .
call the method self . stdout . flush .
if TypeError or TypeError exceptions are caught ,
call the method router . allow_migrate with arguments app_config and connection . alias , substitute the result for tables .
convert to value of the header to lowercase , assign it as value of the value under the self . message key of the field_params
call the method form . save_m0m .
substitute bits , without bits without bits .
call the method signals . send . send with an argument self . alias as the argument .
call the method parser . add_argument with 0 arguments : string ' migration_name ' , default set to a string , help set to string for the database to the database for database . " .
from xml . _UNK import _UNK .
substitute args for self . args .
substitute request for self . request .
if character : : ' is not contained in opts ,
if error_message is not None ,
attrs is an empty list .
write string ' _UNK ' to the result .
define the function escape with an argument value .
if the ' _UNK ' and datetime . datetime . datetime is true , substitute the result for datetime . text_type , otherwise call the function datetime . __init__ with an argument argv , substitute the result for _UNK .
write " %s " in the string " %s " , write them to self . stdout stream .
derive the class Storage from the base . FileProxyMixin base class .
put values into a list , substitute it for values .
if self . connection is true ,
define the method setlistdefault with 0 arguments : self , key and default set to None .
return msg .
except KeyError exception is caught ,
define the function smart_split with an argument ip_str .
return msg .
append a string ' %s %s to s ' formated with s , where the result to t .
substitute app_name for app_name .
if not ,
join tuple . __name__ and first element of string under six . __name__ . __name__ ' , substitute __name__ for self . __name__ .
import module module .
convert convert to lowercase , substitute it for extra_classes .
derive the class _UNK from the object base class .
define the method get_nodes_by_type with 0 arguments : self and nodetype .
substitute sysid for self . sysid .
if data is empty , substitute it for data .
if lang_code equals a string ' utf-0 ' ,
if call the function os . _UNK ,
derive the class RegexValidator from the base class class .
define the function _UNK with 0 arguments : format , format and format .
define the method __init__ with 0 arguments : self , instance , min_value set to None , min_value set to None and ending set to None .
if commit is true ,
substitute index . viewname for i-th element of WSGIServer for ns .
break from the loop execution .
return key and key .
otherwise if self . field is true and field . _meta is contained in self . fields ,
if fixture_name is not a directory ,
join tuple of tuple path and filename and filename into filename path .
define the method compress with arguments self and data_list .
otherwise if value is not an instance of list or tuple type and value is True ,
if end ends with ' / ' ,
call the function validate_ipv0_address with an argument value .
substitute length of chunk for _UNK .
call the function allow_lazy with 0 arguments : six . text_type and six . text_type , substitute the result for statements .
call the method __init__ with an argument dt , from the base class of the class .
if elt is an instance of list types ,
return s .
do nothing .
if not ,
call the method parser . parse with an argument parser .
path_info is an string ' 0000000000abcdefghijklmnopqrstuvwxyz ' .
define the function path with an argument path .
try ,
call the method signals . resolve with an argument self . using set to the result .
join join elements of whitespaces into a string , separated with newline characters , return it .
if value under the ' indent ' key of the self . options dictionary , if it is true ,
append f . name to exclude .
append string " Field because of because model . to field_notes to field_notes .
call the function os . _get_filename with argument self .
call the method self . as_widget with 0 arguments : attrs , unpacked dictionary kwargs and unpacked dictionary kwargs , return the result .
return result .
call the method connection . introspection . _UNK with an argument include_auto_created , substitute the result for _UNK .
output is an empty string .
call the function new_method_proxy with 0 arguments : src and encoding . encoding , substitute the result for utf0_charset .
raise an AttributeError exception with an argument string " This " .
if _UNK is an instance of list type ,
derive the class ChunkIter from the six . Iterator base class .
replace is a string ' %s : %s ' , where ' %s ' is replaced with name .
substitute i-th element of self . forms for form .
substitute kwargs for self . kwargs .
if f . pythonpath is true ,
increment self . paths_to_remove by migration .
if not ,
call the method connection . _UNK . _UNK , with connection as arguments , assign the result as the result of the method self .
call the method os . _UNK with 0 arguments : string ' _UNK ' and '
write string " %s " . . .
if UnicodeDecodeError exception is caught ,
convert self . _wrapped into boolean into value .
call the method _UNK . _UNK with an argument _UNK , substitute the result for
from django . core . mail . backends . base import BaseEmailBackend into default name space .
join into a string : %s . %s and %s . %s . %s " with arguments %s and %s . * , respectively .
try ,
for every _UNK in _UNK _UNK ,
call the method self . get_fqdn , return the result .
define the method __init__ with 0 arguments : self and nodelist .
raise an ValidationError with 0 arguments : value under the ' required ' key of the self . error_messages dictionary and code set to string
if las equals equal to integer ,
call the method smart_text . warn with 0 arguments : string " no " and string " %r with tag : " with base element of a base class and a a function , return the result .
for every log in categories ,
derive the class _UNK from the base class _UNK class .
call the function self . path with argument name , use the result as an argument for the call to the function os . path
for every format in self . saved_forms ,
substitute i-th element of dec_part for dec_part .
call the function io . open with 0 arguments : model , string ' DEBUG ' and encoding . encoding as arguments , with the result renamed to fp , perform the following ,
do nothing .
for every bit in bits ,
call the function urlresolvers . urlconf with urlconf as the argument .
self . _UNK .
substitute result for the value of the self object of memo dictionary .
if self . use_ipv0 is true ,
if value under the ' unique_id ' key of the item dictionary is not None ,
if bf_errors is true ,
if not ,
define the function w with 0 arguments : html and html .
call the method __init__ with 0 arguments : template_string and template_string from the base class of the class Command .
call the method parser . add_argument with string ' ' , args set to ' ' nargs ' , help set to ' ' .
query is an tuple containing strings ' strings ' , ' escapejs ' and '
call the method value . natural_key , substitute the result for value .
close the file descriptor .
define the method __init__ with 0 arguments : self , name , content_type , content_type , content_type , content_type and content_type_extra set to None .
if _UNK . _UNK is getter in file_name .
for every base in return value of the function force_text called with arguments : request , and set set to the function of the function force_text , called with arguments : every set and unpacked set to the result .
define the function _UNK with an argument value .
args is a empty tuple .
call the method self . _UNK with argument self , use the result as an argument .
call the method datetime . datetime . strptime with 0 arguments value and format function with an argument value , return the result .
raise an TemplateSyntaxError exception with an argument string " : " %s . %s : %s : %s : %s " . " , where ' %s ' is replaced with 0 : first element of bits and string " , where ' %s ' is replaced with var .
if value is not None ,
if not ,
if is true ,
for every message in message ,
try ,
for every item in value under the ' categories ' key of the item dictionary ,
property decorator ,
if not ,
from importlib import import_module .
if now is smaller than integer ,
call the method threading . split_contents substitute the result for decompress .
define the function reverse with 0 arguments : widgets set to None , widgets set to None ,
convert value into an floating number , substitute it for value .
define the method _UNK with self , name and value as arguments .
if best_doublecolon_start equals to integer 0 ,
if file_name is an instance of ForeignKey and ForeignKey is not instance . string_types and
define the method end_object with arguments self and field .
field_notes is an empty list .
if PY0 is true ,
append mw_instance . upload_handlers to mw_instance .
get the value under the ' language ' key of the options dictionary , substitute it for self . file_path .
slice the end index index of end end of end end end , substitute it for end .
return elements of words joined into a string , return it .
define the method __init__ with 0 arguments : self , tag and rawdata .
if not ,
_meth_func is a string " _UNK " .
if id_ is true ,
if self . no_obsolete is true ,
get ' value ' attribute of the _active object , if it exists substitute it for t , if not is None .
substitute _UNK for _UNK .
get the value under the ' database ' key of the options dictionary , substitute it as the key for connection .
try ,
import module base00 .
define the function get_public_serializer_formats with an argument klass .
derive the class TranslatorCommentWarning from the result as the class .
import module time .
try ,
raise an ValueError exception with an argument string " %s " %s " , where ' %s ' is replaced with first element of bits
add k to k set .
substitute months for self . mod .
otherwise if domain equals a string ' djangojs ' and ' does ' and every dirname in a string ' _UNK ' .
define the method id_for_label with 0 arguments : self and id_ .
call the function smart_text . _UNK with return value of the _fd ( ) ) function , substitute the result for klass .
if ignore is true ,
call the method _trans . gettext_noop with an argument message .
return nothing .
substitute self . pk , if not , substitute key for if , if not
define the method match with an argument self .
call the function tuple with 0 arguments template_name and template_dirs , respectively .
call the method self . tag with 0 arguments : function_name and function_name .
call the method formats . split_contents with an argument value , substitute the result for
define the method nud with 0 arguments : self and parser .
import module warnings .
return qs .
ret_ip is an empty list .
call the function lazy with arguments : return value of the return value of the function six . _UNK with an argument level , return the result of the function six . exc_info .
decorator function register . filter with an argument is_safe set to boolean True .
raise an CommandError exception with an argument string " %s " %s %s %s %s %s " , where ' %s ' is replaced with filename , path and tempdir .
call the function _ with 0 elements : return value of the function _ with an argument string ' Enter ' , and ' %s ' with opts . _meta .
return input_val .
if PY0 is element if PY0 . PY0 . PY0 , substitute its default object , otherwise substitute default for default .
if lang is None ,
append a tuple with filename filename , filename and content , append the self . choices to error .
_UNK 
call the method self . update with an argument option_value .
from django . utils . utils import ugettext_lazy and mark_for_escaping into default name space .
call the function _UNK with 0 arguments : " project and " " " " . " .
call the method __init__ from the base class of the class IntegerField , called with an argument attrs .
define the method __init__ with 0 arguments : self and name .
write string " " . .
if not ,
increment pos of pos by both , space .
call the method parser . add_argument with 0 arguments : string ' migration_name ' and a help for a help for application .
if Exception , renamed to e , exception is caught ,
raise an CommandError exception with an argument string " package package at package package : " .
for every occurrence of ' \n ' , for ' %s ' is true with return value of the occurrence of the function _ . py , for every string ' ' in first element of the results .
substitute _UNK for _UNK .
if self . use_natural_foreign_keys is false , if if doesnt doesnt . _meta has an attribute ' natural_key ' ,
define the method match with self class instance .
if not ,
call the function out with 0 arguments : unpacked dictionary containing a dictionary , unpacked dictionary , for every key and unpacked dictionary options , substitute the result for options .
define the function _UNK with an argument value .
import module .
if self . max_digits is not None and length is not than self . max_digits ,
define __enter__ method with self as the argument .
return a tuple containing 0 elements : value under the ' _UNK ' key of the dictionary dictionary , called with an empty string , and empty list , return a list containing a value .
for every form in self . empty_values ,
if VariableDoesNotExist exception is caught ,
_translations is an empty dictionary .
value is an instance of ConvertingDict class , created with an argument value .
call the method self . second , second element of first element of second element into config , substitute result for value .
substitute value under ' under ' ' ' of ' under ' %s ' of dirname dictionary , substitute the first element of the result for sys . exc_info .
if self . expression is not None and self . stdout is not None and self . stdout is not equal to integer 0 : self . stdout and _UNK is not string ,
x is an integer 0 .
url is a string ' ( ( ) ' .
from django . utils . utils import clean_ipv0_address into default name space .
call the method handler . addQuickElement with 0 arguments : string ' _UNK ' and value under the ' title ' key of the item
if not ,
set attr . name attribute of the attr object to attr .
substitute self . t for t .
call the function allow_lazy with an argument force_str , substitute the result for value .
call the method __init__ from the base class of the class AssignmentNode , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
try ,
if initial is not None ,
define the method validate_unique with an argument self .
call the method tempfile . NamedTemporaryFile set to string ' . NamedTemporaryFile ' .
field_value is None .
raise an ValidationError with 0 arguments : value under the ' invalid_choice ' key of the self . error_messages dictionary , code set to string ' invalid_choice ' , and code set to a list containing an entry : ' for ' for self . extra_context .
convert value into an integer , substitute it for value .
for every k in sorted_items ,
substitute value under the field key of the field . fields dictionary for field field .
define the function get_language_from_path with an argument request .
convert extra_classes to lowercase , return it .
join statements into a string , separated by newlines , return it .
return func .
define lambda function that returns self . file . field field , use it as an argument for property function , put the result in
append a value under the k key of self dictionary , if k is a list .
if value is None ,
if stream_or_string is instance of bytes type ,
return boolean False .
except ImportError .
call the method self . importer with argument exc , substitute the result for extra_classes
call the method self . validators with an argument self . _callback_strs .
return self . _client .
call the os . os . _UNK with arguments os and msgs .
for every connection in return value of the method connection . introspection . table_names with argument every the result ,
otherwise if unpack_ipv0 is true ,
get the _serializers dictionary _serializers under the format key of the _serializers .
if file_ is true ,
substitute _iteritems for __str__ .
try ,
try ,
call the method m . split_contents , substitute the result for second element of styles .
substitute second element of definition for definition .
define the method _get_choices with an argument self .
from django . utils . datastructures import MultiValueDict into default name space .
define the method _UNK with an argument self .
return result .
update dictionary dictionary with item .
get the value under the lang_code . _UNK key of the META dictionary , substitute it for lang_code .
best_doublecolon_len is an integer 0 .
raise a CommandError with an argument " %s . %s " %s %s %s " . " with arguments %s " %s " , where ' %s ' is replaced with self . dirpath and dirs .
define the method _UNK with 0 arguments : self , length and truncate .
derive the class _UNK from logging . _UNK base class .
for every __ in rules ,
for every _UNK and _UNK in return value of the method _UNK . _UNK ,
call the function representation with an argument , return the list of the result .
call the method self . _UNK . _UNK , return the result . _UNK called with an argument data , return the result .
if arg is None ,
property decorator ,
join statements into a string , separated by newlines , return it .
define the method __init__ with 0 arguments : self , min_value set to None , min_value set to None , unpacked dictionary args , unpacked dictionary kwargs .
replace the ' _UNK ' in it , substitute the result for self . _UNK .
except KeyError exception is caught ,
finally perform ,
self . app_label is a empty string .
remove dirname from the dirnames .
define the function _UNK with an argument url .
return data .
from django . conf import settings into default name space .
return an instance of a class created with 0 arguments : string ' _UNK ' and empty dictionary .
if attrs is not attrs , attrs it to attrs .
substitute _UNK for _UNK .
get the value under the ' filename ' key of the func dictionary , substitute it for filter_name .
if initial , initial initial for self . initial if self . otherwise substitute boolean True , otherwise otherwise is boolean False .
if the value self . verbosity , if the asvar doesnt .
if formfield_callback is not None ,
try ,
define the function _UNK with 0 arguments value and arg set to None .
leave_locale_alone is boolean True .
models is an string ' StringIO ' .
for every node in self . nodelist_loop ,
substitute var_name for self . _cached_loaders .
increment i by 0 , substitute the result for i .
otherwise if field . field is true and field . rel is an instance of models . _UNK ,
val is None .
substitute _iteritems for iteritems .
call the method self . _UNK with self . port and self . port , substitute the result for self . sep .
call the function get_library with an argument taglib , substitute the result for lib .
call the method self . _UNK with an argument string ' id ' , substitute the result for id .
if file is not contained in self .
if value under the ' _UNK ' key of options dictionary is true ,
return FormSet .
define the function _UNK with _UNK _UNK , _UNK list args and unpacked dictionary kwargs .
call the method parser . next_token , substitute the result for token .
decorator function register . filter with an argument is_safe set to boolean False .
call the function function with an argument func .
call the method _trans . number_format with 0 arguments : number and number , use the result as an argument for the call to the
define the method _UNK with an argument self .
from django . utils . utils . moves import _dummy_thread as default into default name space .
define the function _UNK .
substitute cls . cls for cls . __name__ .
if self . verbosity is greater or equal to integer 0 ,
COMMENT_TAG_END is a string ' _UNK ' .
define the method __hash__ with an argument self .
call the method self . _archive . close .
from django . utils . utils import localize into default name space .
define the method __init__ with 0 arguments : self , data , files set to None , files set to None , prefix set to None , prefix set to None , prefix set to None and html set to None .
define the method _UNK with arguments self and options .
from django . utils . safestring import SafeData and SafeData into default name space .
define the method handle_label with self class instance , queryset and dictionary options as arguments .
convert value to lowercase , return it .
if ValueError exception is caught ,
append filename to filename .
increment third element of version dictionary .
for every base in return order of six . declared_fields ,
import module os .
get ' value ' attribute of the _active object , if it exists substitute it for t , if not is None .
from django . core . checks import AmbiguityError into default name space .
delete the value under the key key of self . _expire_info .
if not ,
call the function smart_text with an argument settings . pk as argument , for every return value of the return value of the method obj . _meta . to_python with an argument obj .
property decorator ,
return media .
define the method _UNK with self , field and field .
if end is lesser than end ,
call the function os . umask with argument umask .
call the function re . compile with 0 arguments : raw string ' ? ? ? : ? ? ? ? ? ? " . * ' , substitute the result for _UNK .
call the function re . compile with 0 arguments : re . UNICODE and re .
instantiate iterator class created , created with self . instance and encoding set to use_tz , substitute the result for negated .
update self . namespaces dictionary with kwargs .
if only_initial is false ,
call the function sql_all with 0 arguments : self . style and connection , substitute the result for statements .
if ValidationError , renamed to e , exception is caught ,
call the function _UNK . _UNK with first element of bits as an argument , substitute the result for second .
derive the class DateTimeBaseInput from the base class FileProxyMixin .
return an string " space .
substitute first list of first element of self . template_string .
decorator stringfilter ,
if ValueError exception is caught ,
return a tuple containing elements of source and source are element .
call the method os . path . path into a argument , substitute the result for self . locale_paths .
try ,
call the method instance . _UNK with an argument form . _UNK . _UNK .
trans_real . _UNK is an empty dictionary .
import , expects_localtime , now , now are equal , integer_types and integer 000 , 0 and 0 .
append name from ' _ ' .
import module sys .
define the method _UNK with self , key , key , version defaulting to integer 0 and version defaulting to None as arguments .
to_unicode is a tuple containing elements : fdel . _UNK and None .
define the method __str__ with an argument self .
call the function get_default_timezone , return the result in the result .
import module sys .
derive the class _UNK from the object base class .
if LookupError exception is caught ,
define the method flatten with 0 arguments : self and commit set to boolean False .
substitute id for self . id .
call the self . path . _UNK with argument name , substitute the result for
define the method handle with self class instance and dictionary options as arguments .
call the method bytes . read , substitute the result for bytes .
return an empty list .
if TypeError or TypeError exceptions are caught ,
otherwise if token . token_type equals integer 0 ,
call the function fp . _UNK on the result fh .
if length of list_ equals integer 0 ,
return a list with 0 elements : elements and a list wrapper .
define the function _UNK with 0 arguments : key , key and default .
if NotImplementedError exception is caught ,
convert s and integer 0 , substitute it for s .
define the method clean with arguments self and value .
replace ' %s ' in string " for %s . label for " %s " for app_config .
define the method __bool__ with an argument self .
if tried is boolean True ,
substitute the occurrence of the occurrence of the result for top .
call the method m . encode with an argument string ' ascii ' , call the method decode on the result with an argument string
from django . utils . encoding import force_text and force_text into default name space .
append %s to ' %s ' , with it as the result .
write string " _UNK " to the self . stdout stream .
import module .
substitute tempfile for tempfile . _UNK .
from django . utils import six into default name space .
define the method __iter__ with an argument self .
derive the class Command from the AppCommand base class .
if result of the method _ . group with an argument string ' __ ' or result is greater than equal to integer 0 ,
return year . year with 0 , sum . year . year , tzinfo . year is classes . year , d . year , d . year , d , return 0 .
call the method __init__ . __init__ with 0 arguments : self , _UNK , _UNK , _UNK and _UNK .
if filename ends with filename or filename or bit ,
call the method middleware . dumps with an argument request , substitute the result for
define the method render with 0 arguments : self and context .
skip this loop iteration .
return an empty string ,
define the function cache_key with 0 arguments : key , key and default .
derive the class _UNK from the base class .
call the method _trans . ngettext with 0 arguments : singular , plural and number .
return string ' 0 ' .
call the self . stdout . write . write method with a string " . .
call the function getInnerText with argument k , for every k in return value of the method c . iteritems , for every key of
if call the function os . _UNK ,
if locale_dir is false ,
call the method parser . add_argument with 0 arguments : string ' _UNK ' , ' _UNK ' , help set to string ' _UNK ' . . .
call the method self . _UNK .
field_value is an empty list .
from django . forms import Field into default name space .
call the method connection . cursor , substitute the result for cursor .
call the self . forms method from the self . forms ( return the result .
call the method expression . flatten with arguments self and unixfrom set to unixfrom .
for every attr in strings containing 0 entries : ' source ' and ' opts ' ,
define the method close with argument self .
derive the class _UNK from the SyndicationFeed base class .
delete the value under the key key of self . _cache dictionary .
return an empty string ,
define the method _ipython_pre_000 with an argument self .
if first element of the url_fields is false ,
substitute file . name for filename .
if if character is contained in string ' ,
otherwise if maxsize is None ,
define the method extract with 0 arguments : self and filename .
call the method os . _UNK .
if i is greater than sys . _UNK ,
define the method utcoffset with 0 arguments self and dt .
if self . _wrapped is contained in empty ,
substitute first element of bits . _UNK and bits .
if self . files is true ,
raise an TemplateSyntaxError exception with an argument string " ' %s ' %s ' %s ' %s " " , where ' %s ' with name and name of name .
call the function lazy with 0 arguments : tuple _UNK elements , integer 0 elements and _UNK , substitute the result for _UNK .
from django . utils . six . moves import into default name space .
msgmerge_options is a list containing an element : ' .
call the function timedelta with an argument t , substitute the result for t .
call the function . . function with 0 arguments : string ' %s ' , ' and opts . encoding .
yield and empty string as the result .
if self . decimal_places is not None ,
if dklen is false ,
define the method __getitem__ with 0 arguments : self and idx .
derive the class Command from the BaseCommand class .
substitute silent for prefix .
call the method module . _UNK with 0 arguments : command . _UNK and module . _UNK .
do nothing .
if s is an instance of unicode ,
call the function allow_lazy with 0 arguments : six . text_type , substitute the result for six . text_type .
if field is not contained in self . fields ,
call the method _UNK with an argument self . _UNK .
call the method copy . deepcopy with 0 arguments : self and self . _wrapped , return the result .
return a tuple containing tuple strings tuple tuple of tuple containing 0 elements : string ' _UNK ' , and result of a function _ called with an empty string , and every element of the result .
define the function _UNK .
get the value under the ' database ' key of the options dictionary , substitute it for database .
import module module .
define the method requires_system_checks with 0 arguments self and name .
for every locales in locales ,
raise an StopIteration exception .
call the method connection . _UNK with 0 arguments : _UNK , _UNK set to interactive , interactive set to reset_sequences , substitute the result for pickle .
define the method _UNK with an argument self .
for every field in return value of the function _parse_date_fmt ,
define the function _UNK with 0 arguments : set set to integer tuple and integers set to a tuple .
define the method make_key with self class instance , key and version defaulting to None as arguments .
substitute self . path and expression , self . path , expression and self . path .
call the limit_choices_to function , substitute the result for boundary .
substitute i for i for i , substitute it for i .
call the method parser . add_argument with 0 arguments : string ' migration_name ' , default set to a string , help set to string for the database to the database for database . " .
errors is an empty list .
define the method __init__ with 0 arguments : self , command , token and token set to None .
if not ,
call the method pk . pk . pk . pk . pk , pk the key as an empty dictionary , substitute the result for value under the ' pk ' key of the data dictionary .
define the method __init__ with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
if value under the ' language ' key of the self . feed dictionary is not None ,
define the method id_for_label with 0 arguments : self and id_ .
if potfile is a file ,
if opts . USE_I00N is true ,
return None .
if domain into a string " %s " , where ' %s ' is replaced with path , if not path into a string .
raise a CommandError with an argument string " Enter not a valid valid valid expression : " . " , where ' %s ' is
get the value under the ' database ' key of the options dictionary , substitute it for options .
do nothing .
call the function out with an argument dictionary , substitute the result for result .
if middleware has an attribute ' process_response ' ,
call the method sub with 0 arguments : string ' _UNK ' and return result .
_UNK 
_UNK 
define the function fn .
if _UNK is greater or equal to integer 0 ,
define the method __deepcopy__ with arguments self and memo .
from django . utils . models import upath into default name space .
for every refto and boundary in return value of the method references . items ,
substitute resolver_match for self . _encoding .
for every app_label and _UNK in return value of the method _UNK . _UNK ,
define the function is_valid_ipv0_address .
if VariableDoesNotExist exception is caught ,
try ,
substitute _UNK for _UNK .
call the function force_str with lambda function x , use the result as an argument for x , if value is greater than the result
call the function _UNK with _UNK args , _UNK _UNK args of args args , and _UNK _UNK _UNK elements _UNK elements , return the
if UnicodeEncodeError exception is caught ,
return j .
yield one .
if content is an instance of Node and Node or nodelist ,
skipped is an empty list .
return s .
call the function _UNK with 0 arguments : _UNK elements , integer integer 0 elements , size and _UNK , substitute the result for _UNK
from django . utils . utils import escape into default name space .
call the function _helper with an argument kwargs , substitute the result for the result and params , without the result and params .
if child is contained in settings . empty_values ,
if can _UNK is true ,
substitute cache for cache . cache .
for every name in name ,
define function function with response and response as arguments .
define the function kw with 0 arguments : unpacked list args and unpacked dictionary kw .
if filename is contained in _serializers ,
return self . _encoding .
define the method __len__ with an argument self .
try ,
call the function bits with bits , bits , substitute the result for bits .
call the function cache_key with request and cache_key as arguments .
if _UNK is callable object , substitute it for _UNK .
call the method self . add_prefix with an argument name , substitute the result for self . _UNK .
from django . core . exceptions import ImproperlyConfigured into default name space .
return the object of the method self .
call the method self . _delete with argument fname .
call the function force_bytes . force_bytes and request . encoding function with request as the argument .
derive the class CharField from the base class CharField class .
try ,
derive the class MinValueValidator from the SuspiciousOperation base class .
if middleware has an attribute ' process_response ' ,
if not ,
define the function avoid_wrapping with an argument value .
_UNK 
define the function _UNK with arguments dst and dst .
if not ,
if self . verbosity is greater or equal to integer 0 ,
define the function _UNK with 0 arguments : func , val0 and upto .
define the method popitem with an argument self .
call the method token . split_contents , substitute the result for args .
try ,
define the method _UNK with 0 arguments self and name .
if not ,
if not ,
from django . utils . _UNK import Promise into default name space .
self . _post_parse_error is None .
call the method handler . endElement with an argument string ' item ' .
register . tag decorator ,
if length is greater than length of l ,
if matches is true ,
define the function templatize with 0 arguments : parser and token .
import module module .
if self . check is an instance of Exception ,
return settings . LANGUAGE_CODE .
call the method parser . compile_filter , substitute the first element of the result for parser .
for model in model_list ,
help is a string " _UNK _UNK _UNK of _UNK _UNK of database in the module module module . " .
message is a tuple containing tuple : elements containing elements of a base class of a class _ , called with 0 : string " " , and string " _UNK a result of the valid valid string . " .
if loader is an instance of six . string_types ,
raise an exception .
define the function receive_data_chunk with arguments self , raw_data and start .
from self . mime . loader import sql_create into default name space .
if . _UNK . _UNK " ,
if value is not key of the value under the method self . key key of the kwargs dictionary is not in None ,
substitute decimals for subtract for digits .
if IOError exception is caught ,
if LookupError exception is caught ,
substitute length of end for end .
with lock ,
substitute name and self . name for self . name , self . name , respectively .
define the method _UNK with an argument self .
do nothing .
code is a string ' max_length '
if Exception , renamed to e , exception is caught ,
call the method self . stdout . write with new string ' _UNK ' and new it to boolean True .
call the method time . copy with an argument tt .
return instance ,
if not ,
import module itertools .
substitute the for base . string_types .
for every attr in _urllib_response_moved_attributes ,
do nothing .
import module os .
get the value under the ' database ' key of the options dictionary , substitute it for options .
define the function url with 0 arguments : url and safe set to ' .
for every app_config in app_configs ,
define the function _UNK with 0 arguments : self and subject .
for every field , field in return value of the method field . error_dict .
define the function _UNK with an argument value .
from collections import UserList into default name space .
return boolean False .
while i is lesser than length of subject and subject is not equal to character space of subject is character or tab character ,
if i is smaller than or equal and equal to equal to self . remaining and self . initial_form_count is true ,
call the function force_text with 0 arguments : first element of self . _wrapped , substitute the result for m .
remove the parts to the iterable dec_part , substitute the result for dec_part .
if code is None ,
from django . db import connections , connections , router , transaction , transaction and namespace into default namespace .
call the method sort , substitute the result for i .
try ,
from django . core . exceptions import ImproperlyConfigured into default name space .
e . args is a string containing a string " : %s : %s " : %s " %s " , where ' %s ' is replaced with name and e . args , respectively .
from django . db . migrations . _UNK import DEFAULT_TIMEOUT into default name space .
call the method parser . _UNK with an argument string ' _UNK ' , substitute the result for _UNK .
call the function timedelta with an argument offset , substitute the result for html .
self . waiting_readers is integer 0 .
join callback . __name__ . __name__ " .
try ,
return e .
append f . name to exclude .
convert value and value into a number , convert arg converted into a integer , return the result .
call the function re . compile with an argument raw string ' _UNK ? %s %s %s ' formated with command , __M , __T and __T .
import module socket .
call the method data . getlist with an argument name , return the result .
otherwise if ch equals a string ' ) ' ,
if message is not an instance of the ValidationError class ,
define the function escape with an argument text .
define the method strptime with arguments self , value and format .
define the method end_object with arguments self and obj .
substitute self . none_value for self . token .
if PY0 PY0 of module module six is boolean True ,
call the method handler . endElement with an argument string ' title ' .
try ,
return guessed_path .
if fget is not None ,
self . _post is an instance of QueryDict created with an arguments : encoding set to a string , encoding and self . encoding , respectively .
raise an ValueError exception with argument string ' Invalid not found : %s " , where ' %s ' is replaced with key .
call the method __deepcopy__ with an argument memo from the base class of the class TypedChoiceField , substitute the result for result .
if not ,
remove first element from one as the result .
if not ,
if inplural is true ,
from django . conf import settings into default name space .
args is an empty list .
raise an CommandError with an argument string " Could not not import " %s . %s . %s " is not _UNK . " , where ' %s ' is replaced with name and filename , respectively .
raise an CommandError with an argument " " The ' %s ' is a _UNK _UNK . " , where ' %s ' is not _UNK for every app loader . name . " , where ' %s ' is replaced with app_config . name .
if ext is true ,
if level is not contained in executor . _UNK ,
msgmerge_options is a list containing 0 elements : ' http ' , ' upload_handlers ' , ' https ' and ' html ' .
define the method __init__ with 0 arguments : self , name and name set to None .
if self . verbosity is greater or equal to integer 0 ,
define the method data with 0 arguments : self , data and data set to None .
define the method __iter__ with an argument self .
call the method self . add_truncation_text with 0 arguments : an empty string , substitute the result for output .
if StandardError , renamed to exc , exception is caught ,
join self . dirpath , join into a file path , substitute it for base_path .
if key is contained in state_frame ,
call the method self . _UNK with 0 arguments : handler and self . _UNK .
requires_system_checks is boolean False .
substitute value under the f . name key of the lib . tags dictionary for value under the key key .
import module module .
define the function _UNK with an argument lang_code .
from django . conf import settings into default name space .
call the function allow_lazy with 0 arguments : six and six . text_type , substitute the result for mark_safe .
return wrapper .
get the value under the ' microsecond ' key of the options dictionary , for the key in the integer 0 , substitute the result for value under the ' _UNK ' key of the kw dictionary .
from django . utils . deprecation import RemovedInDjango00Warning into default name space .
return boolean True .
query is an tuple containing strings ' strings ' , ' escapejs ' and '
append string ' _UNK _UNK _UNK _UNK ' , where ' %s ' by name .
define the function force_text with 0 arguments value and arg .
raise an TemplateDoesNotExist exception .
call the method self . match with 0 arguments : i and integer 0 in integer 0 , substitute the result of the result of the method _UNK . _UNK , substitute the result for self . sep .
return an empty string ,
help is a string " _UNK the the base class of the base class _UNK ( " _UNK " with the given given name of " " . " .
property decorator ,
_UNK 
substitute value for n , if cache_timeout is None .
substitute django . core . __name__ ' for ' .
_UNK _UNK _UNK _UNK _UNK _UNK _UNK equals _UNK , _UNK with 00 00 , return the result .
call the method self . _UNK with arguments self and source .
if varargs is not None ,
derive the class Command from the BaseCommand class .
if msg is true ,
define the method __repr__ with argument self .
define the method __init__ with an argument self .
call the function _UNK . _UNK , substitute the result for now and now , respectively .
call the function _UNK . _UNK with arguments args and args .
call the function mark_safe with an argument message , return the result .
break from the loop execution .
substitute urlconf_name for integer_types .
import module glob .
call the method self . __class__ with 0 arguments : an empty string , encoding is boolean True , encoding and encoding , substitute the
append a tuple with 0 elements : f . name and boolean to result .
substitute end for end .
all_models is an empty list .
call the function format_html with 0 arguments : settings . _UNK set to boolean True , and settings . _UNK as empty True , substitute the result for settings .
remove . __name__ set to string ' formfield_callback ' .
call the method os . unlink with argument local , substitute it for rawdata .
define the function _UNK with _UNK list args and dictionary kwargs as arguments .
register is an instance of Library class .
define the method value_from_datadict with 0 arguments : self , data , files and name .
create directories from the elements in filename .
call the method sys . exc_info , substitute the result for fd .
return translated .
if self . files None is None ,
call the self . path . _UNK with argument name , substitute the result for
return boolean False .
return an empty string ,
call the function zipfile . _UNK with 0 arguments : self . stream , self . stream and self . stream as arguments , unpacked the result . _UNK called with an argument options .
from __future__ import unicode_literals into default name space .
if not ,
return an instance of the class class .
return integer .
call the function pickle . dumps with value and pickle . HIGHEST_PROTOCOL as arguments , substitute the result for pickled .
return an empty list .
define the method _has_changed with arguments self , initial and data .
raise an ValidationError with 0 arguments : value and invalid set to a string ' invalid ' .
return the tuple containing the self . template_name and template_name , if it .
if name is true , substitute __name__ for ' __name__ ' attribute of __name__ __name__ , if not func , substitute func . __name__ for
substitute length of length of middle for length , for length .
call the method datetime with an argument kw , return the result .
substitute cached_loaders for self . view_name .
call the method _UNK . _UNK .
define the method accessed_time with arguments self and name .
return nothing .
substitute app_name for self . app_name .
raise an ImportError exception .
define the function _UNK with an argument table_name set to boolean False .
append form to self . saved_forms .
substitute func for value under the ' attname ' key of the self . feed dictionary .
call the function new_method_proxy with argument backend , substitute the result for k .
try ,
create is a tuple containing elements of the call to the function pformat with an argument connection , for every connection is None .
put list containing tuple containing initial elements and None for None .
raise raise exception with an argument self .
if size is None ,
call the method self . _lib . _lib with argument self . _wrapped , substitute the result for _UNK .
_translations is an empty dictionary .
call the method _UNK . _UNK , substitute the result for _UNK .
join list of list of 0 element of valid string into a string , separated by ' .
if _globs_ is None ,
from django . core . management . base import CommandError into default name space .
call the method smart_text . render , return the value , return the result .
call the method translation . activate with an argument settings . LANGUAGE_CODE .
substitute number_value for value under ' fg ' for defaults .
if self . data . data equals integer 0 and self . data . _UNK equals integer 0 ,
call the method self . _UNK . _UNK with an argument string under ' _UNK ' key of config dictionary .
self . _unget_history is an empty list .
call the method unicodedata with an argument key , _UNK set to result of the function datetime . encode called with argument set to value and _UNK set to _UNK , substitute the result for value .
do nothing .
raise an ImproperlyConfigured exception with an argument string ' %s ' in _UNK for %s in domain , replace ' %s ' is replaced with
write new string " . . \n " , write the result to self . stdout stream .
skip this loop iteration .
obj the function obj with the obj obj and obj , substitute the obj obj and obj .
if not ,
substitute bits and closing and int_part .
define lambda function that that self . file . field field , use it as an argument for property function , put the result in
define __enter__ method with self as the argument .
for every list in dirs ,
if app_labels is true ,
call the method self . _UNK with 0 arguments : token and token , return the result .
call the method form . isoformat , return the result .
for every base and nodelist in nodelist , nodelist ,
for every method self . fields , for every field in result ,
convert data into a string , substitute it for data .
call the function escape with argument escape , substitute the result for escape , assign result for dec_part and dec_part , respectively .
try ,
call the method f . _UNK with an argument list containing an empty string , substitute the result for value under the ' _UNK ' key of the self . namespace .
import module module .
from django . db import connections and DEFAULT_DB_ALIAS into default name space .
property decorator ,
call the self . _UNK method with 0 arguments : string ' _UNK ' , substitute the result for value under the ' _UNK ' key of the self . stream dictionary .
convert self . per_page into a number of integer class , created with an argument result of self . per_page .
method method lru_cache . lru_cache with an argument set to None , as a decorator
if not ,
define the method sign with arguments self and value .
define the method __init__ with 0 arguments : self and index .
cookies is an empty dictionary for ' .
define the method load_template_source with 0 arguments : self , template_name and template_dirs set to None .
derive the class _UNK from Node base class .
token is an tuple containing 0 elements : str and str .
help is a dictionary containing the entry : ' _UNK ' of ' handlers ' for ' name ' for dirname . name , for every name in second element of the result into a string , separated by it .
import module module .
call the method queryset . queryset for the result .
raise an ValidationError with 0 arguments : value under the ' invalid ' key of the self . error_messages dictionary and code set to '
if value under the ' author_link ' key of the self . feed dictionary is not None ,
if value is false ,
if StandardError , renamed to e , exception is caught ,
substitute type of remaining for _UNK .
mixed_subtype is a string ' changed ' .
call the method MIMEText . setdefault with 0 arguments : name . name , tuple with 0 elements : p_pattern and name . name ,
define the method __str__ with an argument self .
register . tag decorator ,
define the method write_message with arguments self and message .
if smtplib . _UNK exception is caught ,
s_len is not None , None is None .
call the method connection . extend with arguments : output , style and output .
substitute first elements of bits and _UNK .
define the method __delitem__ with 0 arguments : self and key .
define the method __iter__ with an argument self .
if is an empty list .
if AttributeError exception is caught ,
if not ,
call the method self . has_leading_dir with an argument name , substitute the result for
raise an CommandError . _UNK with string " %s _UNK in _UNK _UNK ' %s ' . " for %s . %s " , where ' %s ' with i and every key of the function , called with an argument , renamed to result .
if self . match is None or call to the method self . instance . _UNK with an argument name ,
from django . utils import six into default name space .
if value under the ' unique_id ' key of the item dictionary is not None ,
return endpos .
define the method __init__ with 0 arguments : self , template_string set to None , origin set to None .
from django . core . serializers . wsgi import Serializer as _UNK into default name space .
substitute regex for self . regex .
define the method _UNK with arguments self and encoding set to None .
raise an NotImplementedError with argument string ' subclasses of Storage must provide a ( ( ) method ) method ' .
if html_message is true ,
call the method __init__ from the base class of the class AssignmentNode , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
define the method _UNK with an argument self .
call the method self . template_cache .
compile is a string " _UNK with raw s . year " and substitute result for ns .
output is an empty list .
path path into a path , substitute it for path .
call the method __init__ from the base class of the class AssignmentNode , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
call the method handler . addQuickElement with 0 arguments : string ' link ' and value under the ' description ' key of the item
raise a ValueError with an argument string " %s ' %s is not not %s . " . " , where ' %s ' is not __name__ . __name__ . __name__ .
try ,
if values under the " description " and the item dictionary is a item and dictionary under the item list are item is contained to
join elements of msgs into a string , separated by ' , ' , join the result into a string for separated by ' , substitute the result for msgs .
otherwise if first element of row equals a string " " " ,
call the method app from parts at ' at ' at ' . ' , substitute the result for parts .
otherwise if sep is not None ,
can_import_settings is boolean False .
append node to node .
define the method value_from_datadict with 0 arguments : self , data , files and name .
define the function _UNK with 0 arguments : potfile and unpack_ipv0 .
define the function find_commands with an argument k .
substitute callback for self . _request .
call the method self . to_python with an argument value , strip the result of the whitespaces from the value , substitute the result for
derive the class SkipFile with BaseEmailBackend as base class .
define the method __init__ with 0 arguments : self , name , value , attrs , choices and choices .
otherwise if second element of second row of args equals a string ' 0 ' ,
call the function os . _UNK with argument os . path . _UNK os function is not a os . path function ,
call the method self . indent with an argument lib .
define the function dec with an argument func .
if value under the ' author_name ' key of the self . feed dictionary is not None ,
append app_name to app_name .
call the function new_method_proxy with an argument operator . getitem , substitute the result for
define the function _UNK with an argument s .
from django . db import models into default name space .
for every order in return value of the six . text_type ,
if call form . is_valid evaluates to false ,
define the method __init__ with 0 arguments : self , instance , regex , target set to None , flags set to None and ending set to None .
define the function _UNK with arguments model .
substitute key for link , link , link and tb , respectively .
if : : : ' : : : : : is true in result ,
for field . name object of _UNK object , for every value is an instance of the function _UNK , for every value of the self . instance . cleaned_data dictionary , for every key of the self . _UNK dictionary .
attrs dictionary attrs dictionary attrs is not dictionary with initial dictionary , substitute it for initial class , otherwise attrs is an empty dictionary with
if timezone is None , substitute boolean False of the result for boolean . data .
substitute num for self . _leftover .
call the function func with 0 arguments : unpacked list args and unpacked dictionary kwargs
define the method __iter__ with an argument self .
from django . core . mail import FileProxyMixin into default name space .
raise an TypeError exception with 0 arguments : string containing a string ' path : for ' path ' .
if version is None ,
self . _headers is an empty dictionary .
substitute val_expr for self . val_expr .
call the function new_method_proxy with an argument raw " .
call the method os . _UNK , return the result .
with lock ,
substitute bit for bit .
with self . mutex perform ,
if third element of bits is not equal to string ' as ' ,
raise an exception .
if the dictionary under the ' filename ' key of the attrs dictionary , if it doesnt to error_messages .
call the method self . extend_nodelist with 0 arguments : nodelist and token , nodelist and token .
update update dictionary with self . feed .
raise a CommandError in string " " %s %s " . " . %s %s %s in migration _UNK . " for %s " %s " with migration . app_label , with ' %s ' and app_label , respectively .
define the method __init__ with 0 arguments : self , sign and sign of digits .
get ' value ' attribute of the _active object , if it exists substitute it for t , if not is None .
get the next element of the iterable pattern_iter , assign the result for ch and
if timeout is None ,
from django . utils . encoding import force_str into default name space .
if call to the settings . has_header with string ' _UNK ' evaluates to boolean False .
join first value of bytes bytes , substitute it for self . characters .
call the method handler . addQuickElement with 0 arguments : string ' link ' and item .
from __future__ import unicode_literals into default name space .
help is a string " Prints the SQL SQL for the given given name ( s ) the model . " .
raise an NotImplementedError with an argument string ' subclasses of Storage must provide an delete ( ) method ) method ' .
raise an ValidationError with 0 arguments : value under the ' invalid ' key of the self . error_messages dictionary and code set to '
derive the class _UNK from the BaseArchive base class .
substitute old_setting for self . mod .
for every _UNK and _UNK in _UNK _UNK _UNK starting of _UNK . _UNK _UNK and every empty directory ,
call the method app . getElementsByTagName with an argument string ' _wrapped ' , substitute the result for upload .
_UNK is a string " _UNK _UNK _UNK " .
raise _UNK exception with string " _UNK _UNK _UNK _UNK _UNK . _UNK _UNK instead . " .
define the method bpython with an argument self .
self . bad_cookies is an empty set .
if not ,
from django . core . serializers import serializers into default name space .
call the cursor . close method .
if not ,
raise an CommandError exception with an argument string " %s %s %s : %s " , where ' %s ' is replaced with name .
if not ,
define the method __init__ with 0 arguments : self , style set to None , make set to None , make set to None and encoding set to None .
try ,
decorator stringfilter ,
try ,
for every f in self into a string , separated by a string ' %s ' , join them into a string .
update the self . __dict__ dictionary with res .
call the method __getitem__ from the base class of the class URLField , return the result .
substitute settings . TEMPLATE_STRING_IF_INVALID for secret .
self . active_readers is integer 0 .
define the function wrapper with 0 arguments : unpacked list args and unpacked dictionary kwargs .
return boolean False .
answer is a string " _UNK " .
try ,
except ImportError .
for every key in sorted_items ,
sign is an empty string .
define the method __repr__ with argument self .
call the function get_bytes_from_wsgi with an argument string ' _UNK ' , substitute the result for csrf_token .
call the method content . encode with an argument string ' utf-0 ' , substitute the result for content .
define the method media with an argument self .
derive the class CheckMessage from base class CheckMessage .
if integer 0 and 0 if result of the function call to function with 0 arguments : self . data and integer is lesser than integer 0 .
if matches is true ,
break from the loop execution .
call the function user_function with 0 arguments unpacked list args and unpacked dictionary kwds , substitute the result for result .
substitute self . file for self . file .
define the method make_key with self , keys and version set to None as arguments .
call the method ugettext . encode with an argument string " s ' , return
define the method add_fields with 0 arguments : self , form and index .
get the type of the self object , on the result call the method __bool__ with argument self , return the result .
query is an tuple with an initial string ' _UNK ' and ' nodelist ' .
get attr attribute from the self object , if it , substitute it for val .
derive the class FileBasedCache from the Exception base class .
get the value under the key key of the dictionary dictionary , substitute it for self .
from django . utils import six into default name space .
define the method __call__ with arguments self and value .
return _UNK .
while self . tokens ,
call the method __init__ from the base class of the class EmailBackend , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
call the method handler . addQuickElement with 0 arguments : string ' _UNK ' and value under the ' author_email ' key of the self
call the method self . copy . copy , substitute the result for result .
define the method __init__ with 0 arguments : self and source .
write errors to self . stdout .
otherwise if action equals both locale ,
derive the class class from the base class object .
define the method date with an argument self .
if app_config is None ,
if not ,
get value under the self . id key , if it exists substitute it for d .
substitute settings . _UNK for urlconf .
call the function text . _UNK with an argument bit , for every bit in result ,
_UNK the the value under the ' _UNK ' key of the options dictionary .
upload_handlers . encoding .
increment i by 0 .
call the method __init__ . __init__ with argument self .
from django . db import models and DEFAULT_DB_ALIAS into default name space .
if length bits is greater than integer 0 ,
for every value containing out of results of function force_text called with an argument value , for every value in data .
yield and boolean True , return boolean True .
define the method __getstate__ with an argument self .
call the function _UNK with an argument ip_str .
substitute Lexer and Parser for Select and __str__ .
if PY0 PY0 of module module six is boolean True ,
raise an exception .
write errors to self . stdout .
define the method prepare_value with arguments : self and value .
if is an empty list .
if format_module_path is true ,
derive the method _UNK . _UNK with an argument string " _UNK " .
get config dictionary value under ' name ' , if it name , substitute it for name .
define the method __str__ with an argument self .
derive the class Command from the AppCommand base class .
define the method _UNK with an argument self .
for every app_label in app_labels ,
if settings . _UNK is None ,
sum sum by self . per_page , substitute the result for offset .
except KeyError exception is caught ,
append character to ' .
if name is not contained in self . name ,
call the method self . stdout . write write new new write it to it .
define the method start_object with argument self and obj .
_UNK 
return data .
call the method s . s , s ) of result of s by s and s from s ' s ' .
call the function is_valid_ipv0_address with an argument ( substitute the result for s .
if tok starts with ' character ' ,
for every _UNK in _UNK ,
if f . _UNK is true ,
return value under the key key of self . dicts , return filters element .
define the function get_unbound_function with an argument unbound .
substitute values under the ' app_label ' key of the options dictionary .
if self . domain equals to string ' djangojs ' ,
if resolved_path is true ,
return output elements elements .
call the function shutil . handle_file_complete with 0 arguments : changes and filepath .
if self . can_import_settings is true ,
if file path doesnt exists ,
call the function pickle . dumps with argument connection .
return s .
substitute str for ns .
append string ' _UNK ' to new_name , append it .
try ,
do nothing .
return data .
add a list containing 0 elements : value and smart_text .
call the function lazy with tuple int and LOCK_EX .
if not ,
raise an StopIteration exception .
if settings . configured is true ,
call the method __init__ from the base class of the Command class .
call the function _trans . get_language , return the result .
call the method __call__ from the base class of the class ChoiceField , substitute the result for ChoiceField .
for every handler in handlers ,
return a dictionary containing 0 entries : return value of the ' six . MultiValueDict , for return upload .
call the method self . get method key , version the version set to version as arguments , return the key .
if can _UNK is true ,
define the method signature with arguments self and value .
from django . apps import apps into default name space .
call a a function _ with a string ' Enter a value . ' , substitute the result for message .
from django . utils . safestring import SafeData and mark_safe into default name space .
call the function _UNK .
default_error_messages is a dictionary with 0 entries : ' _UNK ' for ' _UNK ' and ' _UNK ' for ' _UNK ' .
from django . utils import six into default name space .
if not ,
_UNK 
call the function _UNK with an argument value , substitute the result for value .
call the function _UNK with an argument ip_str .
if self . asvar is true ,
remove attr element from config dictionary .
internal_use_only is boolean False .
import module module .
call the method __init__ from the base class of the class AssignmentNode , with 0 arguments : unpacked list args and unpacked dictionary kwargs .
call the method archive with an argument request .
call the method token . split_contents , substitute the result for bits .
call the os . process . _UNK with arguments : command and self . _exception_middleware .
derive the class Serializer from the base . Serializer base class .
if not ,
substitute _callback for self . _callback .
call the method self . _cache . add with key and version as arguments , substitute the result for val .
derive the class HttpResponseNotAllowed from the HttpResponse base class .
return ret .
call the method fp . write .
call the function new_method_proxy with argument __str__ , substitute the result for __str__ .
sum the function SafeBytes with an argument tt .
create is a list containing 0 elements : first element containing a string ' _UNK ' and ' _UNK ' , ' _UNK ' for ' _UNK ' , and every _UNK containing value .
call the function _UNK with 0 arguments : string ' _UNK ' , integer set to self . verbosity , code set to integer , verbosity , verbosity set to integer , interactive . _UNK , and set set to integer 0 .
call the method self . __iter__ with an argument data .
call the function _UNK with 0 arguments : string ' _UNK ' and ' _UNK ' .
call the function _UNK , substitute the result for _UNK .
return value .
if callback is an instance of module .
if widget is an instance of ' widget ' and widget is not widget . fields is not contained in widget set in a string
define the method tag with self , db , cursor and now as arguments .
call the method pattern . exc_info , substitute the result for parts .
get config dictionary element under ' cache_key ' key , if it exists substitute it for level , if not , level is None .
call the method sys . stderr . write with an argument string " _UNK : %s " %s " , where ' %s ' is replaced with e . dirpath and e .
derive the class _UNK from the base class _UNK .
skip this loop iteration .
is_usable is boolean False .
opts . fields is a instance of form class instance , created with an instance of form class instance , for form set to form , form . fields , and value under the method widget . key of the kwargs dictionary , and widget dictionary .
for every value of self . data into a value of the c to a string , separated by ' , substitute the result for
if Exception exception is caught ,
call the method m . m , substitute the result for k .
if change equals to empty ,
define the method _UNK with arguments self , _UNK , value and RemovedInDjango00Warning .
property decorator ,
self . _headers is an empty dictionary .
define the method self with arguments self and name .
for every i and i in enumerated iterable self . choices ,
define the function _UNK with 0 arguments value and arg .
split arg by ' , ' , substitute the result for bits .
_UNK ' _UNK ' in the result of _UNK class _UNK _UNK _UNK _UNK _UNK _UNK " , _UNK ) _UNK " with s .
define the function r with an argument data .
call the method self . _UNK with an argument value under the name key of the handler dictionary , substitute it for handler .
define the method format_output with 0 arguments : self and context .
define the method _UNK with 0 arguments : self , unpacked list args and unpacked dictionary kwargs .
call the function password . password with an argument password , substitute the result for defaults .
cc is a dictionary with 0 entries : auto_id ' auto_id for ' auto_id ' for ' auto_id ' for self . auto_id for ' auto_id ' .
call the function new_method_proxy with an argument urlconf_name , substitute substitute result for converter .
substitute i for i .
if AttributeError exception is caught ,
if ValueError exception is caught ,
raise an ValueError exception with string " " convert convert to string " " , where ' %s ' is replaced with key .
from django . utils . module_loading import import_string into default name space .
call the method return value with 0 arguments : return value of the method self . instance . resolve with an argument self . var , if the result is not 0 , return value of the method _UNK .
derive the class _UNK from the object base class .
define the function _UNK with an argument value .
substitute widget for widget .
code is a string ' max_length ' .
terminal_char is a equal to string ' .
trans_real . _mutable is boolean True .
import module os .
strip message_context of ' " characters from both ends , substitute the result for message_context .
substitute token . source for e . django_template_source .
remove all equal to elements from ext .
call the method self . full_clean .
append self to context .
substitute sys . _UNK dictionary _UNK to the sys . _UNK dictionary .
if value is true ,
call the method queryset . queryset . _UNK with an argument dt . _UNK , substitute the result for self . _UNK .
if not ,
if base has an ' declared_fields ' attribute ,
renamed is boolean True .
convert value into a boolean , return it .
call the function force_text with an argument message , return the result .
return result .
if self . asvar is not None ,
append work_file to args .
from django . core . management . base import BaseCommand into default name space .
if not ,
return string ' _UNK ' .
if : ' : : ' and ' is not contained in length of if parts is not in parts ,
extend list with self . errors list with a list , extend it .
call the method self . signature with an argument value , substitute the result for
from django . utils . utils import _UNK and pgettext_lazy into default name space .
if self . can_delete is true ,
decorator stringfilter ,
call the method self . error_class with an argument form , substitute the result for value under the key of the self . fields dictionary
try ,
call the function smart_text with an argument value under the field . tzinfo and return element of the mark_safe dictionary .
define the function _UNK with app_config defaulting to None and dictionary kwargs as arguments ,
substitute last elements of last element of output for output , respectively .
if not ,
substitute value for the link key for context .
call the method field . clean with 0 arguments value and value , substitute the result for value .
write errors to self . stdout .
if arg is contained in string ' _ ' or string ' evaluates True ,
extend mail . extend list with final_output .
call the method parser . compile_filter with an argument tuple , substitute the result for parser .
if ignore is true ,
if self . verbosity is greater or equal to integer 0 ,
join the path and path . _UNK into a file path , substitute it for path .
if not ,
call the method copy . copy with an argument self . _wrapped , substitute the result for data .
if tok is contained in executor . migrated_apps ,
strip the occurrences of header , use it is lowercase with ' - ' for ' _ ' .
except ImportError .
call the function bytes with an argument value , return the result .
output_transaction is boolean True .
call the method apps . virtual_fields . wiht with an argument app_label . app_label , substitute the result for migration .
return a tuple with 0 arguments : self . args and self . args .
try ,
if _file is None ,
define the method close with argument self .
from datetime import datetime into default name space .
from django . core . serializers import serializers into default name space .
define the function to_locale with an argument language .
from functools import UserList into default name space .
if ValueError exception is caught ,
skipped is an empty list .
if content is not None raise an error .
concatenate args to out of the class args , created with 0 arguments : settings . args , substitute the result for args .
endless loop ,
if not ,
call the function mark_safe with an argument words , substitute the result for i-th element
add ext and append the result , substitute the result for statements .
for every message in email_messages ,
if name to lowercase or it .
status_code is an integer 000 .
if data is an instance of bytes ,
for every path in p ,
define the function gettext_noop with an argument message .
decorator deconstructible ,
define the method _has_changed with arguments self , data and initial .
if name is contained in MEDIA_TYPES ,
define the method forbid_multi_line_headers with 0 arguments : name , name and d .
define the function get_language_from_request with 0 arguments : request and check_path set to boolean False .
if if field_type of string ' ( ' ,
if regex_match is false ,
define the function is_protected_type with an argument obj .
call the method _trans . gettext_noop with an argument message .
substitute string for ' _ordering ' key of self dictionary .
call the method connection . _UNK .
define the function dec with an argument func .
__version__ is a string " 0 . 0 . 0 .
call the method self . attach with an argument e .
return boolean False .
substitute self . file for .
_UNK is a list containing 0 elements , containing tuple containing string " " " , " _UNK " , ' _UNK " and " _UNK " .
if _UNK is None ,
define the method tell with an argument self .
derive the class IfNode from the Select base class .
call the function get_format with an argument string ' = ' , substitute the first element of the result for html .
