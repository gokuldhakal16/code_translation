Original comment: if if_is true attrs is an dictionary with initial entry: id_ for ' id ' , if not , attrs is an empty dictionary .
// if <unk> is true , substitute it for attrs , if not substitute id_ for attrs .
Code line 1:  attrs = { 'id' : id_ } if id_ else { }
BLEU = 0.00 (Bravity Penalty=0.625, Length ratio=0.680, Translated length=17, Reference length=25) 
(70.6 / 18.8 / 6.7 / 0.0)

Original comment: if not ,
// if not ,
Code line 2:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: BASE56_ALPHABET is a string ' 23456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz ' .
// loaded_objects_in_fixture is integer <unk> .
Code line 3:  BASE56_ALPHABET = '23456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz'
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: if self . ignore is true and field_name is not contained in model_fields ,
// if self . ignore is true and field_name is not contained in model_fields ,
Code line 4:       if self . ignore and field_name not in model_fields :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if self . value equals self . choice_value , return boolean True , if not , return boolean False .
// return self . value equals self . choice_value .
Code line 5:           return self . value == self . choice_value
BLEU = 22.77 (Bravity Penalty=0.295, Length ratio=0.450, Translated length=9, Reference length=20) 
(100.0 / 75.0 / 71.4 / 66.7)

Original comment: import module types .
// import module types .
Code line 6:  import types
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return value under key key of self dictionary
// return value under the key key of self dictionary .
Code line 7:               return self [ key ]
BLEU = 52.54 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=10, Reference length=8) 
(80.0 / 66.7 / 50.0 / 28.6)

Original comment: substitute value under the ' use_reloader ' key of the options dictionary for use_reloader .
// get the value under the <unk> key of the options dictionary , substitute it for alen .
Code line 8:  use_reloader = options . get ( 'use_reloader' )
BLEU = 31.01 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15) 
(64.7 / 37.5 / 26.7 / 14.3)

Original comment: import rlcompleter .
// import module fnmatch .
Code line 9:                     import rlcompleter
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3) 
(50.0 / 0.0 / 0.0 / 0.0)

Original comment: call the self . _lock . writer method , with the result perform the following ,
// call the self . _lock . writer method , with the result perform the following ,
Code line 10:  with self . _lock . writer ( ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the options . get method with string ' CULL_FREQUENCY ' and integer 3 as arguments , use the string ' cull_frequency ' and previous result as the arguments for the call to the params . get method , substitute the result for cull_frequency .
// get the value under the <unk> key of the params dictionary , if the key doesnt exists return the value under the <unk> key of the params dictionary , if the key doesnt exists return an empty tuple .
Code line 11:    cull_frequency = params . get ( 'cull_frequency' , options . get ( 'CULL_FREQUENCY' , 3 ) )
BLEU = 0.00 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=39, Reference length=45) 
(28.2 / 2.6 / 0.0 / 0.0)

Original comment: strip trailing ' / ' from the script_name string , remove first occurrence of ' / ' in path_info string , append second result to the first , separated with ' / ' , assign the result to self . path .
// self . path is an instance of <unk> class , created with 4 arguments : <unk> , result of the method <unk> . splitlines called with an argument <unk> , and result of the function <unk> , called with 2 arguments : <unk> and integer 1 .
Code line 12:     self . path = '%s/%s' % ( script_name . rstrip ( '/' ) ,  path_info . replace ( '/' , '' , 1 ) )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.119, Translated length=47, Reference length=42) 
(29.8 / 4.3 / 2.2 / 0.0)

Original comment: if bits is false ,
// if bits is false ,
Code line 13:  if not bits :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: skip this loop iteration ,
// skip this loop iteration .
Code line 14:                               continue
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 75.0 / 66.7 / 50.0)

Original comment: for every key in self ,
// for every key in self ,
Code line 15:  for key in self :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute self . literal for value .
// substitute self . literal for value .
Code line 16:                value = self . literal
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every i and ext in enumerated iterable ext_list ,
// for every i and ext in enumerated iterable unhandled_params ,
Code line 17:   for i , ext in enumerate ( ext_list ) :
BLEU = 78.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 75.0 / 71.4)

Original comment: import module sys .
// import module sys .
Code line 18:  import sys
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function local , substitute the result for _active .
// call the function local , substitute the result for _active .
Code line 19:  _active = local ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the connection . creation . sql_for_pending_references method with refto , no_style ( ) and pending_references as arguments , use the result as the argument for the call to the sql . extend method .
// call the method connection . creation . sql_for_pending_references with 3 arguments : refto , no_style ( ) , and pending_references , extend list with the result .
Code line 20:                                   sql . extend ( connection . creation . sql_for_pending_references ( refto , no_style ( ) , pending_references ) )
BLEU = 25.48 (Bravity Penalty=0.744, Length ratio=0.771, Translated length=27, Reference length=35) 
(81.5 / 42.3 / 24.0 / 16.7)

Original comment: property getter decorator ,
// property decorator ,
Code line 21:    @ property
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=3, Reference length=4) 
(100.0 / 50.0 / 0.0 / 0.0)

Original comment: for every i and row in enumerated result of the method connection . introspection . get_table_description called with arguments: cursor and table_name ,
// for every i and row in enumerated result of the method connection . introspection . <unk> ,
Code line 22:  for i , row in enumerate ( connection . introspection . get_table_description ( cursor , table_name ) ) :
BLEU = 62.14 (Bravity Penalty=0.703, Length ratio=0.739, Translated length=17, Reference length=23) 
(94.1 / 87.5 / 86.7 / 85.7)

Original comment: substitute third and first element of bits for key and value , respectively .
// substitute third element of bits for key and second element of bits .
Code line 23:   key , value = bits [ 2 ] , bits [ 0 ]
BLEU = 40.82 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14) 
(69.2 / 50.0 / 36.4 / 30.0)

Original comment: call the method self . connection . ehlo .
// call the method self . connection . ehlo .
Code line 24:  self . connection . ehlo ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if self . save_as_new is true ,
// if self . save_as_new is true ,
Code line 25:  if self . save_as_new :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if etags is false ,
// if etags is false ,
Code line 26:  if not etags :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 27:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: define the method __repr__ with an argument self .
// define the method __repr__ with an argument self .
Code line 28:    def __repr__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: increment doublecolon_len by integer 1 ,
// increment doublecolon_len by one .
Code line 29:               doublecolon_len += 1
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(60.0 / 50.0 / 33.3 / 0.0)

Original comment: call the method msgs . decode with an argument string ' utf-8 ' , substitute the result for msgs .
// call the method msgs . decode with an argument <unk> , substitute the result for msgs .
Code line 30:                   msgs = msgs . decode ( 'utf-8' )
BLEU = 69.43 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: if not ,
// if not ,
Code line 31:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method parser . parse , return the result .
// call the method parser . parse , return the result .
Code line 32:  return parser . parse ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: do nothing .
// do nothing .
Code line 33:                    pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function locale with an argument locale .
// define the function gettext_noop with an argument message .
Code line 34:     def gettext_noop ( message ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(77.8 / 50.0 / 28.6 / 0.0)

Original comment: property decorator ,
// property decorator ,
Code line 35:    @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: EventHandler . modified_code is I18N_MODIFIED .
// substitute I18N_MODIFIED for LockFileEx . modified_code .
Code line 36:                   EventHandler . modified_code = I18N_MODIFIED
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6) 
(57.1 / 16.7 / 0.0 / 0.0)

Original comment: output_transaction is boolean True .
// output_transaction is boolean True .
Code line 37:   output_transaction = True
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: locales is a list with an element locale .
// locales is a list containing locale .
Code line 38:  locales = [ locale ]
BLEU = 36.74 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(85.7 / 66.7 / 40.0 / 25.0)

Original comment: substitute bp for lbp .
// substitute bp for lbp .
Code line 39:           lbp = bp
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if register_to is true ,
// if register_to is true ,
Code line 40:               if register_to :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function write with an argument sep .
// call the function write with an argument sep .
Code line 41:                   write ( sep )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: priority is floating point number 1 . 0 .
// substitute <unk> for priority .
Code line 42:               priority = 1.0
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=5, Reference length=9) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: for every i in range of integers from 0 to length of result , not included ,
// for every i in sequence of result ,
Code line 43:  for i in range ( len ( result ) ) :
BLEU = 16.23 (Bravity Penalty=0.325, Length ratio=0.471, Translated length=8, Reference length=17) 
(87.5 / 71.4 / 50.0 / 20.0)

Original comment: call the method self . _deleted_form_indexes . append with an argument i .
// append i to self . _deleted_form_indexes .
Code line 44:                       self . _deleted_form_indexes . append ( i )
BLEU = 19.31 (Bravity Penalty=0.424, Length ratio=0.538, Translated length=7, Reference length=13) 
(85.7 / 50.0 / 40.0 / 25.0)

Original comment: self . FILES is an instance of MultiValueDict class .
// self . POST is an instance of MultiValueDict class .
Code line 45:  self . FILES = MultiValueDict ( )
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 57.1)

Original comment: call the method MIMEText . __init__ with 4 arguments: self , text , subtype and None .
// call the method MIMEText . __init__ with 5 arguments : self , text , subtype and None .
Code line 46:                  MIMEText . __init__ ( self , text , subtype , None )
BLEU = 71.60 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17) 
(83.3 / 76.5 / 68.8 / 60.0)

Original comment: for every entry in os . listdir function return value called with the argument path ,
// for every entry in return value of the os . makedirs function with path as argument ,
Code line 47:  for entry in os . listdir ( path ) :
BLEU = 22.25 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(82.4 / 31.2 / 13.3 / 7.1)

Original comment: import module sys .
// import module sys .
Code line 48:  import sys
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return output .
// return output .
Code line 49:   return output
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: substitute mapped_tokens for self . tokens .
// substitute mapped_tokens for self . tokens .
Code line 50:    self . tokens = mapped_tokens
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . utils . _os import safe_join into default name space .
// from django . utils . _os import safe_join into default name space .
Code line 51:  from django . utils . _os import safe_join
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return boolean True .
// return boolean True .
Code line 52:                   return True
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . handle_startendtag with tag and attrs as the arguments .
// call the method self . <unk> with 2 arguments tag and attrs .
Code line 53:                    self . handle_startendtag ( tag , attrs )
BLEU = 38.78 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14) 
(84.6 / 50.0 / 36.4 / 20.0)

Original comment: define the method resolve_context with 2 arguments: self and context .
// define the method resolve_context with 2 arguments : self and context .
Code line 54:    def resolve_context ( self , context ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: define the method add_arguments with an argument self and parser .
// define the method add_arguments with 2 arguments self and parser .
Code line 55:    def add_arguments ( self , parser ) :
BLEU = 58.77 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 70.0 / 55.6 / 37.5)

Original comment: try ,
// try ,
Code line 56:           try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: if path is an instance of six . string_types ,
// if path is an instance of six . string_types ,
Code line 57:   if isinstance ( path , six . string_types ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method handler . endElement with an argument string ' channel ' .
// call the method handler . endElement with an argument <unk> .
Code line 58:           handler . endElement ( "channel" )
BLEU = 61.44 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14) 
(90.9 / 80.0 / 77.8 / 75.0)

Original comment: define the method configure_logger with 4 arguments: self , name , config , incremental set to boolean False .
// define the method _truncate_html with 4 arguments : self , name , config and incremental set to boolean False .
Code line 59:      def configure_logger ( self , name , config , incremental = False ) :
BLEU = 50.69 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19) 
(80.0 / 63.2 / 44.4 / 29.4)

Original comment: if val is None ,
// if val is None ,
Code line 60:   if val is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if third element of bits is not equal to a string ' by ' ,
// if second element of bits is None ,
Code line 61:  if bits [ 2 ] != 'by' :
BLEU = 15.95 (Bravity Penalty=0.417, Length ratio=0.533, Translated length=8, Reference length=15) 
(75.0 / 42.9 / 33.3 / 20.0)

Original comment: set result attribute name to value value .
// set name attribute of the result to value .
Code line 62:                   setattr ( result , name , value )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(77.8 / 25.0 / 0.0 / 0.0)

Original comment: convert value into an string , convert the result into an integer and substitute it for value .
// convert value into an floating point number , substitute it for value .
Code line 63:               value = int ( str ( value ) )
BLEU = 33.86 (Bravity Penalty=0.681, Length ratio=0.722, Translated length=13, Reference length=18) 
(76.9 / 58.3 / 45.5 / 30.0)

Original comment: if nodelist_empty is None ,
// if nodelist_empty is None ,
Code line 64:  if nodelist_empty is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: with self . mutex perform ,
// with self . mutex perform ,
Code line 65:           with self . mutex :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class Command from the BaseCommand base class .
// derive the class Command from the BaseCommand base class .
Code line 66:    class Command ( BaseCommand ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: increment i-th element of result by piece .
// increment i-th element of result by piece .
Code line 67:               result [ i ] += piece
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the position in bytes from the start of the file , store it in file_pos .
// call the method file . tell , substitute the result for attr_list .
Code line 68:  file_pos = file . tell ( )
BLEU = 0.00 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17) 
(38.5 / 0.0 / 0.0 / 0.0)

Original comment: if f . unique is true , substitute " UNIQUE " for unique , otherwise unique is an empty string .
// if f . unique is true , or if f . unique is true ,
Code line 69:                   unique = "UNIQUE " if f . unique else ""
BLEU = 31.21 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=15, Reference length=21) 
(73.3 / 50.0 / 38.5 / 33.3)

Original comment: sum value and arg , return the result .
// return value and arg .
Code line 70:               return value + arg
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=5, Reference length=9) 
(100.0 / 50.0 / 33.3 / 0.0)

Original comment: if self . queryset is not None ,
// if self . queryset is not None ,
Code line 71:               if self . queryset is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return errors .
// return errors .
Code line 72:   return errors
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: do nothing .
// do nothing .
Code line 73:                           pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if self . validate_min is true , and length of self . deleted_forms subtracted from the return value of the method self . total_form_count , is smaller than self . min_num ,
// if self . _pk_field is true and length of self . deleted_forms is lesser than self . min_num ,
Code line 74:   if ( self . validate_min and  self . total_form_count ( ) - len ( self . deleted_forms ) < self . min_num ) :
BLEU = 27.46 (Bravity Penalty=0.504, Length ratio=0.594, Translated length=19, Reference length=32) 
(89.5 / 66.7 / 47.1 / 31.2)

Original comment: return ip_str .
// return ip_str .
Code line 75:            return ip_str
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function extract with 2 arguments path and to_path set to empty string .
// define the function extract with 2 arguments : path and to_path set to <unk> .
Code line 76:     def extract ( path , to_path = '' ) :
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(86.7 / 71.4 / 61.5 / 50.0)

Original comment: append model to model_list .
// append model to model_list .
Code line 77:                   model_list . append ( model )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: skip this loop iteration .
// skip this loop iteration .
Code line 78:               continue
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method unifunc . replace with an argument strfunc .
// call the method super_set . replace with an argument management_dir .
Code line 79:  unifunc . replace ( strfunc )
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 60.0 / 44.4 / 25.0)

Original comment: pending_references is a empty dictionary .
// substitute pending_references for pending_references .
Code line 80:  pending_references = { }
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: define the method render with 2 arguments: self and context .
// define the method render with 2 arguments : self and context .
Code line 81:    def render ( self , context ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: from django . utils . translation import trans_real into default namespace .
// from django . utils . translation import trans_real into default name space .
Code line 82:  from django . utils . translation import trans_real
BLEU = 75.39 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12) 
(84.6 / 75.0 / 72.7 / 70.0)

Original comment: define the method parse with an argument self .
// define the method parse with an argument self .
Code line 83:     def parse ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . g , return the result .
// call the method self . g , return the result .
Code line 84:               return self . g ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute self . STDOFFSET for self . DSTOFFSET .
// substitute self . STDOFFSET for self . DSTOFFSET .
Code line 85:               self . DSTOFFSET = self . STDOFFSET
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: break from the endless loop .
// break from the loop execution .
Code line 86:                   break
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 40.0 / 25.0 / 0.0)

Original comment: define the function build_instance with 3 arguments: Model , data and db .
// define the function EmailMultiAlternatives with arguments Model , data and db .
Code line 87:      def build_instance ( Model , data , db ) :
BLEU = 50.17 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13) 
(83.3 / 63.6 / 50.0 / 33.3)

Original comment: substitute newretval for retval .
// substitute CheckboxChoiceInput for retval .
Code line 88:                       retval = newretval
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: call the method parser . add_library with an argument lib .
// call the method parser . add_library with an argument lib .
Code line 89:  parser . add_library ( lib )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method is_hidden with an argument self .
// define the method is_hidden with an argument self .
Code line 90:  def is_hidden ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function next_space_index with 2 arguments: subject and i , substitute the result for i .
// call the function next_space_index with 2 arguments subject and i , substitute the result for i .
Code line 91:     i = next_space_index ( subject , i )
BLEU = 82.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: from django . db . migrations . writer import MigrationWriter into default name space .
// from django . db . migrations . writer import MigrationWriter into default name space .
Code line 92:  from django . db . migrations . writer import MigrationWriter
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method parser . delete_first_token .
// call the method parser . delete_first_token .
Code line 93:  parser . delete_first_token ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if ValueError or TypeError exceptions occurred ,
// if TypeError or ValueError exceptions are caught ,
Code line 94:   except ( ValueError , TypeError ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7) 
(75.0 / 0.0 / 0.0 / 0.0)

Original comment: split string pks by ' , ' , substitute the result for primary_keys .
// split pks by <unk> , substitute the result for primary_keys .
Code line 95:               primary_keys = pks . split ( ',' )
BLEU = 49.36 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14) 
(90.9 / 70.0 / 55.6 / 50.0)

Original comment: from django . conf import settings into default namespace .
// from django . conf import settings into default name space .
Code line 96:           from django . conf import settings
BLEU = 69.89 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(81.8 / 70.0 / 66.7 / 62.5)

Original comment: call the method base64 . urlsafe_b64encode with an argument s , on the result call the strip function with ' = ' as the argument , return the result .
// call the method base64 . combining with an argument s , strip the result of whitespaces from <unk> , return the result .
Code line 97:       return base64 . urlsafe_b64encode ( s ) . strip ( b'=' )
BLEU = 36.42 (Bravity Penalty=0.738, Length ratio=0.767, Translated length=23, Reference length=30) 
(78.3 / 59.1 / 42.9 / 30.0)

Original comment: return result .
// return result .
Code line 98:    return result
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: self . changed_objects is an empty list .
// self . saved_forms is an empty list .
Code line 99:           self . changed_objects = [ ]
BLEU = 59.46 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 71.4 / 50.0 / 40.0)

Original comment: call the method self . clean , substitute the result for cleaned_data .
// call the method self . clean , substitute the result for cleaned_data .
Code line 100:               cleaned_data = self . clean ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . core import checks into default name space .
// from django . core import checks into default name space .
Code line 101:  from django . core import checks
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function assertRaisesRegex with 3 arguments: self , unpacked list args and unpacked dictionary kwargs .
// define the method _truncate_html with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .
Code line 102:     def assertRaisesRegex ( self , * args , ** kwargs ) :
BLEU = 58.54 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17) 
(77.8 / 64.7 / 50.0 / 46.7)

Original comment: call the function _checkLevel with an argument level , use the result as an argument for the call to the method logger . setLevel .
// call the function _checkLevel with an argument level , use the result as an argument for the call to the function logger . setLevel .
Code line 103:               logger . setLevel ( _checkLevel ( level ) )
BLEU = 88.95 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25) 
(96.0 / 91.7 / 87.0 / 81.8)

Original comment: call the the method __init__ from the base class of the class Context .
// call the method __init__ from the base class of the class Context , with an argument dict_ .
Code line 104:  super ( Context , self ) . __init__ ( dict_ )
BLEU = 61.19 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=18, Reference length=14) 
(72.2 / 64.7 / 56.2 / 53.3)

Original comment: try ,
// try ,
Code line 105:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: from django . utils . html import escape into default name space .
// from django . utils . html import escape into default name space .
Code line 106:  from django . utils . html import escape
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every migration_name in migration_names ,
// for every migration_name in MEDIA_TYPES ,
Code line 107:  for migration_name in migration_names :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: return None .
// return None .
Code line 108:               return None
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: delete self . name attribute from the obj . __class__ object .
// delete the object object with arguments obj and self . name .
Code line 109:   delattr ( obj . __class__ , self . name )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(66.7 / 18.2 / 10.0 / 0.0)

Original comment: call the method middleware . process_response with 2 arguments: request and response , return the result .
// call the method middleware . process_response with 2 arguments : request and response , return the result .
Code line 110:                           return middleware . process_response ( request , response )
BLEU = 77.78 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17) 
(88.9 / 82.4 / 75.0 / 66.7)

Original comment: if show_traceback is true ,
// if traceback is true ,
Code line 111:               if show_traceback :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: import module os .
// import module os .
Code line 112:  import os
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . _changed_data is an empty list .
// self . _changed_data is an empty list .
Code line 113:               self . _changed_data = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if string " ' format ' " is not contained in e converted into a string ,
// if <unk> is not contained in te ,
Code line 114:                   if "'format'" not in str ( te ) :
BLEU = 12.42 (Bravity Penalty=0.325, Length ratio=0.471, Translated length=8, Reference length=17) 
(75.0 / 42.9 / 33.3 / 20.0)

Original comment: multiply offset . days , integer 24 and integer 60 , sum the result with floored result of dividing offset . seconds by integer 60 , substitute the result for timezone .
// multiply offset . days by integer 60 , append the result to timezone . seconds , append the result to timezone . seconds , substitute the result for timezone .
Code line 115:  timezone = ( offset . days * 24 * 60 ) + ( offset . seconds // 60 )
BLEU = 36.87 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=30, Reference length=32) 
(70.0 / 48.3 / 32.1 / 22.2)

Original comment: if self . _wrapped is empty ,
// if self . _wrapped is empty ,
Code line 116:   if self . _wrapped is empty :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute language for self . __language .
// substitute language for self . __language .
Code line 117:   self . __language = language
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class Node from object base class .
// derive the class Node from the object base class .
Code line 118:    class Node ( object ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: if lib is true ,
// if lib is true ,
Code line 119:  if lib :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute save_m2m for form . save_m2m .
// substitute test_runner for form . save_m2m .
Code line 120:             form . save_m2m = save_m2m
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: python_2_unicode_compatible decorator ,
// python_2_unicode_compatible decorator ,
Code line 121:      @ python_2_unicode_compatible
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: return an empty string .
// return <unk> .
Code line 122:           return ''
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=3, Reference length=5) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 123:     else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method self . parent_widget . render with unpacked list args as an argument , return the result .
// call the method self . sync_apps . render with an argument unpacked list args , return the result .
Code line 124:   return self . parent_widget . render ( * args )
BLEU = 50.53 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20) 
(94.7 / 72.2 / 47.1 / 25.0)

Original comment: if should_convert is true , call the function localtime with an argument value and return the result , otherwise return value .
// if <unk> is true , return boolean True , otherwise return boolean False .
Code line 125:  return localtime ( value ) if should_convert else value
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=14, Reference length=22) 
(64.3 / 30.8 / 16.7 / 0.0)

Original comment: parse_until is an empty list ,
// parse_until is an empty list .
Code line 126:               parse_until = [ ]
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: call the function check_for_language with an argument lang , if it evaluates to false ,
// call the function check_for_language with an argument lang , if it evaluates to false ,
Code line 127:  if not check_for_language ( lang ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: remove the first element from colors , substitute it for fg .
// remove first element from colors , substitute it for fg .
Code line 128:  fg = colors . pop ( )
BLEU = 83.52 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12) 
(100.0 / 90.0 / 88.9 / 87.5)

Original comment: for v in return value of the function match . groups , convert v into an integer and append i to a list , assign the result for year_val , month_val and day_val , respectively .
// for every v in match of the method match . groups , called with an argument v , for every v in the result of the method pattern_iter . groups ,
Code line 129:                           year_val , month_val , day_val = [ int ( v ) for v in match . groups ( ) ]
BLEU = 10.91 (Bravity Penalty=0.851, Length ratio=0.861, Translated length=31, Reference length=36) 
(54.8 / 20.0 / 6.9 / 3.6)

Original comment: define the method label_from_instance with 2 arguments: self and obj .
// define the method _format_value with 2 arguments : self and obj .
Code line 130:     def label_from_instance ( self , obj ) :
BLEU = 34.17 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(75.0 / 54.5 / 30.0 / 11.1)

Original comment: replace ' %s ' in string " ' %s ' already exists " with top_dir , substitute it for message .
// divide <unk> by integer <unk> , substitute the result for message .
Code line 131:                       message = "'%s' already exists" % top_dir
BLEU = 0.00 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=12, Reference length=21) 
(41.7 / 27.3 / 10.0 / 0.0)

Original comment: divide timezone by integer 60 , substitute the quotient of the division for hour and reminder for minute .
// divide timezone by integer 60 , substitute the result for hour and reminder .
Code line 132:  hour , minute = divmod ( timezone , 60 )
BLEU = 49.95 (Bravity Penalty=0.700, Length ratio=0.737, Translated length=14, Reference length=19) 
(92.9 / 76.9 / 66.7 / 54.5)

Original comment: if tag is contained in self . CDATA_CONTENT_ELEMENTS ,
// if tag is contained in self . <unk> ,
Code line 133:  if tag in self . CDATA_CONTENT_ELEMENTS :
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: for every f in fields ,
// for every f in fields ,
Code line 134:  for f in fields :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: finally perform ,
// finally perform ,
Code line 135:      finally :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if lang_code is contained in _supported and lang_code is not None and result of the function check_for_language , called with an argument lang_code is true ,
// if lang_code is contained in _supported and lang_code is not None and call to the function check_for_language with an argument lang_code , evaluates to true ,
Code line 136:  if lang_code in _supported and lang_code is not None and check_for_language ( lang_code ) :
BLEU = 60.67 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=26, Reference length=26) 
(84.6 / 68.0 / 54.2 / 43.5)

Original comment: if IndexError exception is caught ,
// if IndexError exception is caught ,
Code line 137:   except IndexError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: with the call to the transaction . atomic method with using set to connection . alias , savepoint set to connection . features . can_rollback_ddl as arguments ,
// with call to the function transaction . atomic with using set to connection . alias , and savepoint set to connection . features . can_rollback_ddl , with the result ,
Code line 138:   with transaction . atomic ( using = connection . alias , savepoint = connection . features . can_rollback_ddl ) :
BLEU = 56.39 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=30, Reference length=28) 
(83.3 / 65.5 / 50.0 / 37.0)

Original comment: if not ,
// if not ,
Code line 139:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: for every filename in gen_filenames ( ) ,
// call the function gen_filenames , for every filename in the result ,
Code line 140:  for filename in gen_filenames ( ) :
BLEU = 23.46 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=12, Reference length=8) 
(50.0 / 27.3 / 20.0 / 11.1)

Original comment: define the method __deepcopy__ with 3 arguments: self and memo .
// define the method __deepcopy__ with 2 arguments : self and memo .
Code line 141:    def __deepcopy__ ( self , memo ) :
BLEU = 53.11 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(75.0 / 63.6 / 50.0 / 33.3)

Original comment: substitute self . _stream for stream .
// substitute self . _stream for stream .
Code line 142:    stream = self . _stream
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function center with 2 arguments value and arg .
// define the function firstof with 2 arguments value and arg .
Code line 143:  def center ( value , arg ) :
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: define the method render with 4 arguments: self , name , value and attrs set to None .
// define the method render with 4 arguments : self , name , value and attrs set to None .
Code line 144:    def render ( self , name , value , attrs = None ) :
BLEU = 79.13 (Bravity Penalty=1.000, Length ratio=1.056, Translated length=19, Reference length=18) 
(89.5 / 83.3 / 76.5 / 68.8)

Original comment: substitute key for result . key .
// substitute key for result . key .
Code line 145:  result . key = key
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: settings . USE_I18N is boolean True .
// settings . USE_I18N is boolean True .
Code line 146:               settings . USE_I18N = True
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if ImportError exception occurred ,
// if ImportError exception is caught ,
Code line 147:   except ImportError :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5) 
(66.7 / 40.0 / 25.0 / 0.0)

Original comment: slice chunk list to get the last rollback elements , if the new list is not empty ,
// if first last elements of chunk is false ,
Code line 148:                 if not chunk [ : - rollback ] :
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=9, Reference length=18) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: return the result of the call to the function chain , with an argument unpacked list , containing the result of the function , format_html called with 3 arguments: string ' <link href= " { 0 } " type= " text/css " media= " { 1 } " rel= " stylesheet " /> ' , return value of the function self . absolute_path called with an argument path and medium , for every medium in media and for every path in value under the medium key of the self . _css dictionary .
// call the function chain with an argument list with 2 elements : return value of the function format_html called with 2 arguments : unpacked list <unk> and return value of the function no_style called with an argument : result of the function flatatt called with an argument : result of the function flatatt called with an argument : result of the function flatatt called with an argument path , for every path in media , for every medium in media .
Code line 149:  return chain ( * [  [ format_html ( '<link href="{0}" type="text/css" media="{1}" rel="stylesheet" />' , self . absolute_path ( path ) , medium )  for path in self . _css [ medium ] ]  for medium in media ] )
BLEU = 23.51 (Bravity Penalty=0.862, Length ratio=0.871, Translated length=81, Reference length=93) 
(58.0 / 36.2 / 22.8 / 11.5)

Original comment: delete the attribute name from the cache dictionary under the DEFAULT_CACHE_ALIAS key .
// get attribute name from value under the DEFAULT_CACHE_ALIAS key of caches dictionary , return it .
Code line 150:           return delattr ( caches [ DEFAULT_CACHE_ALIAS ] , name )
BLEU = 23.58 (Bravity Penalty=1.000, Length ratio=1.231, Translated length=16, Reference length=13) 
(56.2 / 33.3 / 21.4 / 7.7)

Original comment: import module re .
// import module re .
Code line 151:  import re
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 152:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: for every handler in handlers ,
// for every handler in handlers ,
Code line 153:      for handler in handlers :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: fill_to is an integer 8 .
// new_second_item is an integer 7 .
Code line 154:           fill_to = 8
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(66.7 / 40.0 / 25.0 / 0.0)

Original comment: if value equals self . empty_value or value is contained in self . empty_values ,
// if value equals self . empty_value or value is contained in self . empty_values ,
Code line 155:  if value == self . empty_value or value in self . empty_values :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: index_output is an empty list .
// mapped_tokens is an empty list .
Code line 156:  index_output = [ ]
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: substitute fail_silently for self . fail_silently .
// substitute fail_silently for self . fail_silently .
Code line 157:           self . fail_silently = fail_silently
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . activated is boolean False .
// self . activated is boolean False .
Code line 158:               self . activated = False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method to_python with arguments self and value .
// define the method to_python with arguments self and value .
Code line 159:     def to_python ( self , value ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: modified_code is None .
// _cookie_allows_colon_in_names is None .
Code line 160:           modified_code = None
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(75.0 / 66.7 / 50.0 / 0.0)

Original comment: substitute self . _wrapped for repr_attr .
// substitute self . _wrapped for <unk> .
Code line 161:               repr_attr = self . _wrapped
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: define the function safe_join with 2 arguments base and unpacked dictionary paths .
// define the function safe_join with 2 arguments : base and unpacked list paths .
Code line 162:     def safe_join ( base , * paths ) :
BLEU = 57.31 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(85.7 / 69.2 / 50.0 / 36.4)

Original comment: if key is contained in d ,
// if key is contained in d ,
Code line 163:               if key in d :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: create_models is an empty list .
// created_models is an empty list .
Code line 164:               created_models = [ ]
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: try ,
// try ,
Code line 165:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: if num is greater than self . _max_entries ,
// if num is greater than self . _max_entries ,
Code line 166:  if num > self . _max_entries :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: break the loop execution .
// break from the loop execution .
Code line 167:                                        break
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: run_syncdb is boolean False .
// run_syncdb is boolean False .
Code line 168:     run_syncdb = False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: _iteritems is a string " iteritems " .
// _iteritems is integer <unk> .
Code line 169:  _iteritems = "iteritems"
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: substitute offset for self . __offset .
// substitute offset for self . __offset .
Code line 170:               self . __offset = offset
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if max_age is not None ,
// if max_age is not None ,
Code line 171:  if max_age is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method to_python with arguments self and value .
// define the method to_python with arguments self and value .
Code line 172:     def to_python ( self , value ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if expires is false ,
// if expires is false ,
Code line 173:   if not expires :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: locales is relative complement of set exclude in set locales .
// locales is a difference between the locales and exclude sets .
Code line 174:  locales = set ( locales ) - set ( exclude )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(45.5 / 10.0 / 0.0 / 0.0)

Original comment: property decorator ,
// property decorator ,
Code line 175:    @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the function warnings . warn with 3 arguments: string " django . utils . importlib will be removed in Django 1 . 9 . " , RemovedInDjango19Warning and stacklevel set to integer 2 .
// call the function warnings . warn with 3 arguments : <unk> , warnings and stacklevel set to integer 2 .
Code line 176:    warnings . warn ( "django.utils.importlib will be removed in Django 1.9." ,  RemovedInDjango19Warning , stacklevel = 2 )
BLEU = 30.64 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=20, Reference length=35) 
(80.0 / 68.4 / 61.1 / 52.9)

Original comment: if not ,
// if not ,
Code line 177:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: return callback and a empty string .
// return callback and <unk> .
Code line 178:           return callback , ''
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=5, Reference length=7) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: define the method render with 2 arguments: self and context .
// define the method render with 2 arguments : self and context .
Code line 179:    def render ( self , context ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: delete value under the key key of dictionary at last element of self . dicts .
// delete the value under the key key of the self . dicts dictionary .
Code line 180:  del self . dicts [ - 1 ] [ key ]
BLEU = 41.48 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16) 
(85.7 / 53.8 / 41.7 / 27.3)

Original comment: substitute name for old_attr .
// substitute name for old_attr .
Code line 181:                   old_attr = name
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . make_key with key and version set to version as arguments , substitute the result for key .
// call the method self . make_key with key and version set to version as arguments , substitute the result for key .
Code line 182:  key = self . make_key ( key , version = version )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=22, Reference length=22) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function parser . compile_filter with an argument arg for every arg in args from first element to the end , append the results into a list , substitute it for value .
// call the method parser . compile_filter with an argument arg , for every arg in args without the first element , substitute the result for values .
Code line 183:           values = [ parser . compile_filter ( arg ) for arg in args [ 1 : ] ]
BLEU = 33.15 (Bravity Penalty=0.772, Length ratio=0.794, Translated length=27, Reference length=34) 
(85.2 / 50.0 / 32.0 / 25.0)

Original comment: self . m2m_data is None .
// self . m2m_data is None .
Code line 184:       self . m2m_data = None
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 185:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the function digest twice , substitute the results for inner , outer , respectively .
// call the function digest , assign the result to inner and varkw , respectively .
Code line 186:   inner , outer = digest ( ) , digest ( )
BLEU = 24.34 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16) 
(66.7 / 35.7 / 23.1 / 8.3)

Original comment: call the function _check_boolean_field_default_value with dictionary kwargs as argument , use the result as an argument for the call to the function errors . extend .
// call the function _check_test_runner with dictionary kwargs as argument , use the result as an argument for the call to the function errors . extend .
Code line 187:  errors . extend ( _check_boolean_field_default_value ( ** kwargs ) )
BLEU = 89.42 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=26, Reference length=26) 
(96.2 / 92.0 / 87.5 / 82.6)

Original comment: substitute choices for self . choices .
// substitute choices for self . choices .
Code line 188:  self . choices = choices
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method get_host with an argument self .
// define the method has_leading_dir with an argument self .
Code line 189:    def get_host ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: if not ,
// if not ,
Code line 190:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: replace ' %s ' in string " %s = %s " with key and value under the key key of the user_setting dictionary , append it to the output .
// append value under key key of the <unk> dictionary , append it to output .
Code line 191:                   output . append ( "%s = %s" % ( key , user_settings [ key ] ) )
BLEU = 17.70 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=15, Reference length=30) 
(86.7 / 64.3 / 38.5 / 25.0)

Original comment: from django . utils import six into default name space .
// from django . utils import six into default name space .
Code line 192:  from django . utils import six
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . utils import formats and six into default name space .
// from django . utils import formats and six into default name space .
Code line 193:  from django . utils import formats , six
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function force_text with an argument s , strip the result of whitespaces from both ends , replace every occurrence of whitespaces in the previous result for ' _ ' , substitute the result for s .
// call the function force_text with an argument s , call the strip method on the result with an argument string ' ' , ' , substitute the result for s .
Code line 194:  s = force_text ( s ) . strip ( ) . replace ( ' ' , '_' )
BLEU = 40.99 (Bravity Penalty=0.798, Length ratio=0.816, Translated length=31, Reference length=38) 
(74.2 / 53.3 / 44.8 / 39.3)

Original comment: call the method f . formfield with an argument , unpacked dictionary kwargs , substitute the result for formfield .
// call the method f . formfield with an argument unpacked dictionary kwargs , substitute the result for formfield .
Code line 195:               formfield = f . formfield ( ** kwargs )
BLEU = 86.06 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20) 
(100.0 / 94.4 / 88.2 / 81.2)

Original comment: if self has an ' _get ' attribute ,
// if self has an attribute <unk> ,
Code line 196:  if hasattr ( self , '_get' ) :
BLEU = 34.19 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(85.7 / 50.0 / 40.0 / 25.0)

Original comment: derive the class ChoiceField from the base class Field class .
// derive the class ChoiceField from the base class Field class .
Code line 197:      class ChoiceField ( Field ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __init__ with an argument self .
// define the method __init__ with an argument self .
Code line 198:       def __init__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: replace ' %s ' in string ' , HTTP response headers must be in %s format ' for charset , append it to e . reason .
// append string " <unk> ( <unk> are not be in %s <unk> " , where ' %s ' is replaced with charset .
Code line 199:                   e . reason += ', HTTP response headers must be in %s format' % charset
BLEU = 0.00 (Bravity Penalty=0.840, Length ratio=0.852, Translated length=23, Reference length=27) 
(47.8 / 18.2 / 9.5 / 0.0)

Original comment: otherwise , if first and the last character of attrvalue are ' \ ' charter or first and last character of attrvalue are ' " ' character ,
// otherwise if value under the ' : ' key of the options dictionary equals to string " <unk> : ( <unk> ) : " ,
Code line 200:   elif ( attrvalue [ : 1 ] == '\'' == attrvalue [ - 1 : ] or  attrvalue [ : 1 ] == '"' == attrvalue [ - 1 : ] ) :
BLEU = 0.00 (Bravity Penalty=0.887, Length ratio=0.893, Translated length=25, Reference length=28) 
(32.0 / 0.0 / 0.0 / 0.0)

Original comment: derive the class FieldError from the Exception base class .
// derive the class FieldError from the Exception base class .
Code line 201:     class FieldError ( Exception ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if safe is not None ,
// if safe is not None ,
Code line 202:  if safe is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the value under the ' HTTP_ACCEPT_LANGUAGE ' key of the request . META dictionary , if it exists substitute it for accept , if not accept is an empty string .
// call the method request . META . get with 2 arguments : <unk> and <unk> .
Code line 203:    accept = request . META . get ( 'HTTP_ACCEPT_LANGUAGE' , '' )
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=16, Reference length=32) 
(37.5 / 13.3 / 7.1 / 0.0)

Original comment: define the method unget with arguments self and bytes .
// define the method unget with arguments self and bytes .
Code line 204:    def unget ( self , bytes ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: MAX_NUM_FORM_COUNT is a string ' MAX_NUM_FORMS ' .
// <unk> is integer <unk> .
Code line 205:  MAX_NUM_FORM_COUNT = 'MAX_NUM_FORMS'
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: call the method self . format with an argument string ' 0 ' , substitute the result for name .
// call the method self . format with an argument <unk> , substitute the result for name .
Code line 206:               name = self . format ( 'O' )
BLEU = 69.43 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: call the method handler . addQuickElement with 2 arguments: string ' link ' and value under the ' link ' key of the item dictionary .
// call the method handler . addQuickElement with 2 arguments : <unk> and value under the <unk> key of the item dictionary .
Code line 207:  handler . addQuickElement ( "link" , item [ 'link' ] )
BLEU = 53.23 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=22, Reference length=26) 
(81.8 / 71.4 / 60.0 / 47.4)

Original comment: if categories is true ,
// if categories is true ,
Code line 208:  if categories :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method parser . add_argument with 6 arguments: string ' --extension ' , string ' -e ' , dest set to string ' extensions ' , action set to ' append ' , default is a list containing string ' py ' and help set to string: ' The file extension ( s ) to render ( default: " py " ) . Separate multiple extensions with commas , or use -e multiple times . ' .
// call the method parser . add_argument with 5 arguments : <unk> , <unk> set to string ' <unk> ' , dest set to string ' <unk> ' , default set to <unk> , and help set to string ' <unk> <unk> <unk> : <unk> <unk> <unk> ' , substitute the result for parser . add_argument .
Code line 209:  parser . add_argument ( '--extension' , '-e' , dest = 'extensions' ,  action = 'append' , default = [ 'py' ] ,  help = 'The file extension(s) to render (default: "py"). '  'Separate multiple extensions with commas, or use '  '-e multiple times.' )
BLEU = 21.06 (Bravity Penalty=0.675, Length ratio=0.718, Translated length=56, Reference length=78) 
(60.7 / 38.2 / 24.1 / 17.0)

Original comment: define the method _isdst with 2 arguments self and dt .
// define the method _isdst with 2 arguments self and dt .
Code line 210:     def _isdst ( self , dt ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if value under the ' enclosure ' key of the item dictionary is not None ,
// if value under the <unk> key of the item dictionary is not None ,
Code line 211:     if item [ 'enclosure' ] is not None :
BLEU = 67.84 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16) 
(92.9 / 84.6 / 75.0 / 63.6)

Original comment: call the function _get_model with an argument value under the ' model ' key of the d dictionary , substitute the result for Model .
// Model is an instance of RenderContext class , created with value under the <unk> key of dictionary d .
Code line 212:               Model = _get_model ( d [ "model" ] )
BLEU = 0.00 (Bravity Penalty=0.729, Length ratio=0.760, Translated length=19, Reference length=25) 
(63.2 / 16.7 / 5.9 / 0.0)

Original comment: define the method writer with an argument self .
// define the method writer with an argument self .
Code line 213:  def writer ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: page_range is a property object with _get_page_range as a getter method .
// <unk> is a property object of this class .
Code line 214:   page_range = property ( _get_page_range )
BLEU = 22.61 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12) 
(55.6 / 37.5 / 28.6 / 16.7)

Original comment: define the method create_variable_node with 2 arguments self and filter_expression .
// define the method create_variable_node with 2 arguments : self and filter_expression .
Code line 215:    def create_variable_node ( self , filter_expression ) :
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(91.7 / 81.8 / 70.0 / 55.6)

Original comment: define the function resolve with arguments path and urlconf set to None .
// define the function resolve with 2 arguments : path and urlconf set to None .
Code line 216:      def resolve ( path , urlconf = None ) :
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13) 
(86.7 / 71.4 / 61.5 / 50.0)

Original comment: obj . _constructor_args is a tuple with 2 elements: args and kwargs .
// obj is an tuple with 2 elements : args and kwargs .
Code line 217:  obj . _constructor_args = ( args , kwargs )
BLEU = 30.04 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13) 
(75.0 / 45.5 / 30.0 / 11.1)

Original comment: for every key_value in natural ,
// for every key_value in natural ,
Code line 218:  for key_value in natural :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function verbatim with 2 arguments: parser and token .
// define the function verbatim with 2 arguments : parser and token .
Code line 219:  def verbatim ( parser , token ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: if changed is false ,
// if squash is false ,
Code line 220:    if not changed :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: substitute value under the ' use_threading ' key of the options dictionary for threading .
// get the value under the <unk> key of the options dictionary , substitute it for threading .
Code line 221:   threading = options . get ( 'use_threading' )
BLEU = 36.01 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15) 
(70.6 / 50.0 / 33.3 / 14.3)

Original comment: call the function warnings . warn with an argument string " ``--natural`` is deprecated; use ``--natural-foreign`` instead . " , and RemovedInDjango19Warning .
// call the function warnings . warn with 2 arguments : <unk> set to <unk> <unk> <unk> <unk> <unk> .
Code line 222:               warnings . warn ( "``--natural`` is deprecated; use ``--natural-foreign`` instead." ,  RemovedInDjango19Warning )
BLEU = 25.82 (Bravity Penalty=0.810, Length ratio=0.826, Translated length=19, Reference length=23) 
(42.1 / 33.3 / 29.4 / 25.0)

Original comment: try ,
// try ,
Code line 223:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: call the function color_style , substitute the result for self . style .
// call the color_style method , substitute the result for self . style .
Code line 224:           self . style = color_style ( )
BLEU = 71.70 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 75.0 / 63.6 / 60.0)

Original comment: derive the class JsonResponse from the HttpResponse base class .
// derive the class RWLock from the HttpResponse base class .
Code line 225:     class JsonResponse ( HttpResponse ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: from django . core . management . base import BaseCommand and CommandError into default name space .
// from django . core . management . base import BaseCommand and CommandError into default name space .
Code line 226:  from django . core . management . base import BaseCommand , CommandError
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class SimpleLazyObject from the LazyObject base class .
// derive the class SimpleLazyObject from the LazyObject base class .
Code line 227:    class SimpleLazyObject ( LazyObject ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return _translations dictionary value , under the language key .
// return value under the language key of the _translations dictionary .
Code line 228:   return _translations [ language ]
BLEU = 30.88 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(81.8 / 40.0 / 22.2 / 12.5)

Original comment: call the method self . style . NOTICE with an argument string " Run ' python manage . py migrate ' to apply them . \n " , write it to self . stdout .
// call the method self . style . NOTICE with an argument <unk> , use the result as an argument for the call to the self . style . NOTICE method , write the result to self . stdout .
Code line 229:  self . stdout . write ( self . style . NOTICE ( "Run 'python manage.py migrate' to apply them.\n" ) )
BLEU = 37.20 (Bravity Penalty=1.000, Length ratio=1.114, Translated length=39, Reference length=35) 
(53.8 / 39.5 / 32.4 / 27.8)

Original comment: return s .
// return s .
Code line 230:           return s
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the function make_origin with 4 arguments: display_name , self . load_template_source , template_name and template_dirs , substitute the result for origin .
// call the function make_origin with 4 arguments : display_name , self . load_template_source and template_dirs , substitute the result for origin .
Code line 231:  origin = make_origin ( display_name , self . load_template_source , template_name , template_dirs )
BLEU = 70.62 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23) 
(90.9 / 81.0 / 70.0 / 57.9)

Original comment: call the method appendlist with 2 arguments: key and value .
// call the method self . appendlist with 2 arguments : key and value .
Code line 232:                   self . appendlist ( key , value )
BLEU = 32.86 (Bravity Penalty=1.000, Length ratio=1.273, Translated length=14, Reference length=11) 
(71.4 / 53.8 / 33.3 / 9.1)

Original comment: import module errno .
// import module errno .
Code line 233:  import errno
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if value is not contained in result ,
// if value is not contained in result ,
Code line 234:   if value is not result :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if AttributeError exception is caught ,
// if AttributeError exception is caught ,
Code line 235:   except AttributeError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . apps import apps into default name space .
// from django . apps import apps into default name space .
Code line 236:   from django . apps import apps
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the value under the name key of the data dictionary , if it exists return it , if not return None .
// get the value under the name key of the data dictionary , if it exists return it , if not , return None .
Code line 237:   return data . get ( name , None )
BLEU = 88.44 (Bravity Penalty=1.000, Length ratio=1.043, Translated length=24, Reference length=23) 
(95.8 / 91.3 / 86.4 / 81.0)

Original comment: if p is greater or equal to integer 0 ,
// if p is greater or equal to integer 0 ,
Code line 238:  if p >= 0 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method node . hasAttribute with string ' pk ' as an argument , if it evaluates to true ,
// call the method node . <unk> with an argument <unk> , if it evaluates to true ,
Code line 239:  if node . hasAttribute ( 'pk' ) :
BLEU = 48.23 (Bravity Penalty=0.790, Length ratio=0.810, Translated length=17, Reference length=21) 
(88.2 / 68.8 / 53.3 / 42.9)

Original comment: append self . fk . name to form . _meta . fields .
// append self . fk . name to form . _meta . name , respectively .
Code line 240:   form . _meta . fields . append ( self . fk . name )
BLEU = 71.66 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13) 
(80.0 / 71.4 / 69.2 / 66.7)

Original comment: increment i by integer 1 ,
// increment i by integer 1 .
Code line 241:  i += 1
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: format string ' pgettext ( %r , %r ) ' with message_context and g , write it to out .
// replace ' %s ' in string ' <unk> <unk> ' with message_context of ' <unk> ' with message_context , write it to out .
Code line 242:   out . write ( ' pgettext(%r, %r) ' % ( message_context , g ) )
BLEU = 26.82 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=24, Reference length=20) 
(45.8 / 34.8 / 22.7 / 14.3)

Original comment: derive the class MultipleHiddenInput from the HiddenInput base class .
// derive the class MultipleHiddenInput from the HiddenInput base class .
Code line 243:     class MultipleHiddenInput ( HiddenInput ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if ImportError exception is caught ,
// if ImportError exception is caught ,
Code line 244:   except ImportError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: obj is an instance of Model class , created with an unpacked dictionary data as argument .
// call the Model with an argument unpacked dictionary , substitute the result for obj .
Code line 245:  obj = Model ( ** data )
BLEU = 0.00 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17) 
(60.0 / 14.3 / 0.0 / 0.0)

Original comment: try ,
// try ,
Code line 246:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: msg is a string " Could not decode base64 data: %r " , where ' %r ' is replace with e .
// convert <unk> to a string and substitute it for msg .
Code line 247:                                        msg = "Could not decode base64 data: %r" % e
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=11, Reference length=22) 
(36.4 / 10.0 / 0.0 / 0.0)

Original comment: raise an NotImplementedError exception with an argument string ' subclasses of BaseCommand must provide a handle ( ) method ' .
// raise an NotImplementedError exception with an argument string
Code line 248:  raise NotImplementedError ( 'subclasses of BaseCommand must provide a handle() method' )
BLEU = 19.69 (Bravity Penalty=0.197, Length ratio=0.381, Translated length=8, Reference length=21) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: kwargs is a dictionary with 17 entries: form for ' form ' , formfield_callback for ' formfield_callback ' , formset for ' formset ' , extra for ' extra ' , can_delete for ' can_delete ' , can_order for ' can_order ' , fields for ' fields ' , exclude for ' exclude ' , min_num for ' min_num ' , max_num for ' max_num ' , widgets for ' widgets ' , validate_min for ' validate_min ' , validate_max for ' validate_max ' , localized_fields for ' localized_fields ' , labels for ' labels ' , help_texts for ' help_texts ' , and error_messages for ' error_messages ' .
// kwargs is a <unk> object with 4 initial entries : form , <unk> , <unk> , <unk> , <unk> ,
Code line 249:   kwargs = {  'form' : form ,  'formfield_callback' : formfield_callback ,  'formset' : formset ,  'extra' : extra ,  'can_delete' : can_delete ,  'can_order' : can_order ,  'fields' : fields ,  'exclude' : exclude ,  'min_num' : min_num ,  'max_num' : max_num ,  'widgets' : widgets ,  'validate_min' : validate_min ,  'validate_max' : validate_max ,  'localized_fields' : localized_fields ,  'labels' : labels ,  'help_texts' : help_texts ,  'error_messages' : error_messages ,  }
BLEU = 0.00 (Bravity Penalty=0.011, Length ratio=0.182, Translated length=20, Reference length=110) 
(50.0 / 10.5 / 5.6 / 0.0)

Original comment: call the function conditional_escape with an argument checkbox_name , substitute the result for value under the ' clear_checkbox_name ' key of the substitutions dictionary .
// call the function conditional_escape with an argument checkbox_name , substitute the result for value under the <unk> key of the substitutions dictionary .
Code line 250:  substitutions [ 'clear_checkbox_name' ] = conditional_escape ( checkbox_name )
BLEU = 80.56 (Bravity Penalty=0.917, Length ratio=0.920, Translated length=23, Reference length=25) 
(95.7 / 90.9 / 85.7 / 80.0)

Original comment: self . _closable_objects is an empty list .
// self . _closable_objects is an empty list .
Code line 251:  self . _closable_objects = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the attribute ' __module__ ' from the getattr , if it exists substitute it for m , if not , m is None .
// get <unk> attribute of the lookup_view object , substitute it for m .
Code line 252:        m = getattr ( lookup_view , '__module__' , None )
BLEU = 9.41 (Bravity Penalty=0.397, Length ratio=0.520, Translated length=13, Reference length=25) 
(69.2 / 25.0 / 18.2 / 10.0)

Original comment: if response is None ,
// if response is None ,
Code line 253:   if response is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an MultiValueDictKeyError exception with printable representation of key .
// raise an DisallowedHost exception with an argument : return value of the function urlquote called with an argument key .
Code line 254:               raise MultiValueDictKeyError ( repr ( key ) )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.000, Translated length=20, Reference length=10) 
(35.0 / 15.8 / 0.0 / 0.0)

Original comment: return _wrapper .
// return _curried .
Code line 255:   return _wrapper
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: call the __init__ method from the base class of the NoArgsCommand class .
// call the method __init__ from the base class of the class JsLexer .
Code line 256:  super ( NoArgsCommand , self ) . __init__ ( )
BLEU = 47.37 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 50.0 / 36.4 / 30.0)

Original comment: from django . core . management . base import CommandError into default name space .
// from django . core . management . base import CommandError into default name space .
Code line 257:   from django . core . management . base import CommandError
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . conf import settings into default name space .
// from django . conf import settings into default name space .
Code line 258:  from django . conf import settings
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an EmptyPage exception with string ' That page number is less than 1 ' as an argument .
// raise an EmptyPage exception with an argument <unk> .
Code line 259:               raise EmptyPage ( 'That page number is less than 1' )
BLEU = 17.47 (Bravity Penalty=0.329, Length ratio=0.474, Translated length=9, Reference length=19) 
(88.9 / 62.5 / 42.9 / 33.3)

Original comment: if not ,
// if not ,
Code line 260:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: raise an TypeError exception with an argument string ' In order to allow non-dict objects to be serialized set the safe parameter to False ' .
// raise an TypeError exception with an argument <unk> .
Code line 261:               raise TypeError ( 'In order to allow non-dict objects to be '  'serialized set the safe parameter to False' )
BLEU = 11.35 (Bravity Penalty=0.151, Length ratio=0.346, Translated length=9, Reference length=26) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: append flup_module to string " Can ' t import flup . " , print it to the standard output .
// print <unk> to the standard output .
Code line 262:           print ( "Can't import flup." + flup_module )
BLEU = 10.05 (Bravity Penalty=0.156, Length ratio=0.350, Translated length=7, Reference length=20) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: call the method zfile . write with an argument s .
// write s to zfile stream .
Code line 263:  zfile . write ( s )
BLEU = 0.00 (Bravity Penalty=0.435, Length ratio=0.545, Translated length=6, Reference length=11) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: from django . core . management . base import CommandError and BaseCommand into default name space .
// from django . core . management . base import CommandError and BaseCommand into default name space .
Code line 264:  from django . core . management . base import CommandError , BaseCommand
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function os . fdopen with arguments fd and mode , substitute it for _file .
// call the os . utime function with fd and mode as arguments , substitute the result for _file .
Code line 265:  _file = os . fdopen ( fd , mode )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.118, Translated length=19, Reference length=17) 
(78.9 / 38.9 / 11.8 / 0.0)

Original comment: if not ,
// if not ,
Code line 266:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: substitute self . _meta for opts .
// substitute self . _meta for opts .
Code line 267:           opts = self . _meta
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: import warnings .
// import module warnings .
Code line 268:       import warnings
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3) 
(75.0 / 33.3 / 0.0 / 0.0)

Original comment: assign self . origin , source to token . source .
// substitute self . origin and source for token . source .
Code line 269:  token . source = self . origin , source
BLEU = 35.08 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(72.7 / 50.0 / 33.3 / 12.5)

Original comment: call the function calculate_app_template_dirs , substitute the result for app_template_dirs .
// app_template_dirs is an instance of GzipFile class .
Code line 270:      app_template_dirs = calculate_app_template_dirs ( )
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11) 
(25.0 / 0.0 / 0.0 / 0.0)

Original comment: try ,
// try ,
Code line 271:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: return a string " <WithNode> "
// return <unk> .
Code line 272:           return "<WithNode>"
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=3, Reference length=6) 
(33.3 / 0.0 / 0.0 / 0.0)

Original comment: import module cgi .
// import module tarfile .
Code line 273: import cgi
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(75.0 / 33.3 / 0.0 / 0.0)

Original comment: call the method format_html with 3 arguments: string ' { 0 } { 1 } ' , contents and label_suffix , substitute the result for contents .
// call the function format_html with 3 arguments : <unk> , contents and label_suffix , substitute the result for contents .
Code line 274:               contents = format_html ( '{0}{1}' , contents , label_suffix )
BLEU = 43.34 (Bravity Penalty=0.705, Length ratio=0.741, Translated length=20, Reference length=27) 
(80.0 / 68.4 / 55.6 / 47.1)

Original comment: call the function split_url with an argument value , substitute the result for url_fields .
// call the function urlunsplit with an argument value , substitute the result for url_fields .
Code line 275:               url_fields = split_url ( value )
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(93.3 / 85.7 / 76.9 / 66.7)

Original comment: sort loader . migrated_apps , substitute it for app_names .
// add loader to a list , substitute it for app_names .
Code line 276:               app_names = sorted ( loader . migrated_apps )
BLEU = 47.99 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(63.6 / 50.0 / 44.4 / 37.5)

Original comment: if s is an instance of SafeData or EscapeData ,
// if s is an instance of EscapeData ,
Code line 277:  if isinstance ( s , ( SafeData , EscapeData ) ) :
BLEU = 59.59 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10) 
(100.0 / 85.7 / 66.7 / 60.0)

Original comment: join elements of comment_notes into a string , separated by whitespaces , append it to the string ' # ' , append the result to field_desc . yield string '
// join comment_notes into a string , separated by ' # ' , append it to field_desc .
Code line 278:                           field_desc += '  # ' + ' ' . join ( comment_notes )
BLEU = 35.03 (Bravity Penalty=0.465, Length ratio=0.567, Translated length=17, Reference length=30) 
(100.0 / 87.5 / 73.3 / 50.0)

Original comment: try ,
// try ,
Code line 279:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: if settings . STATIC_URL is None ,
// if settings . STATIC_URL is None ,
Code line 280:               if settings . STATIC_URL is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute prefix for self . prefix .
// substitute prefix for self . prefix .
Code line 281:  self . prefix = prefix
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function that is the return value of get_storage_class method , substitute the result for self . _wrapped .
// call get_script_name function , substitute the result for self . _wrapped .
Code line 282:           self . _wrapped = get_storage_class ( ) ( )
BLEU = 38.34 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=12, Reference length=20) 
(91.7 / 72.7 / 70.0 / 66.7)

Original comment: delete the value under the ' content-type ' key of the self dictionary .
// delete the value under the <unk> key of self dictionary .
Code line 283:  del self [ 'content-type' ]
BLEU = 39.26 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14) 
(90.9 / 70.0 / 44.4 / 25.0)

Original comment: if name converted to lower case equals to string ' subject ' ,
// convert name to lowercase , if it equals to <unk> ,
Code line 284:           if name . lower ( ) == 'subject' :
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13) 
(54.5 / 10.0 / 0.0 / 0.0)

Original comment: define the method __str__ with an argument self .
// define the method __str__ with an argument self .
Code line 285:    def __str__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function vars with an argument options , substitute the result for cmd_options .
// call the function vars with an argument options , substitute the result for cmd_options .
Code line 286:  cmd_options = vars ( options )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if has_old_option and has_new_option are both true ,
// if has_old_option is true and forms_valid is true ,
Code line 287:   if has_old_option and has_new_option :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(55.6 / 25.0 / 0.0 / 0.0)

Original comment: call the method self . xml . startElement with an argument string ' natural ' .
// call the method self . xml . endElement with an argument <unk> .
Code line 288:  self . xml . endElement ( "natural" )
BLEU = 47.02 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=13, Reference length=16) 
(84.6 / 66.7 / 54.5 / 40.0)

Original comment: try ,
// try ,
Code line 289:               try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: if return value of the function connection . introspection . table_name_converter called with an arugment: model . _meta . db_table is contained in table_names
// call the method connection . introspection . table_name_converter with an argument model . _meta . db_table , if it evaluates to true ,
Code line 290:               if connection . introspection . table_name_converter ( model . _meta . db_table ) in table_names :
BLEU = 33.07 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24) 
(60.9 / 40.9 / 28.6 / 20.0)

Original comment: return valid .
// return valid .
Code line 291:    return valid
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if string ' forloop ' is contained in context ,
// if <unk> is contained in context ,
Code line 292:             if 'forloop' in context :
BLEU = 41.92 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=7, Reference length=10) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: do nothing .
// do nothing .
Code line 293:               pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: endless loop ,
// endless while loop ,
Code line 294:  while 1 :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3) 
(75.0 / 33.3 / 0.0 / 0.0)

Original comment: self . COOKIES is an empty dictionary .
// substitute self for self . _body .
Code line 295:  self . COOKIES = { }
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8) 
(42.9 / 16.7 / 0.0 / 0.0)

Original comment: return dec .
// return dec .
Code line 296:   return dec
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function sanitize_address with arguments addr and encoding .
// define the function sanitize_address with 2 arguments : addr and encoding .
Code line 297:     def sanitize_address ( addr , encoding ) :
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(83.3 / 63.6 / 50.0 / 33.3)

Original comment: call the method lookups . appendlist with 2 arguments: name and a tuple containing 3 elements: new_matches , sum of p_pattern and pat , and dictionary created by applying defaults mapping on the pattern . default_kwargs dictionary .
// call the method lookups . appendlist with 3 arguments : return value of the method lookups . appendlist , called with 2 arguments : result of the method lookups . getElementsByTagName called with 2 arguments : unpacked list p_pattern , and unpacked dictionary kwargs .
Code line 298:  lookups . appendlist ( name , ( new_matches , p_pattern + pat , dict ( defaults , ** pattern . default_kwargs ) ) )
BLEU = 16.85 (Bravity Penalty=1.000, Length ratio=1.184, Translated length=45, Reference length=38) 
(40.0 / 18.2 / 11.6 / 9.5)

Original comment: substitute klass for factory .
// substitute klass for factory .
Code line 299:   factory = klass
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: message is an string " %s\n\nRequest repr ( ) : %s " formated with the result of the metod self . format with an argument record , and request_repr , respectively .
// call the function <unk> with an argument record , convert the result to a <unk> , substitute the result for message converted into a string , substitute the result for message .
Code line 300:    message = "%s\n\nRequest repr(): %s" % ( self . format ( record ) , request_repr )
BLEU = 14.29 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=32, Reference length=32) 
(37.5 / 16.1 / 10.0 / 6.9)

Original comment: call the method self . build_attrs with 3 arguments: attrs , type as self . input_type , name as name , substitute the result for final_attrs .
// call the method self . build_attrs with arguments attrs , type as self . input_type , name as name , substitute the result for final_attrs .
Code line 301:   final_attrs = self . build_attrs ( attrs , type = self . input_type , name = name )
BLEU = 86.05 (Bravity Penalty=0.962, Length ratio=0.963, Translated length=26, Reference length=27) 
(96.2 / 92.0 / 87.5 / 82.6)

Original comment: define the method create_nodelist with an argument self .
// define the method create_nodelist with an argument self .
Code line 302:    def create_nodelist ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . run_shell with an argument shell set to value under the ' interface ' key of the options dictionary .
// call the method self . handle_noargs with value under the <unk> key of the options dictionary as an argument .
Code line 303:    self . run_shell ( shell = options [ 'interface' ] )
BLEU = 37.72 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=20, Reference length=24) 
(85.0 / 57.9 / 38.9 / 23.5)

Original comment: if length of args is greater than 4 .
// if length of args is greater than integer 4 ,
Code line 304:   if len ( args ) > 4 :
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9) 
(80.0 / 66.7 / 62.5 / 57.1)

Original comment: __all__ is an list containing string ' SelectDateWidget ' .
// __all__ is a list containing an element <unk> .
Code line 305:   __all__ = [ 'SelectDateWidget' ]
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10) 
(66.7 / 25.0 / 0.0 / 0.0)

Original comment: define the method create_token with 3 arguments: self , token_string and in_tag .
// define the method create_token with 3 arguments : self , token_string and in_tag .
Code line 306:    def create_token ( self , token_string , in_tag ) :
BLEU = 69.98 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(85.7 / 76.9 / 66.7 / 54.5)

Original comment: all_locales is an empty string .
// all_locales is an empty list .
Code line 307:     all_locales = [ ]
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: call the method unhandled_params . remove with an argument param .
// remove param and first element of param .
Code line 308:                         unhandled_params . remove ( param )
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11) 
(37.5 / 14.3 / 0.0 / 0.0)

Original comment: raise an InvalidTemplateLibrary exception with an argument string ( " Unsupported arguments to Library . filter: ( %r , %r ) " , where ' %r ' is replaced with name and filter_func , respectively .
// raise an InvalidTemplateLibrary exception with an argument <unk> .
Code line 309:               raise InvalidTemplateLibrary ( "Unsupported arguments to "  "Library.filter: (%r, %r)" , ( name , filter_func ) )
BLEU = 3.74 (Bravity Penalty=0.050, Length ratio=0.250, Translated length=9, Reference length=36) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: from shutil import copystat into default name space .
// from functools import copystat into default name space .
Code line 310:       from shutil import copystat
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: raise an NotImplementedError exception with an argument string ' subclasses of LabelCommand must provide a handle_label ( ) method ' .
// raise an NotImplementedError exception with an argument string
Code line 311:  raise NotImplementedError ( 'subclasses of LabelCommand must provide a handle_label() method' )
BLEU = 19.69 (Bravity Penalty=0.197, Length ratio=0.381, Translated length=8, Reference length=21) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 312:                           try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: delete first 3 elements of bits .
// delete first element of bits .
Code line 313:  del bits [ : 3 ]
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7) 
(83.3 / 60.0 / 25.0 / 0.0)

Original comment: return self . STDOFFSET .
// return self . DSTOFFSET .
Code line 314:               return self . STDOFFSET
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: join basedir , l and string ' LC_MESSAGES ' into a path separated by ' / ' for every l in locales , assign the list to dirs .
// join basedir and l into a list for every l in locales .
Code line 315:                   dirs = [ os . path . join ( basedir , l , 'LC_MESSAGES' ) for l in locales ]
BLEU = 11.87 (Bravity Penalty=0.292, Length ratio=0.448, Translated length=13, Reference length=29) 
(100.0 / 50.0 / 27.3 / 20.0)

Original comment: if key is not contained in default_settings ,
// if key is not contained in extracted ,
Code line 316:               if key not in default_settings :
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 71.4 / 66.7 / 60.0)

Original comment: define the function callable with an argument obj .
// define the function callable with an argument obj .
Code line 317:       def callable ( obj ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function datetime_safe . new_datetime with an argument date , on the result call the method strftime with an argument , string ' %Y-%m-%d ' , convert the result into a string and append it to ' , ' , substitute the result for d .
// call the function datetime_safe with an argument date , call the result with an argument <unk> , substitute the result for d .
Code line 318:           d = ',%s' % datetime_safe . new_datetime ( date ) . strftime ( '%Y-%m-%d' )
BLEU = 21.37 (Bravity Penalty=0.352, Length ratio=0.489, Translated length=23, Reference length=47) 
(95.7 / 77.3 / 52.4 / 35.0)

Original comment: return nothing .
// return nothing .
Code line 319:               return
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function write_pot_file with 2 arguments potfile and msgs .
// define the function _checkLevel with 2 arguments : potfile and msgs .
Code line 320:       def write_pot_file ( potfile , msgs ) :
BLEU = 39.18 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 63.6 / 40.0 / 11.1)

Original comment: substitute base . __name__ for class_name .
// substitute base . __name__ for class_name .
Code line 321:               class_name = base . __name__
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . template . base import TemplateDoesNotExist into default name space .
// from django . template . base import TemplateDoesNotExist into default name space .
Code line 322:  from django . template . base import TemplateDoesNotExist
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the value under the ' database ' key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .
// get the value under the ' <unk> ' key of the options dictionary , substitute it for connection .
Code line 323:   connection = connections [ options [ 'database' ] ]
BLEU = 30.69 (Bravity Penalty=0.454, Length ratio=0.559, Translated length=19, Reference length=34) 
(94.7 / 77.8 / 64.7 / 43.8)

Original comment: raise CommandError exception , with " Conflicting migrations detected ( %s ) . \nTo fix them run ' python manage . py makemigrations --merge ' " , with ' %s ' substituted for name_str , as argument .
// raise an CommandError exception with an argument <unk> , use the result as an argument for the call to the <unk> function , return the result .
Code line 324:  raise CommandError ( "Conflicting migrations detected (%s).\nTo fix them run 'python manage.py makemigrations --merge'" % name_str )
BLEU = 0.00 (Bravity Penalty=0.665, Length ratio=0.711, Translated length=27, Reference length=38) 
(37.0 / 3.8 / 0.0 / 0.0)

Original comment: define the method __init__ with 3 arguments: self , tup and hash set to hash .
// define the method __init__ with 3 arguments : self , escape_html and value set to value .
Code line 325:   def __init__ ( self , tup , hash = hash ) :
BLEU = 36.45 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(70.6 / 43.8 / 26.7 / 21.4)

Original comment: if fake is true ,
// if fake is true ,
Code line 326:                   if fake :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: skip this loop iteration .
// skip this loop iteration .
Code line 327:                   continue
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if settings . DEBUG_PROPAGATE_EXCEPTIONS is True ,
// if settings . <unk> is true ,
Code line 328:  if settings . DEBUG_PROPAGATE_EXCEPTIONS :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(71.4 / 33.3 / 20.0 / 0.0)

Original comment: call the method cmatch . group with an argument integer 1 , format with the result string ' _ ( %s ) ' , write it to out .
// call the method formats . group with an argument integer 1 , use the result as an argument for the call to the function out . write , write the result to out .
Code line 329:                       out . write ( ' _(%s) ' % cmatch . group ( 1 ) )
BLEU = 30.28 (Bravity Penalty=1.000, Length ratio=1.172, Translated length=34, Reference length=29) 
(52.9 / 39.4 / 25.0 / 16.1)

Original comment: substitute stream for self . _stream .
// substitute stream for self . _stream .
Code line 330:           self . _stream = stream
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . template . defaultfilters import date into default name space .
// from django . template . dates import date into default name space .
Code line 331:  from django . template . defaultfilters import date
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: if OSError , renamed to e , exception is caught ,
// if OSError , renamed to e , exception is caught ,
Code line 332:   except OSError as e :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment:  - %s\n " with return value of the operation . describe method , write the result to self . stdout .
// call the method self . stdout . start_transaction_sql , write the result to self . stdout .
Code line 333:                           self . stdout . write ( "    - %s\n" % operation . describe ( ) )
BLEU = 40.74 (Bravity Penalty=0.790, Length ratio=0.810, Translated length=17, Reference length=21) 
(70.6 / 50.0 / 46.7 / 42.9)

Original comment: call the method six . reraise with 3 arguments: MultiPartParserError , MultiPartParserError created with msg , and third element of the result of the function sys . exc_info .
// call the function six . reraise with 3 arguments : MultiPartParserError , UnreadablePostError set to msg , and third element of the result of the function sys . exc_info .
Code line 334:  six . reraise ( MultiPartParserError , MultiPartParserError ( msg ) , sys . exc_info ( ) [ 2 ] )
BLEU = 63.59 (Bravity Penalty=1.000, Length ratio=1.034, Translated length=30, Reference length=29) 
(80.0 / 69.0 / 57.1 / 51.9)

Original comment: take elements of p from index i incremented by 1 to the end , strip the result of the whitespaces , substitute it for value .
// slice the order of the elements from i-th to i-th element of p , substitute it for value .
Code line 335:  value = p [ i + 1 : ] . strip ( )
BLEU = 23.20 (Bravity Penalty=0.692, Length ratio=0.731, Translated length=19, Reference length=26) 
(73.7 / 38.9 / 23.5 / 18.8)

Original comment: otherwise if value is an instance of datetime . date ,
// otherwise if value is an instance of datetime . date ,
Code line 336:   elif isinstance ( value , datetime . date ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if middleware has an attribute ' process_exception ' ,
// if middleware has an attribute <unk> ,
Code line 337:                       if hasattr ( middleware , 'process_exception' ) :
BLEU = 48.35 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: call the method payload . decode with 2 arguments: string ' ascii ' and string ' surrogateescape ' , substitute the result for self . _payload .
// call the method MIMEMultipart . decode with 2 arguments <unk> and <unk> , substitute the result for self . <unk> .
Code line 338:  self . _payload = payload . decode ( 'ascii' , 'surrogateescape' )
BLEU = 35.36 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=21, Reference length=27) 
(76.2 / 55.0 / 42.1 / 27.8)

Original comment: call the method gettext_module . translation with 5 arguments: domain set to string ' django ' , localedir set to localedir , languages set to a list with an element self . __locale , codeset set to a string ' utf-8 ' and fallback set to use_null_fallback , substitute the result for translation .
// call the method gettext_module . translation with 5 arguments : domain set to <unk> , localedir set to localedir , <unk> set to negative integer <unk> , substitute the result for translation .
Code line 339:  translation = gettext_module . translation (  domain = 'django' ,  localedir = localedir ,  languages = [ self . __locale ] ,  codeset = 'utf-8' ,  fallback = use_null_fallback )
BLEU = 30.25 (Bravity Penalty=0.529, Length ratio=0.611, Translated length=33, Reference length=54) 
(78.8 / 65.6 / 51.6 / 40.0)

Original comment: call the function re . compile with 2 arguments: raw string " ( [ A-Za-z ] { 1 , 8 } ( ?:- [ A-Za-z0-9 ] { 1 , 8 } ) *|\* ) ( ?:\s*;\s*q= ( 0 ( ?:\ . \d { , 3 } ) ?|1 ( ?: . 0 { , 3 } ) ? ) ) ? ( ?:\s* , \s*|$ ) " , and re . VERBOSE , substitute the result for accept_language_re .
// call the function re . compile with an argument <unk> , substitute the result for <unk> .
Code line 340:     accept_language_re = re . compile ( r'''         ([A-Za-z]{1,8}(?:-[A-Za-z0-9]{1,8})*|\*)      # "en", "en-au", "x-y-z", "es-419", "*"         (?:\s*;\s*q=(0(?:\.\d{,3})?|1(?:.0{,3})?))?   # Optional "q=1.00", "q=0.8"         (?:\s*,\s*|$)                                 # Multiple accepts per header.         ''' , re . VERBOSE )
BLEU = 1.50 (Bravity Penalty=0.026, Length ratio=0.215, Translated length=17, Reference length=79) 
(76.5 / 62.5 / 53.3 / 42.9)

Original comment: do nothing .
// do nothing .
Code line 341:               pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: append obj to self . deleted_objects list .
// append obj to self . var1 .
Code line 342:   self . deleted_objects . append ( obj )
BLEU = 55.78 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: define the function do_with with 2 arguments: parser and token .
// define the function <unk> with 2 arguments parser and token .
Code line 343:  def do_with ( parser , token ) :
BLEU = 37.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 60.0 / 33.3 / 12.5)

Original comment: self . choice_cache is None .
// self . alternatives is None .
Code line 344:  self . choice_cache = None
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 25.0 / 0.0)

Original comment: from django . conf import settings into default name space .
// from django . conf import settings into default name space .
Code line 345:    from django . conf import settings
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method date . weekday , use the result as an key to obtain the value from the days dictionary , substitute it for dow .
// call the function date . weekday , substitute the result for bmatch .
Code line 346:   dow = days [ date . weekday ( ) ]
BLEU = 10.09 (Bravity Penalty=0.341, Length ratio=0.481, Translated length=13, Reference length=27) 
(84.6 / 50.0 / 18.2 / 10.0)

Original comment: append e to debugs list for every e in all_issues , if e . level is lesser than checks . INFO and result of the method e . is_silenced in false .
// for every e in all_issues if e . level is lesser than or equal to e . level , and e . level is lesser than checks . WARNING , substitute the resulting list for script_url .
Code line 347:               debugs = [ e for e in all_issues if e . level < checks . INFO and not e . is_silenced ( ) ]
BLEU = 35.70 (Bravity Penalty=1.000, Length ratio=1.156, Translated length=37, Reference length=32) 
(62.2 / 38.9 / 28.6 / 23.5)

Original comment: if not ,
// if not ,
Code line 348:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: get frag attribute from found object , substitute it for found .
// get frag attribute from found object , substitute it for found .
Code line 349:                       found = getattr ( found , frag )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method handler . addQuickElement with 3 arguments: string ' atom:link ' , None and dictionary with 2 entries: ' self ' for ' rel ' , value under the ' feed_url ' key of the self . feed dictionary for ' href ' .
// call the method handler . addQuickElement with 3 arguments : <unk> , None , <unk> , <unk> , <unk> and value under the ' author_name ' key of the self . feed dictionary .
Code line 350:               handler . addQuickElement ( "atom:link" , None ,  { "rel" : "self" , "href" : self . feed [ 'feed_url' ] } )
BLEU = 35.10 (Bravity Penalty=0.703, Length ratio=0.739, Translated length=34, Reference length=46) 
(73.5 / 54.5 / 43.8 / 35.5)

Original comment: if val is None ,
// if val is None ,
Code line 351:   if val is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return self . _fqdn .
// return self . _fqdn .
Code line 352:   return self . _fqdn
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: exit the program with the code integer 1 .
// call the method os . <unk> with an argument integer 1 .
Code line 353:   os . _exit ( 1 )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=12, Reference length=9) 
(41.7 / 18.2 / 10.0 / 0.0)

Original comment: substitute has_header for __contains__ .
// substitute lookup for __contains__ .
Code line 354:    __contains__ = has_header
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: call the method gettext_module . GNUTranslations . __init__ with an argument self .
// call the method gettext_module . get_model with an argument self .
Code line 355:  gettext_module . GNUTranslations . __init__ ( self )
BLEU = 58.50 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: return obj .
// return obj .
Code line 356:    return obj
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 357:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: visible_issue_count is an integer 0 .
// content_length is an integer 0 .
Code line 358:  visible_issue_count = 0
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: if inverse_match is not None ,
// if inverse_match is not None ,
Code line 359:   if inverse_match is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute ' %r ' in string ' pgettext ( %r , %r ) ' with message_context and result of the function join_tokens , called with 2 arguments: singular and trimmed , write the result to out .
// format string ' <unk> <unk> ' with message_context of singular , write it to out .
Code line 360:                               out . write ( ' pgettext(%r, %r) ' % (  message_context ,  join_tokens ( singular , trimmed ) ) )
BLEU = 0.00 (Bravity Penalty=0.269, Length ratio=0.432, Translated length=16, Reference length=37) 
(75.0 / 40.0 / 14.3 / 0.0)

Original comment: convert self . file to string and append string ' . py ' to it , substitute the result for thefile .
// convert self . file to a string , substitute it for thefile .
Code line 361:   thefile = '%s.py' % self . file
BLEU = 22.26 (Bravity Penalty=0.500, Length ratio=0.591, Translated length=13, Reference length=22) 
(92.3 / 58.3 / 36.4 / 20.0)

Original comment: if StopUpload , renamed to e , exception is caught ,
// if StopUpload , renamed to e , exception is caught ,
Code line 362:     except StopUpload as e :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the self . _open method with name and mode arguments , return the result .
// call the method self . add_truncation_text with arguments name and mode , return the result .
Code line 363:  return self . _open ( name , mode )
BLEU = 38.50 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16) 
(93.8 / 53.3 / 28.6 / 15.4)

Original comment: if IndexError exception is caught ,
// if IndexError exception is caught ,
Code line 364:   except IndexError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method write with 3 arguments self , outfile and encoding .
// define the method write with 3 arguments : self , outfile and encoding .
Code line 365:    def write ( self , outfile , encoding ) :
BLEU = 78.25 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(92.9 / 84.6 / 75.0 / 63.6)

Original comment: if not ,
// if not ,
Code line 366:    else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if handler has an attribute ' file ' ,
// if handler has an attribute <unk> ,
Code line 367:               if hasattr ( handler , 'file' ) :
BLEU = 48.35 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: for every i in range of integers from 0 to length of result , not included ,
// for every i in sequence of result ,
Code line 368:  for i in range ( len ( result ) ) :
BLEU = 16.23 (Bravity Penalty=0.325, Length ratio=0.471, Translated length=8, Reference length=17) 
(87.5 / 71.4 / 50.0 / 20.0)

Original comment: do nothing .
// do nothing .
Code line 369:       pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if self . use_ssl and self . use_tls are false ,
// if self . use_ssl is false and self . use_tls is true ,
Code line 370:     if not self . use_ssl and self . use_tls :
BLEU = 40.90 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11) 
(76.9 / 50.0 / 36.4 / 20.0)

Original comment: raise an ImproperlyConfigured with an argument string " Calling modelformset_factory without defining ' fields ' or ' exclude ' , explicitly is prohibited . "
// raise an ImproperlyConfigured exception with an argument <unk> set to string ' <unk> fixtures <unk> <unk> or <unk> " .
Code line 371:           raise ImproperlyConfigured (  "Calling modelformset_factory without defining 'fields' or "  "'exclude' explicitly is prohibited."  )
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=20, Reference length=25) 
(55.0 / 21.1 / 11.1 / 0.0)

Original comment: encoding . setter decorator ,
// settings . setter decorator ,
Code line 372:    @ encoding . setter
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 75.0 / 66.7 / 50.0)

Original comment: define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
// define the function wrapper with 2 arguments : unpacked list args and unpacked dictionary kwds .
Code line 373:                    def wrapper ( * args , ** kwds ) :
BLEU = 74.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 80.0 / 71.4 / 61.5)

Original comment: define initialization method __init__ with self class instance , level , msg , hint defaulting to None , obj defaulting to None and if defaulting to None as arguments .
// define the method __init__ with 4 arguments : self , level , msg , hint set to None ,
Code line 374:        def __init__ ( self , level , msg , hint = None , obj = None , id = None ) :
BLEU = 22.53 (Bravity Penalty=0.560, Length ratio=0.633, Translated length=19, Reference length=30) 
(78.9 / 50.0 / 35.3 / 18.8)

Original comment: substitute SplitHiddenDateTimeWidget for hidden_widget .
// substitute SelectMultiple for hidden_widget .
Code line 375:  hidden_widget = SplitHiddenDateTimeWidget
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: property decorator ,
// property decorator ,
Code line 376:    @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: return result .
// return result .
Code line 377:  return result
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method self . load_template_source with arguments template_name and template_dirs , assign the result to source and display_name .
// call the method self . load_template_source with 2 arguments template_name and template_dirs , substitute the result for source and display_name , respectively .
Code line 378:           source , display_name = self . load_template_source ( template_name , template_dirs )
BLEU = 49.38 (Bravity Penalty=1.000, Length ratio=1.150, Translated length=23, Reference length=20) 
(78.3 / 59.1 / 42.9 / 30.0)

Original comment: return self . _callback .
// return self . _callback .
Code line 379:               return self . _callback
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every filenam in locale_filenames ,
// for every filename in tablenames ,
Code line 380:                   for filename in locale_filenames :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(66.7 / 20.0 / 0.0 / 0.0)

Original comment: convert fist p elements of locale to lowercase , append ' _ ' to it , covert to lowercase locale elements from ( p+1 ) -th index to the end , append it to the previous result , return it .
// convert first element of colors to lowercase and append it to string ' . ( ' , convert it to lowercase and append it to the previous result , convert it to lowercase , return it .
Code line 381:           return locale [ : p ] . lower ( ) + '-' + locale [ p + 1 : ] . lower ( )
BLEU = 26.47 (Bravity Penalty=0.898, Length ratio=0.902, Translated length=37, Reference length=41) 
(67.6 / 33.3 / 22.9 / 14.7)

Original comment: call the self . stream . close function .
// call the method self . stream . close .
Code line 382:                   self . stream . close ( )
BLEU = 53.08 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 62.5 / 42.9 / 33.3)

Original comment: call the function get_language , substitute the result for self . old_language .
// call the function get_language , substitute the result for self . _iterator .
Code line 383:  self . old_language = get_language ( )
BLEU = 84.24 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 81.8 / 80.0)

Original comment: raise an value . with_traceback exception with an argument tb .
// call the method value . <unk> with an argument tb .
Code line 384:               raise value . with_traceback ( tb )
BLEU = 40.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(63.6 / 50.0 / 33.3 / 25.0)

Original comment: define the function ugettext with an argument message .
// define the function ugettext with an argument message .
Code line 385:     def ugettext ( message ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . iteritems , return the list of results .
// call the method self . iteritems , return list of results .
Code line 386:               return list ( self . iteritems ( ) )
BLEU = 76.77 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13) 
(100.0 / 90.9 / 80.0 / 66.7)

Original comment: decorator stringfilter ,
// decorator stringfilter ,
Code line 387:  @ stringfilter
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: get the next element of the self . _producer iterable , substitute it for output .
// call the function next with an argument self . _producer , substitute the result for output .
Code line 388:               output = next ( self . _producer )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(64.7 / 31.2 / 13.3 / 0.0)

Original comment: call the method media_property with an argument new_class , substitute the result for new_class . media .
// call the function next_char with new_class as an argument , assign the result to new_class . media .
Code line 389:               new_class . media = media_property ( new_class )
BLEU = 21.47 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17) 
(72.2 / 35.3 / 12.5 / 6.7)

Original comment: call the method self . setlist with 2 arguments: key and default_list .
// call the method self . setlist with 2 arguments : key and default_list .
Code line 390:   self . setlist ( key , default_list )
BLEU = 69.98 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(85.7 / 76.9 / 66.7 / 54.5)

Original comment: if truncate_len equals integer 0 .
// if truncate_len equals integer 0 ,
Code line 391:  if truncate_len == 0 :
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: call the __add__ method with an arguments rhs from the base class of the class SafeText , substitute the result for t .
// call the method __add__ from the base class of the class SafeText , with an argument rhs , substitute the result for t .
Code line 392:  t = super ( SafeText , self ) . __add__ ( rhs )
BLEU = 63.79 (Bravity Penalty=1.000, Length ratio=1.043, Translated length=24, Reference length=23) 
(91.7 / 69.6 / 54.5 / 47.6)

Original comment: if value is an instance of bytes class ,
// if value is an instance of bytes ,
Code line 393:       if isinstance ( value , bytes ) :
BLEU = 76.73 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9) 
(100.0 / 85.7 / 83.3 / 80.0)

Original comment: try ,
// try ,
Code line 394:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: call the function format_html with 3 arguments string ' <label { 0 } > { 1 } </label> ' , attrs and contents , substitute the result for contents .
// call the function format_html with 2 arguments : <unk> and attrs , substitute the result for contents .
Code line 395:  contents = format_html ( '<label{0}>{1}</label>' , attrs , contents )
BLEU = 28.73 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=18, Reference length=30) 
(83.3 / 58.8 / 50.0 / 40.0)

Original comment: return self . _errors .
// return self . _errors .
Code line 396:   return self . _errors
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute content_length for self . content_length .
// substitute content_length for self . content_length .
Code line 397:  self . content_length = content_length
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . db . migrations . executor import MigrationExecutor into default name space .
// from django . db . migrations . executor import MigrationExecutor into default name space .
Code line 398:  from django . db . migrations . executor import MigrationExecutor
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method handler . startElement with 2 arguments: string " channel " and result of the method self . root_attributes .
// call the method handler . startElement with 2 arguments : <unk> and result of the method self . root_attributes .
Code line 399:  handler . startElement ( "channel" , self . root_attributes ( ) )
BLEU = 67.71 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22) 
(85.0 / 78.9 / 72.2 / 64.7)

Original comment: week_number is integer 52 .
// week_number is integer <unk> .
Code line 400:                   week_number = 52
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: decrement self . waiting_writers by integer 1 ,
// decrement self . waiting_writers by integer 1 ,
Code line 401:  self . waiting_writers -= 1
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute length of values for len_values .
// substitute length of values for len_values .
Code line 402:   len_values = len ( values )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if config dictionary value under ' version ' key is not equal to integer 1 ,
// if value under the <unk> key of the config dictionary is true ,
Code line 403:   if config [ 'version' ] != 1 :
BLEU = 0.00 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=13, Reference length=16) 
(61.5 / 16.7 / 0.0 / 0.0)

Original comment: if color_setting is True ,
// if hidden_fields is true ,
Code line 404:  if color_settings :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(60.0 / 0.0 / 0.0 / 0.0)

Original comment: call the parseaddr function with return value of the force_text with argument addr , as argument , substitute the result for addr .
// call the function force_text with an argument addr , use the result as an argument for the call to the function typecast_timestamp , substitute the result for addr .
Code line 405:           addr = parseaddr ( force_text ( addr ) )
BLEU = 29.51 (Bravity Penalty=1.000, Length ratio=1.261, Translated length=29, Reference length=23) 
(62.1 / 35.7 / 22.2 / 15.4)

Original comment:  Processing %s . %s model\n " as argument , with all occurrences of ' %s ' replaced with , app_name and model . _meta . object_name , respectively .
// substitute ' %s ' in string " <unk> <unk> <unk> % % ( app_name ) " with app_name and model . _meta . object_name , respectively .
Code line 406:                               self . stdout . write ( "    Processing %s.%s model\n" % ( app_name , model . _meta . object_name ) )
BLEU = 36.81 (Bravity Penalty=0.929, Length ratio=0.931, Translated length=27, Reference length=29) 
(55.6 / 42.3 / 36.0 / 29.2)

Original comment: if not ,
// if not ,
Code line 407:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if ValueError exception is caught ,
// if ValueError exception is caught ,
Code line 408:   except ValueError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute token for self . token .
// substitute token for self . token .
Code line 409:           self . token = token
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if format is not contained in _serializers ,
// if format is not contained in _serializers ,
Code line 410:   if format not in _serializers :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: import module types .
// import module types .
Code line 411:  import types
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if upto is not equal to start .
// if upto is true ,
Code line 412:  if upto != start :
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(60.0 / 50.0 / 33.3 / 0.0)

Original comment: if ret equals to integer 0 , return boolean True , otherwise return boolean False .
// if ret equals to integer 0 , return boolean True , otherwise return boolean False .
Code line 413:  return ( ret == 0 )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: yield meta_line as the result .
// yield real_name .
Code line 414:                       yield meta_line
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=3, Reference length=6) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: strip of the whitespaces first element of transfer_encoding , substitute the result for transfer_encoding .
// strip first element from transfer_encoding .
Code line 415:                       transfer_encoding = transfer_encoding [ 0 ] . strip ( )
BLEU = 0.00 (Bravity Penalty=0.223, Length ratio=0.400, Translated length=6, Reference length=15) 
(83.3 / 40.0 / 0.0 / 0.0)

Original comment: return an empty string .
// return <unk> .
Code line 416:               return ''
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=3, Reference length=5) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: raise an CommandError exception with an argument string " Error: %s " , with ' %s ' replaced by message .
// raise an CommandError exception with an argument <unk> converted to a string .
Code line 417:               raise CommandError ( "Error: %s" % message )
BLEU = 27.07 (Bravity Penalty=0.540, Length ratio=0.619, Translated length=13, Reference length=21) 
(69.2 / 50.0 / 45.5 / 40.0)

Original comment: if self . can_delete is true and call to the method self . _should_delete_form with an argument form , evaluates to true ,
// if self . can_delete is true and call to the method self . _should_delete_form with an argument form evaluates to true ,
Code line 418:    if self . can_delete and self . _should_delete_form ( form ) :
BLEU = 88.08 (Bravity Penalty=0.956, Length ratio=0.957, Translated length=22, Reference length=23) 
(100.0 / 95.2 / 90.0 / 84.2)

Original comment: if length of self . dicts is equal to an integer 1 ,
// if length of self . dicts is equal to integer 1 ,
Code line 419:           if len ( self . dicts ) == 1 :
BLEU = 76.77 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13) 
(100.0 / 90.9 / 80.0 / 66.7)

Original comment: try ,
// try ,
Code line 420:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: from django . utils import translation into default name space .
// from django . utils import translation into default name space .
Code line 421:       from django . utils import translation
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from logging import NullHandler .
// from logging import <unk> into default name space .
Code line 422:    from logging import NullHandler
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.800, Translated length=9, Reference length=5) 
(44.4 / 25.0 / 14.3 / 0.0)

Original comment: call the connection . creation . sql_for_pending_references method with refto , no_style ( ) and pending_references as arguments , use the result as the argument for the call to the sql . extend method .
// call the method connection . creation . sql_for_pending_references with 3 arguments : model , no_style and return value of the function pending_references . creation .
Code line 423:    sql . extend ( connection . creation . sql_for_pending_references ( model , no_style ( ) , pending_references ) )
BLEU = 14.20 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=25, Reference length=35) 
(68.0 / 25.0 / 13.0 / 9.1)

Original comment: get ' default_error_messages ' from the c object , if it doesnt exists return an empty dictionary , use the result as the argument for the call to the messages . update function .
// get the attribute <unk> of the c object , if it exists use it as an argument for the call to the method messages . update .
Code line 424:               messages . update ( getattr ( c , 'default_error_messages' , { } ) )
BLEU = 33.10 (Bravity Penalty=0.772, Length ratio=0.794, Translated length=27, Reference length=34) 
(81.5 / 46.2 / 36.0 / 25.0)

Original comment: define the function to_language with an argument locale .
// define the function to_language with an argument locale .
Code line 425:      def to_language ( locale ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if self . encoding exists substitute it for encoding , if not substitute settings . DEFAULT_CHARSET for encoding .
// if self . encoding exists substitute it for encoding , if not substitute settings . DEFAULT_CHARSET for encoding .
Code line 426:           encoding = self . encoding or settings . DEFAULT_CHARSET
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: remove the first element from result .
// remove the first element of result .
Code line 427:                           result . pop ( )
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 40.0 / 25.0)

Original comment: define the method __init__ with 4 arguments: self , dirpath , file_name and locale_dir .
// define the method __init__ with 4 arguments : self , dirpath , file_name and locale_dir .
Code line 428:       def __init__ ( self , dirpath , file_name , locale_dir ) :
BLEU = 74.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 80.0 / 71.4 / 61.5)

Original comment: default_error_messages is a dictionary with 4 initial entries: return value of the function _ called with string as an argument , ' Enter a number . ' for ' invalid ' , return value of the function ungettext_lazy called with 3 string arguments: ' Ensure that there are no more than % ( max ) s digit in total . ' , ' Ensure that there are no more than % ( max ) s digits in total . ' , and ' max ' for ' max_digits ' , return value of the function ungettext_lazy called with 3 string arguments: ' Ensure that there are no more than % ( max ) s decimal place . ' , ' Ensure that there are no more than % ( max ) s decimal places . ' and ' max ' , for ' max_decimal_places ' and return value of the function ungettext_lazy called with 3 string arguments: ' Ensure that there are no more than % ( max ) s digit before the decimal point . ' , ' Ensure that there are no more than % ( max ) s digits before the decimal point . ' and ' max ' for ' max_whole_digits ' .
// default_error_messages is an string
Code line 429:       default_error_messages = {  'invalid' : _ ( 'Enter a number.' ) ,  'max_digits' : ungettext_lazy (  'Ensure that there are no more than %(max)s digit in total.' ,  'Ensure that there are no more than %(max)s digits in total.' ,  'max' ) ,  'max_decimal_places' : ungettext_lazy (  'Ensure that there are no more than %(max)s decimal place.' ,  'Ensure that there are no more than %(max)s decimal places.' ,  'max' ) ,  'max_whole_digits' : ungettext_lazy (  'Ensure that there are no more than %(max)s digit before the decimal point.' ,  'Ensure that there are no more than %(max)s digits before the decimal point.' ,  'max' ) ,  }
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.019, Translated length=4, Reference length=207) 
(100.0 / 33.3 / 0.0 / 0.0)

Original comment: if value is Nan , or value is contained in return value of the Decimal called twice with string ' Inf ' and with string ' -Inf ' ,
// if value is value ,
Code line 430:    if value != value or value in ( Decimal ( 'Inf' ) , Decimal ( '-Inf' ) ) :
BLEU = 0.00 (Bravity Penalty=0.008, Length ratio=0.172, Translated length=5, Reference length=29) 
(100.0 / 50.0 / 33.3 / 0.0)

Original comment: try ,
// try ,
Code line 431:               try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: import module os .
// import module os .
Code line 432:  import os
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every ch in input_iter ,
// for every ch in input_iter ,
Code line 433:  for ch in input_iter :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return new_key .
// return _wrapped_view .
Code line 434:  return new_key
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: get the value under the ' id ' key of the widget . attrs dictionary , if the key exists substitute it for id_ , if not , substitute self . auto_id for id_ .
// get the value under the <unk> key of the widget . attrs dictionary , if it exists substitute it for id_ , if not , substitute self . auto_id for id_ .
Code line 435:  id_ = widget . attrs . get ( 'id' ) or self . auto_id
BLEU = 75.51 (Bravity Penalty=0.911, Length ratio=0.914, Translated length=32, Reference length=35) 
(93.8 / 87.1 / 80.0 / 72.4)

Original comment: return a string ' %s . . . ' formated with elements of x up to the index equal to the maximum value between integer 0 and 3 subtracted from limit .
// return an instance of a class <unk> , created with 2 arguments : integer 0 and first element of x , return the result .
Code line 436:   return '%s...' % x [ : max ( 0 , limit - 3 ) ]
BLEU = 0.00 (Bravity Penalty=0.756, Length ratio=0.781, Translated length=25, Reference length=32) 
(40.0 / 12.5 / 4.3 / 0.0)

Original comment: from django import http into default name space .
// from django import http into default name space .
Code line 437:   from django import http
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 438:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method var . split with an argument VARIABLE_ATTRIBUTE_SEPARATOR , convert the result to a tuple and substitute it for self . lookups .
// split var into a tuple , substitute the result for self . lookups .
Code line 439:   self . lookups = tuple ( var . split ( VARIABLE_ATTRIBUTE_SEPARATOR ) )
BLEU = 17.03 (Bravity Penalty=0.456, Length ratio=0.560, Translated length=14, Reference length=25) 
(92.9 / 46.2 / 25.0 / 18.2)

Original comment: multiply seconds by count , subtract it from since , divide the result by seconds2 , store the floored result in count2 .
// create a tuple with 2 elements : seconds and result of the function seconds called with an argument seconds result of the function seconds called with an argument seconds , substitute the result for failures .
Code line 440:  count2 = ( since - ( seconds * count ) ) // seconds2
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.565, Translated length=36, Reference length=23) 
(19.4 / 2.9 / 0.0 / 0.0)

Original comment: if settings . MANAGERS does not exist ,
// if settings . ADMINS is false ,
Code line 441:  if not settings . MANAGERS :
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8) 
(57.1 / 33.3 / 20.0 / 0.0)

Original comment: define the method register with self ans unpacked list tags as arguments .
// define the method register with 2 arguments : self and unpacked list tags .
Code line 442:    def register ( self , * tags ) :
BLEU = 38.50 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(78.6 / 46.2 / 33.3 / 18.2)

Original comment: call the __init__ method from the base class of the class TemplateResponse , with 4 arguments: template , context , content_type , status .
// call the method __init__ from the base class of the class DateField , with 4 arguments : template , context , content_type and status .
Code line 443:  super ( TemplateResponse , self ) . __init__ (  template , context , content_type , status )
BLEU = 47.82 (Bravity Penalty=1.000, Length ratio=1.042, Translated length=25, Reference length=24) 
(84.0 / 58.3 / 39.1 / 27.3)

Original comment: evaluate the fd . isatty method , if the result is true ,
// call the method fd . isatty , if it evaluates to true ,
Code line 444:  if fd . isatty ( ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(69.2 / 33.3 / 9.1 / 0.0)

Original comment: call the function six . text_type with an argument number , substitute the result for str_number .
// call the method six . text_type with an argument number , substitute the result for attr_list .
Code line 445:  str_number = six . text_type ( number )
BLEU = 72.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(88.2 / 75.0 / 66.7 / 64.3)

Original comment: call the method render from the base class of the class PasswordInput , called with 3 arguments: name , value and attrs , return the result .
// call the method render from the base class of the class PasswordInput , with 3 arguments : name , value and attrs .
Code line 446:   return super ( PasswordInput , self ) . render ( name , value , attrs )
BLEU = 61.25 (Bravity Penalty=0.840, Length ratio=0.852, Translated length=23, Reference length=27) 
(91.3 / 77.3 / 66.7 / 60.0)

Original comment: if field_type equals a string ' DecimalField ' ,
// if field_type equals <unk> ,
Code line 447:    if field_type == 'DecimalField' :
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=5, Reference length=9) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: return boolean False .
// return boolean False .
Code line 448:           return False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: instantiate class Truncator , with an argument value , call the method words on the result with 3 arguments length , html set to boolean True and truncate set to string ' . . . ' , return the result .
// return an instance of a class Truncator , created with 3 arguments : value , left and truncate set to boolean True .
Code line 449:   return Truncator ( value ) . words ( length , html = True , truncate = ' ...' )
BLEU = 14.31 (Bravity Penalty=0.457, Length ratio=0.561, Translated length=23, Reference length=41) 
(73.9 / 45.5 / 28.6 / 10.0)

Original comment: if self . validate_max is true , and length of self . deleted_forms subtracted from the return value of the method self . total_form_count , is greater than self . max_num , or if value under the TOTAL_FORM_COUNT key of the self . management_form . cleaned_data dictionary , is grater than self . absolute_max ,
// if self . dry_run is true and self . deleted_forms is greater than self . Managers and self . __args is greater than self . Managers , or if length of self . deleted_forms is greater than self . Managers ,
Code line 450:               if ( self . validate_max and  self . total_form_count ( ) - len ( self . deleted_forms ) > self . max_num ) or self . management_form . cleaned_data [ TOTAL_FORM_COUNT ] > self . absolute_max :
BLEU = 20.78 (Bravity Penalty=0.711, Length ratio=0.745, Translated length=41, Reference length=55) 
(70.7 / 42.5 / 23.1 / 10.5)

Original comment: return patterns .
// return msg_count .
Code line 451:   return patterns
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: for every f in files ,
// for every f in files ,
Code line 452:                       for f in files :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function get_text_list with 2 arguments: list_ and last_word set to result of the function ugettext_lazy called with an argument string ' or ' .
// define the function get_text_list with 2 arguments : list_ and <unk> ( <unk> ) .
Code line 453:    def get_text_list ( list_ , last_word = ugettext_lazy ( 'or' ) ) :
BLEU = 18.01 (Bravity Penalty=0.480, Length ratio=0.577, Translated length=15, Reference length=26) 
(60.0 / 42.9 / 30.8 / 25.0)

Original comment: return r .
// return r .
Code line 454:   return r
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if Exception exception is caught ,
// if Exception exception is caught ,
Code line 455:   except Exception :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute self . field . widget for widget .
// substitute self . field . widget for widget .
Code line 456:  widget = self . field . widget
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method _setup with an argument self .
// define the method _setup with an argument self .
Code line 457:    def _setup ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute value for self . value .
// substitute value for self . value .
Code line 458:  self . value = value
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function force_text with an argument field . help_text , format help_text_html with it , substitute the result for help_text .
// call the function force_text with an argument field . help_text , substitute the result for help_text .
Code line 459:                       help_text = help_text_html % force_text ( field . help_text )
BLEU = 70.48 (Bravity Penalty=0.745, Length ratio=0.773, Translated length=17, Reference length=22) 
(100.0 / 100.0 / 93.3 / 85.7)

Original comment: if value is true ,
// if value is true ,
Code line 460:           if value :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class Command from the BaseCommand class .
// derive the class Command from the BaseCommand base class .
Code line 461:    class Command ( BaseCommand ) :
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9) 
(90.0 / 77.8 / 62.5 / 57.1)

Original comment: define the method _existing_object with 2 arguments: self and pk .
// define the method autocomplete with 2 arguments : self and pk .
Code line 462:    def _existing_object ( self , pk ) :
BLEU = 34.17 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(75.0 / 54.5 / 30.0 / 11.1)

Original comment: call the self . _get_pages method with 3 arguments: self . object_list from the bottom to the top index , number and self , return the result .
// call the method self . <unk> with 4 arguments : self . object_list , conn_type , number and self .
Code line 463:   return self . _get_page ( self . object_list [ bottom : top ] , number , self )
BLEU = 15.29 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=20, Reference length=28) 
(75.0 / 36.8 / 16.7 / 5.9)

Original comment: substitute initial for initial_value , if initial is not None , if not , initial_value is an empty string .
// if initial is not None , substitute initial for initial_value , otherwise substitute <unk> for initial_value .
Code line 464:     initial_value = initial if initial is not None else ''
BLEU = 43.37 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20) 
(76.5 / 56.2 / 46.7 / 35.7)

Original comment: call the function _ with an argument string ' Ensure this value is greater than or equal to % ( limit_value ) s . ' , substitute the result for message .
// call the function _ with an argument <unk> , use the result as an argument for the call to the function _ , substitute the result for message .
Code line 465:  message = _ ( 'Ensure this value is greater than or equal to %(limit_value)s.' )
BLEU = 35.95 (Bravity Penalty=0.902, Length ratio=0.906, Translated length=29, Reference length=32) 
(51.7 / 42.9 / 37.0 / 30.8)

Original comment: saved_instances is an empty list .
// inner_text is an empty list .
Code line 466:    saved_instances = [ ]
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: substitute second element of renamed_method for new_method_name .
// substitute second element of renamed_method for new_method_name .
Code line 467:  new_method_name = renamed_method [ 1 ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: move integer 1 left for 30 bits , substitute the result for GB .
// move integer 1 left for 20 bits , substitute the result for css_classes .
Code line 468:  GB = 1 << 30
BLEU = 62.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14) 
(85.7 / 69.2 / 58.3 / 45.5)

Original comment: define the method render with 2 arguments: self and context .
// define the method render with 2 arguments : self and context .
Code line 469:    def render ( self , context ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: substitute base for self . base .
// substitute base for self . base .
Code line 470:  self . base = base
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function is_valid_path with arguments path and urlconf set to None .
// define the function <unk> with path and urlconf set to None as arguments .
Code line 471:     def is_valid_path ( path , urlconf = None ) :
BLEU = 47.86 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(85.7 / 53.8 / 41.7 / 27.3)

Original comment: table2model is a lambda function with an argument table_name , return value is the return value of the re . sub method , called with 3 arguments: raw string ' [ ^a-zA-Z0-9 ] ' , empty string and result of the method table_name . title .
// call the function EmailMultiAlternatives with 2 arguments : <unk> and <unk> , return value of the function re . sub called with 2 arguments : <unk> and <unk> .
Code line 472:   table2model = lambda table_name : re . sub ( r'[^a-zA-Z0-9]' , '' , table_name . title ( ) )
BLEU = 9.17 (Bravity Penalty=0.556, Length ratio=0.630, Translated length=29, Reference length=46) 
(51.7 / 25.0 / 14.8 / 3.8)

Original comment: if SystemExit exception is caught ,
// if <unk> exception is caught ,
Code line 473:    except SystemExit :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: skip this loop iteration .
// skip this loop iteration .
Code line 474:  continue
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if decorator has an attribute ' process_view ' ,
// if decorator has an attribute <unk> ,
Code line 475:   if hasattr ( decorator , '__name__' ) :
BLEU = 48.35 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: if not ,
// if not ,
Code line 476:    else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: from django . core . management . base import AppCommand into default name space .
// from django . core . management . base import AppCommand into default name space .
Code line 477:   from django . core . management . base import AppCommand
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute self . rawdata for rawdata .
// substitute self . rawdata for rawdata .
Code line 478:               rawdata = self . rawdata
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method parser . parse with an argument tuple with an element string ' endautoescape ' , substitute the result for nodelist .
// call the method parser . parse with an argument <unk> , substitute the result for nodelist .
Code line 479:   nodelist = parser . parse ( ( 'endautoescape' , ) )
BLEU = 54.87 (Bravity Penalty=0.662, Length ratio=0.708, Translated length=17, Reference length=24) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: define the method _add_fallback with an argument self .
// define the method _get_choices with an argument self .
Code line 480:     def _add_fallback ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: return self .
// return self .
Code line 481:           return self
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: increment i by integer 1 ,
// increment i by integer 1 .
Code line 482:   i += 1
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: ns is a string " http://www . w3 . org/2005/Atom " .
// substitute <unk> for ns .
Code line 483:  ns = "http://www.w3.org/2005/Atom"
BLEU = 0.00 (Bravity Penalty=0.247, Length ratio=0.417, Translated length=5, Reference length=12) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: for every form in valid_forms ,
// for every form in valid_forms ,
Code line 484:  for form in valid_forms :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method initial_form_count from the base class of the class BaseInlineFormSet , return the result .
// call the method initial_form_count from the base class of the class BaseInlineFormSet , return the result .
Code line 485:   return super ( BaseInlineFormSet , self ) . initial_form_count ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . close .
// call the method self . close .
Code line 486:           self . close ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method _itervalues with an argument self .
// define the method _itervalues with an argument self .
Code line 487:    def _itervalues ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function removetags with 2 arguments value and arg .
// define the function <unk> with 2 arguments value and tags .
Code line 488:  def removetags ( value , tags ) :
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 60.0 / 44.4 / 25.0)

Original comment: call the method self . instance . validate_unique with an argument exclude set to exclude .
// call the method self . instance . unget with an argument exclude set to exclude .
Code line 489:               self . instance . validate_unique ( exclude = exclude )
BLEU = 81.54 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16) 
(93.8 / 86.7 / 78.6 / 69.2)

Original comment: call the function mark_for_escaping with an argument value , return the result .
// call the function mark_for_escaping with an argument value , return the result .
Code line 490:  return mark_for_escaping ( value )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every path in paths ,
// for every path in paths ,
Code line 491:  for path in paths :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return cache_key .
// return cache_key .
Code line 492:   return cache_key
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: try ,
// try ,
Code line 493:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: for every elt in list_ call the method bytes_to_text with 2 argument: elt and self . encoding , append the result into a list , substitute the resulting list for list_ .
// for every elt in list_ call the method bytes_to_text with 2 arguments : elt and self . encoding , for every elt in list_ .
Code line 494:  list_ = [ bytes_to_text ( elt , self . encoding ) for elt in list_ ]
BLEU = 47.09 (Bravity Penalty=0.756, Length ratio=0.781, Translated length=25, Reference length=32) 
(80.0 / 66.7 / 56.5 / 50.0)

Original comment: if exclude is not None ,
// if exclude is not None ,
Code line 495:   if exclude is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return self . content
// return self . content .
Code line 496:           return self . content
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4) 
(80.0 / 75.0 / 66.7 / 50.0)

Original comment: if settings . DEBUG is True ,
// if settings . DEBUG is true ,
Code line 497:   if settings . DEBUG :
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: if not ,
// if not ,
Code line 498:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method self . xml . startElement with argument string ' object ' and an empty dictionary .
// call the method self . xml . startElement with 2 arguments : <unk> and integer <unk> .
Code line 499:   self . xml . startElement ( "object" , { } )
BLEU = 44.84 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19) 
(64.7 / 50.0 / 46.7 / 42.9)

Original comment: if iri is not initialized ,
// if iri is None ,
Code line 500:              if iri is None :
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: call the method self . can_read . acquire .
// call the method self . can_read . release .
Code line 501:    self . can_read . acquire ( )
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: derive class MovedAttribute from the _LazyDescr base class .
// derive the class DictWrapper from the _LazyDescr base class .
Code line 502:     class MovedAttribute ( _LazyDescr ) :
BLEU = 55.55 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9) 
(80.0 / 55.6 / 50.0 / 42.9)

Original comment: remove idx-th element from self list .
// remove idx and idx into a list , substitute the result for value .
Code line 503:           value = list . pop ( self , idx )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.000, Translated length=14, Reference length=7) 
(21.4 / 0.0 / 0.0 / 0.0)

Original comment: if ttl is not None ,
// if ttl is not None ,
Code line 504:   if ttl is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: result is an empty list .
// result is an empty list .
Code line 505:  result = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if return value of the code_changed function is true ,
// call the function _get_timezone_name , if it evaluates to true ,
Code line 506:           if code_changed ( ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(45.5 / 10.0 / 0.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 507:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: CONTEXT_SEPARATOR is a string " \x04 " .
// divide is integer <unk> .
Code line 508:    CONTEXT_SEPARATOR = "\x04"
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: if filters is true ,
// if filters is true ,
Code line 509:  if filters :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function save_m2m .
// define the function save_m2m .
Code line 510:     def save_m2m ( ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if IndexError exception is caught ,
// if IndexError exception is caught ,
Code line 511:   except IndexError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the value under the settings . __module__ key of the sys . modules dictionary , use its __file__ field as an argument for the call to the function upath , substitute the result for settingsfile .
// call the function locks . modules with an argument sys . modules , on the result call the function is_library_missing with an argument settings . modules .
Code line 512:  settingsfile = upath ( sys . modules [ settings . __module__ ] . __file__ )
BLEU = 0.00 (Bravity Penalty=0.690, Length ratio=0.730, Translated length=27, Reference length=37) 
(55.6 / 23.1 / 4.0 / 0.0)

Original comment: try ,
// try ,
Code line 513:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: otherwise if any other exception is caught ,
// if exception is caught ,
Code line 514:    except :
BLEU = 38.81 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(100.0 / 75.0 / 66.7 / 50.0)

Original comment: append d to self . fed .
// append d to self . fed .
Code line 515:           self . fed . append ( d )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 516:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the function getInnerText with argument field_node , on the result call the method strip , use the result as an argument for the call to the field . to_python method , substitute the result for value .
// call the method field . to_python with an argument field_node , strip the result of whitespaces from both ends , substitute the result for value .
Code line 517:                       value = field . to_python ( getInnerText ( field_node ) . strip ( ) )
BLEU = 25.36 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=26, Reference length=38) 
(80.8 / 56.0 / 33.3 / 17.4)

Original comment: substitute ' %s ' in string ' %s %s ' with the elements of value converted into a tuple , substitute the result for value .
// call the function <unk> with an argument value , substitute the result for value .
Code line 518:   value = '%s %s' % tuple ( value )
BLEU = 21.01 (Bravity Penalty=0.480, Length ratio=0.577, Translated length=15, Reference length=26) 
(66.7 / 42.9 / 38.5 / 33.3)

Original comment: derive the class EndToken from the TokenBase base class .
// derive the class EndToken from the base class TokenBase .
Code line 519:      class EndToken ( TokenBase ) :
BLEU = 61.48 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 66.7 / 50.0 / 42.9)

Original comment: if KeyError exception is caught ,
// if KeyError exception is caught ,
Code line 520:   except KeyError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if settings . USE_TZ is true ,
// if settings . USE_TZ is true ,
Code line 521:  if settings . USE_TZ :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . utils import translation into default namespace .
// from django . utils import translation into default name space .
Code line 522:      from django . utils import translation
BLEU = 69.89 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(81.8 / 70.0 / 66.7 / 62.5)

Original comment: define the function save_m2m .
// define the function save_m2m .
Code line 523:   def save_m2m ( ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method datetime_safe . new_date with an argument value , substitute the result for value .
// call the method datetime_safe . new_date with an argument value , substitute the result for value .
Code line 524:           value = datetime_safe . new_date ( value )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method hidden_fields with an argument self .
// define the method hidden_fields with an argument self .
Code line 525:    def hidden_fields ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return boolean True .
// return boolean True .
Code line 526:                   return True
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method copy with an argument self .
// define the method copy with an argument self .
Code line 527:    def copy ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . validate_key with argument key .
// call the method self . validate_key with argument key .
Code line 528:  self . validate_key ( key )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: id is a string " literal " .
// substitute <unk> for id .
Code line 529:     id = "literal"
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: define the function get_templatetags_modules .
// define the function get_standard_processors .
Code line 530:    def get_templatetags_modules ( ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: return dec .
// return dec .
Code line 531:                return dec
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function rfc2822_date with an argument date .
// define the function include_is_allowed with an argument date .
Code line 532:    def rfc2822_date ( date ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: decorator method register . tag with an argument ' include ' ,
// decorator function register . tag with an argument <unk> .
Code line 533:     @ register . tag ( 'include' )
BLEU = 43.99 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=10, Reference length=12) 
(70.0 / 55.6 / 50.0 / 42.9)

Original comment: get ' exclude ' attribute from the options object , if it exists substitute it for self . exclude , if not self . exclude is None .
// get <unk> attribute from the options object , if it exists substitute it for self . exclude , if not self . exclude is None .
Code line 534:  self . exclude = getattr ( options , 'exclude' , None )
BLEU = 85.89 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=26, Reference length=28) 
(96.2 / 92.0 / 91.7 / 91.3)

Original comment: from django . conf import settings object to the default name space .
// from django . conf import settings into default name space .
Code line 535:   from django . conf import settings
BLEU = 58.50 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: substitute i for self . pointer .
// substitute i for self . pointer .
Code line 536:  self . pointer = i
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: append string ' max_digits and decimal_places have been guessed , as this database handles decimal fields as float ' to field_notes .
// append an empty string to field_notes .
Code line 537:                   field_notes . append (  'max_digits and decimal_places have been guessed, as this '  'database handles decimal fields as float' )
BLEU = 0.00 (Bravity Penalty=0.117, Length ratio=0.318, Translated length=7, Reference length=22) 
(71.4 / 33.3 / 20.0 / 0.0)

Original comment: if file_or_path has an attribute ' read ' ,
// if old_path has an attribute <unk> ,
Code line 538:  if hasattr ( file_or_path , 'read' ) :
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(71.4 / 33.3 / 20.0 / 0.0)

Original comment: return an dictionary containing 1 entry: return value of the function _get_val for ' csrf_token ' .
// return an instance of <unk> class , created with an argument urlconf .
Code line 539:   return { 'csrf_token' : _get_val ( ) }
BLEU = 0.00 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17) 
(30.8 / 8.3 / 0.0 / 0.0)

Original comment: define the function decorator_from_middleware_with_args with an argument middleware_class .
// define the function get_deserializer with an argument middleware_class .
Code line 540:     def decorator_from_middleware_with_args ( middleware_class ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: define the method clean with arguments self and value .
// define the method clean with arguments self and value .
Code line 541:     def clean ( self , value ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return line .
// return line .
Code line 542:  return line
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: derive the class NumberInput from the TextInput base class .
// derive the class NumberInput from the TextInput base class .
Code line 543:      class NumberInput ( TextInput ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: decorator classmethod .
// classmethod decorator ,
Code line 544:    @ classmethod
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: define the method tzname with 2 arguments self and dt .
// define the method tzname with 2 arguments self and dt .
Code line 545:    def tzname ( self , dt ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method G with an argument self .
// define the method autocomplete with an argument self .
Code line 546:    def G ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: output_transaction is boolean False .
// output_transaction is boolean False .
Code line 547:  output_transaction = False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: skip this loop iteration .
// skip this loop iteration .
Code line 548:                       continue
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function force_str with an argument string ' <%s\npath:%s , \nGET:%s , \nPOST:%s , \nCOOKIES:%s , \nMETA:%s> ' , where ' %s ' is replaced with request . __class__ . __name__ , path , return value of the function six . text_type called with an argument get , return value of the function six . text_type called with an argument post , return value of the function six . text_type , called with an argument cookies and return value of the function six . text_type called with an argument meta .
// call the function six . text_type with 3 arguments : request . __class__ . __name__ , path and six . text_type , use the result as an argument for the call to the function force_str , use the result as an argument for the call to the function force_str , return the result .
Code line 549:  return force_str ( '<%s\npath:%s,\nGET:%s,\nPOST:%s,\nCOOKIES:%s,\nMETA:%s>' %  ( request . __class__ . __name__ ,  path ,  six . text_type ( get ) ,  six . text_type ( post ) ,  six . text_type ( cookies ) ,  six . text_type ( meta ) ) )
BLEU = 14.57 (Bravity Penalty=0.495, Length ratio=0.587, Translated length=54, Reference length=92) 
(63.0 / 37.7 / 23.1 / 13.7)

Original comment: substitute nodelist_empty for self . nodelist_empty .
// substitute nodelist_empty for self . nodelist_empty .
Code line 550:               self . nodelist_empty = nodelist_empty
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __init__ with 4 arguments: self , name , nodelist , parent set to None .
// define the method __init__ with 4 arguments : self , name , nodelist and parent set to None .
Code line 551:       def __init__ ( self , name , nodelist , parent = None ) :
BLEU = 62.90 (Bravity Penalty=1.000, Length ratio=1.056, Translated length=19, Reference length=18) 
(84.2 / 72.2 / 58.8 / 43.8)

Original comment: default is a string ' DEFAULT ' .
// default is integer <unk> .
Code line 552:    default = 'DEFAULT'
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: raise an ValueError with an argument string " Invalid timezone: %r " , substitute ' %r ' with timezone .
// raise an ValueError exception with an argument <unk> converted to a string .
Code line 553:           raise ValueError ( "Invalid timezone: %r" % timezone )
BLEU = 0.00 (Bravity Penalty=0.584, Length ratio=0.650, Translated length=13, Reference length=20) 
(61.5 / 33.3 / 18.2 / 0.0)

Original comment: if StandardError , renamed to e , exception is caught ,
// if StandardError , renamed to e , exception is caught ,
Code line 554:   except StandardError as e :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the self . file . close method , return the result .
// call the method self . file . close , return the result .
Code line 555:               return self . file . close ( )
BLEU = 63.60 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 75.0 / 54.5 / 40.0)

Original comment: serializers is an empty dictionary .
// substitute serializers for serializers .
Code line 556:  serializers = { }
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: if m is not False , None is considered False ,
// if m is false ,
Code line 557:  if not m :
BLEU = 0.00 (Bravity Penalty=0.301, Length ratio=0.455, Translated length=5, Reference length=11) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: substitute i-th element of self . initial for value under the ' initial ' key of the defaults dictionary .
// substitute i-th element of self . initial for the value under the <unk> key of the defaults dictionary .
Code line 558:                   defaults [ 'initial' ] = self . initial [ i ]
BLEU = 65.35 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20) 
(89.5 / 77.8 / 64.7 / 50.0)

Original comment: categories is a list containing the results of the function force_text , called with an argument c , for every c in categories .
// categories is a list containing results of the function force_text called with an argument c , for every c in categories .
Code line 559:               categories = [ force_text ( c ) for c in categories ]
BLEU = 76.60 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24) 
(100.0 / 90.5 / 80.0 / 68.4)

Original comment: if templatetags_modules is false ,
// if templatetags_modules is false ,
Code line 560:  if not templatetags_modules :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute obj_pk . pk for obj_pk .
// substitute obj_pk . pk for obj_pk .
Code line 561:                           obj_pk = obj_pk . pk
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 562:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function do_if with 2 arguments: parser and token .
// define the function <unk> with 2 arguments parser and token .
Code line 563:  def do_if ( parser , token ) :
BLEU = 37.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 60.0 / 33.3 / 12.5)

Original comment: append arg to ' , ' , substitute the result for arg .
// sum arg and arg , substitute the result for arg .
Code line 564:           arg = ',' + arg
BLEU = 49.20 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13) 
(72.7 / 60.0 / 55.6 / 50.0)

Original comment: call the function _ with an argument string ' p . m . ' , return the result .
// call the function _ with an argument <unk> , return the result .
Code line 565:               return _ ( 'p.m.' )
BLEU = 47.98 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=13, Reference length=19) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: date_data is a tuple with 3 elements: date . year , date . month and date . day .
// call the method date . year with arguments date . year , date . day and date . day .
Code line 566:  date_data = ( date . year , date . month , date . day )
BLEU = 42.46 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19) 
(60.0 / 47.4 / 38.9 / 29.4)

Original comment: if file path old_app_dir exists ,
// if migrations_directory file path exists ,
Code line 567:  if os . path . exists ( old_app_dir ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 40.0 / 0.0 / 0.0)

Original comment: if IndexError exception is caught ,
// if IndexError exception is caught ,
Code line 568:   except IndexError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . utils import six into default name space .
// from django . utils import six into default name space .
Code line 569:  from django . utils import six
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if dec_part is true ,
// if dec_part is true ,
Code line 570:   if dec_part :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: CRITICAL is integer 50 .
// INFO is integer 300 .
Code line 571:  CRITICAL = 50
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: return result .
// return result .
Code line 572:    return result
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if Resolver404 exception is caught ,
// if Resolver404 exception is caught ,
Code line 573:   except Resolver404 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: decorator register with argument Tags . compatibility .
// decorator register with an argument Tags . compatibility .
Code line 574:    @ register ( Tags . compatibility )
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: if self . _dir path doesnt exists ,
// if self . _dir file path doesnt exists ,
Code line 575:           if not os . path . exists ( self . _dir ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: FILE_INPUT_CONTRADICTION is an instance of object class .
// <unk> is an instance of object class .
Code line 576:      FILE_INPUT_CONTRADICTION = object ( )
BLEU = 84.09 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 85.7 / 83.3 / 80.0)

Original comment: define the method needs_multipart_form with an argument self .
// define the method urlconf_module with an argument self .
Code line 577:  def needs_multipart_form ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: if app_config . label is contained in loader . migrated_apps ,
// if app_config . label is contained in loader . migrated_apps ,
Code line 578:  if app_config . label in loader . migrated_apps :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if os . name equals to ' nt ' ,
// if os . name equals <unk> ,
Code line 579:     if os . name == 'nt' :
BLEU = 41.92 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=7, Reference length=10) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: call the function conf . copy , substitute it for params .
// call the function conf , substitute the result for params .
Code line 580:               params = conf . copy ( )
BLEU = 34.53 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12) 
(81.8 / 60.0 / 33.3 / 12.5)

Original comment: return template_name .
// return template_name .
Code line 581:               return template_name
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 582:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: try ,
// try ,
Code line 583:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: for every opt in options , if first element of opt is not contained in prev_opts , append opt to the list , substitute it for options .
// for every opt in options , if contained in the first element of <unk> is not contained in the first element of the result , substitute it for options .
Code line 584:  options = [ opt for opt in options if opt [ 0 ] not in prev_opts ]
BLEU = 47.06 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=30, Reference length=28) 
(70.0 / 55.2 / 42.9 / 29.6)

Original comment: skip this loop iteration .
// skip this loop iteration .
Code line 585:  continue
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every v in self . value call the function force_text with an argument v , add the result to a set , substitute set of the results for self . value .
// for every v in self . value call the function force_text with an argument v , for every v in self . value .
Code line 586:  self . value = set ( force_text ( v ) for v in self . value )
BLEU = 52.17 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=24, Reference length=33) 
(87.5 / 78.3 / 72.7 / 66.7)

Original comment: substitute i for p .
// substitute i for p .
Code line 587:               p = i
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . current is an empty dictionary .
// substitute self . _current for self . _current .
Code line 588:           self . _current = { }
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(33.3 / 12.5 / 0.0 / 0.0)

Original comment: call the method timezone . get_current_timezone , substitute the result for current_timezone .
// call the function timezone . get_current_timezone , substitute the result for current_timezone .
Code line 589:           current_timezone = timezone . get_current_timezone ( )
BLEU = 79.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 70.0)

Original comment: decorator function register . filter with an argument is_safe set to boolean True .
// decorator function register . filter with an argument is_safe set to boolean True .
Code line 590:     @ register . filter ( is_safe = True )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if password is None substitute settings . EMAIL_HOST_PASSWORD for self . username , if not substitute password for self . password .
// substitute settings . <unk> for self . password and settings . <unk> , respectively .
Code line 591:  self . password = settings . EMAIL_HOST_PASSWORD if password is None else password
BLEU = 16.31 (Bravity Penalty=0.627, Length ratio=0.682, Translated length=15, Reference length=22) 
(66.7 / 35.7 / 23.1 / 8.3)

Original comment: if _default is None ,
// if _default is None ,
Code line 592:   if _default is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class Command from the AppCommand base class .
// derive the class Command from the AppCommand base class .
Code line 593:    class Command ( AppCommand ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if exception ValueError or TypeError is raised ,
// if TypeError or ValueError exceptions are caught ,
Code line 594:   except ( ValueError , TypeError ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(62.5 / 0.0 / 0.0 / 0.0)

Original comment: from importlib import import_module into default name space .
// from importlib import import_module into default name space .
Code line 595:  from importlib import import_module
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return self . size .
// return self . size .
Code line 596:           return self . size
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method parser . compile_filter with an argument value , append the result to args .
// call the method parser . compile_filter with an argument value , append the result to args .
Code line 597:                   args . append ( parser . compile_filter ( value ) )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the salted_hmac with 3 arguments: salt , value and key , call the digest method on the result , use the result as an argument for the call to the b64_encode function , return the result .
// return an instance of FixedOffset class , created with 3 arguments : salt , value , key and result of the function digest . digest .
Code line 598:       return b64_encode ( salted_hmac ( salt , value , key ) . digest ( ) )
BLEU = 0.00 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=26, Reference length=38) 
(61.5 / 12.0 / 4.2 / 0.0)

Original comment: __all__is an tuple with 2 elements: strings ' BaseForm ' and ' Form ' .
// __all__ is a tuple containing 2 elements : <unk> and <unk> .
Code line 599:    __all__ = ( 'BaseForm' , 'Form' )
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=12, Reference length=15) 
(33.3 / 0.0 / 0.0 / 0.0)

Original comment: define the method __repr__ with an argument self .
// define the method __repr__ with an argument self .
Code line 600:    def __repr__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: remove symlink_path file .
// remove original_path argument .
Code line 601:           os . remove ( symlink_path )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(50.0 / 0.0 / 0.0 / 0.0)

Original comment: call the method __init__ from the base class of the EntitiesForbidden class .
// call the method __init__ from the base class of the class URLValidator .
Code line 602:           super ( EntitiesForbidden , self ) . __init__ ( )
BLEU = 77.05 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 75.0 / 72.7 / 70.0)

Original comment: call the method self . empty_variable with an argument token ,
// call the method self . _init_translation_catalog with an argument token .
Code line 603:                       self . empty_variable ( token )
BLEU = 58.77 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 70.0 / 55.6 / 37.5)

Original comment: from __future__ import unicode_literals into default name space .
// from __future__ import unicode_literals into default name space .
Code line 604:   from __future__ import unicode_literals
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if field_value is not None ,
// if field_value is not None ,
Code line 605:                   if field_value is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function __init__ with 11 arguments: self , required set to boolean True , widget set to None , label set to None , initial set to None , help_text set to an empty string , error_messages set to None , show_hidden_initial set to boolean False , validators is an empty , localize set to boolean False , label_suffix set to None .
// define the method __init__ with 4 arguments : self , required set to boolean True , widget set to boolean True ,
Code line 606:   def __init__ ( self , required = True , widget = None , label = None , initial = None ,  help_text = '' , error_messages = None , show_hidden_initial = False ,  validators = [ ] , localize = False , label_suffix = None ) :
BLEU = 8.35 (Bravity Penalty=0.148, Length ratio=0.344, Translated length=22, Reference length=64) 
(77.3 / 61.9 / 50.0 / 42.1)

Original comment: raise an ValueError exception with an argument string " Base36 input too large " .
// raise an ValueError exception with an argument <unk> set to <unk> .
Code line 607:           raise ValueError ( "Base36 input too large" )
BLEU = 41.52 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=12, Reference length=15) 
(66.7 / 54.5 / 50.0 / 44.4)

Original comment: define the function parse_etags with an argument etag_str .
// define the function <unk> with an argument etag_str .
Code line 608:      def parse_etags ( etag_str ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: substitute conditions_nodelists for self . conditions_nodelists .
// substitute conditions_nodelists for self . conditions_nodelists .
Code line 609:           self . conditions_nodelists = conditions_nodelists
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if InputStreamExhausted exception is caught ,
// if InputStreamExhausted exception is caught ,
Code line 610:   except InputStreamExhausted :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if value has an attribute ' __iter__ ' and value is not an instance of six . text_type ,
// if value has an attribute <unk> and value is not an instance of six . text_type class ,
Code line 611:                           if hasattr ( value , '__iter__' ) and not isinstance ( value , six . text_type ) :
BLEU = 68.84 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19) 
(88.9 / 76.5 / 68.8 / 60.0)

Original comment: import module os .
// import module os .
Code line 612:   import os
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method domain_part . encode with an argument string ' idna ' , on the return value call the decode method with string ' ascii ' as argument , substitute the result for domain_part .
// call the method domain_part . encode with an argument <unk> , call the method decode on the result with an argument <unk> , substitute the result for domain_part .
Code line 613:                   domain_part = domain_part . encode ( 'idna' ) . decode ( 'ascii' )
BLEU = 42.32 (Bravity Penalty=0.786, Length ratio=0.806, Translated length=29, Reference length=36) 
(86.2 / 57.1 / 44.4 / 38.5)

Original comment: call the method parser . add_argument with 4 arguments: string ' --plain ' , action set to string ' store_true ' , dest as a string ' plain ' , and help is a string ' Tells Django to use plain Python , not IPython or bpython . ' .
// call the method parser . add_argument with 5 arguments : <unk> , action set to <unk> , <unk> set to <unk> , <unk> set to <unk> , <unk> set to <unk> <unk> <unk> . <unk> " .
Code line 614:           parser . add_argument ( '--plain' , action = 'store_true' , dest = 'plain' ,  help = 'Tells Django to use plain Python, not IPython or bpython.' )
BLEU = 16.97 (Bravity Penalty=0.704, Length ratio=0.740, Translated length=37, Reference length=50) 
(45.9 / 25.0 / 20.0 / 14.7)

Original comment: substitute complain for __setitem__ .
// substitute complain for __setitem__ .
Code line 615:  __setitem__ = complain
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if row_data is contained in seen_data ,
// if row_data is contained in seen_data ,
Code line 616:                        if row_data in seen_data :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: join elements of T in a bytes string , append first r elements of result of the call to the function F with an argument l to it ,
// return a tuple with 2 elements : return value of the function _generator . join called with an argument l , and return value of the function pformat called with an argument l .
Code line 617:  return b'' . join ( T ) + F ( l ) [ : r ]
BLEU = 10.40 (Bravity Penalty=1.000, Length ratio=1.172, Translated length=34, Reference length=29) 
(38.2 / 15.2 / 6.2 / 3.2)

Original comment: if endbmatch is true ,
// if fk_name is true ,
Code line 618:  if endbmatch :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: call the method self . _format_value with an argument value , use the result as an argument for the call to the function force_text , substitute the result for final_attrs dictionary value under the ' value ' key .
// call the function force_text with an argument value , substitute the result for value under the <unk> key of the final_attrs dictionary .
Code line 619:                final_attrs [ 'value' ] = force_text ( self . _format_value ( value ) )
BLEU = 22.88 (Bravity Penalty=0.499, Length ratio=0.590, Translated length=23, Reference length=39) 
(91.3 / 63.6 / 38.1 / 20.0)

Original comment: call the function func with 2 arguments: unpacked list args and unpacked dictionary kwargs , use the result as an argument for the call to the mark_safe function , return the result .
// call the function func with 2 arguments : unpacked list args and unpacked dictionary kwargs , use the result as an argument for the call to the function mark_safe , return the result .
Code line 620:                   return mark_safe ( func ( * args , ** kwargs ) )
BLEU = 79.09 (Bravity Penalty=1.000, Length ratio=1.030, Translated length=34, Reference length=33) 
(94.1 / 81.8 / 75.0 / 67.7)

Original comment: return a string ' %02d ' formated with the result of the function self . G .
// return the result of the method self . check_migrations , return the result .
Code line 621:  return '%02d' % self . G ( )
BLEU = 18.34 (Bravity Penalty=0.807, Length ratio=0.824, Translated length=14, Reference length=17) 
(57.1 / 30.8 / 16.7 / 9.1)

Original comment: try ,
// try ,
Code line 622:         try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: from django . utils . six . moves import zip into default name space .
// from django . utils . six . moves import MONTHS into default name space .
Code line 623:  from django . utils . six . moves import zip
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(93.3 / 85.7 / 76.9 / 66.7)

Original comment: flush the output buffer of the self . stdout object .
// call the method self . stdout . flush .
Code line 624:   self . stdout . flush ( )
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11) 
(66.7 / 25.0 / 14.3 / 0.0)

Original comment: if ValueError , TypeError or OverflowError exceptions are caught ,
// if ValueError , TypeError or OverflowError exceptions are caught ,
Code line 625:   except ( ValueError , TypeError , OverflowError ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method router . get_migratable_models with arguments app_config and connection . alias .
// call the method router . get_migratable_models with arguments app_config and connection . alias , substitute the result for app_models .
Code line 626:   app_models = router . get_migratable_models ( app_config , connection . alias )
BLEU = 63.14 (Bravity Penalty=1.000, Length ratio=1.429, Translated length=20, Reference length=14) 
(70.0 / 63.2 / 61.1 / 58.8)

Original comment: substitute tuple containing 2 elements: header and value for the value under the header converted to lowercase key of the self . _headers dictionary .
// get the value under the header converted to lowercase key of the self . _headers dictionary , substitute it for value under the header converted to lowercase .
Code line 627:  self . _headers [ header . lower ( ) ] = ( header , value )
BLEU = 54.60 (Bravity Penalty=1.000, Length ratio=1.120, Translated length=28, Reference length=25) 
(71.4 / 51.9 / 50.0 / 48.0)

Original comment: call the function form . save_m2m .
// call the method form . save_m2m .
Code line 628:                       form . save_m2m ( )
BLEU = 48.89 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 40.0 / 25.0)

Original comment: substitute bits without the first element for remaining_bits .
// substitute second element of bits for remaining_bits .
Code line 629:  remaining_bits = bits [ 1 : ]
BLEU = 0.00 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9) 
(75.0 / 28.6 / 16.7 / 0.0)

Original comment: call the method signals . request_finished . send with an argument sender set to self . _handler_class .
// call the signals . request_finished . send method with sender set to self . __starttag_text as argument .
Code line 630:    signals . request_finished . send ( sender = self . _handler_class )
BLEU = 46.58 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18) 
(88.9 / 52.9 / 37.5 / 26.7)

Original comment: call the method parser . add_argument with 3 arguments: string ' --database ' , default set to DEFAULT_DB_ALIAS , and help set to a string ' Nominates a database to print the SQL for . Defaults to the " default " database . ' .
// call the method parser . add_argument with 5 arguments : <unk> , default set to DEFAULT_DB_ALIAS , and help set to a string ' <unk> to print print the SQL to print the SQL to . ' .
Code line 631:  parser . add_argument ( '--database' , default = DEFAULT_DB_ALIAS ,  help = 'Nominates a database to print the SQL for. Defaults to the '  '"default" database.' )
BLEU = 47.60 (Bravity Penalty=0.832, Length ratio=0.844, Translated length=38, Reference length=45) 
(76.3 / 62.2 / 52.8 / 42.9)

Original comment: from email . message import Message into default name space .
// from email . message import sql_all into default name space .
Code line 632:  from email . message import Message
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: substitute args for self . args .
// substitute args for self . args .
Code line 633:  self . args = args
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . request is None .
// substitute request for self . request .
Code line 634:  self . request = request
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6) 
(57.1 / 33.3 / 20.0 / 0.0)

Original comment: if ' : ' is not contained in ip_str .
// if <unk> is not contained in ip_str ,
Code line 635:    if ':' not in ip_str :
BLEU = 42.14 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10) 
(75.0 / 57.1 / 50.0 / 40.0)

Original comment: if help_texts is not None ,
// if help_texts is not None ,
Code line 636:   if help_texts is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: attrs is a empty list .
// attrs is an empty list .
Code line 637:    attrs = [ ]
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 25.0 / 0.0)

Original comment: write string ' #\n ' to out file .
// write string ' <unk> ) ' to out .
Code line 638:                           out . write ( ' #\n' )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(77.8 / 50.0 / 28.6 / 0.0)

Original comment: define the function random with an argument value .
// define the function random with an argument value .
Code line 639:  def random ( value ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if sys . stdout has an attribute named ' isatty ' and call to the sys . stdout . isatty returns boolean True , substitute True for is_a_tty .
// unpack is a tuple with 2 elements : sys . stdout and <unk> set to sys . stdout . isatty .
Code line 640:   is_a_tty = hasattr ( sys . stdout , 'isatty' ) and sys . stdout . isatty ( )
BLEU = 16.82 (Bravity Penalty=0.683, Length ratio=0.724, Translated length=21, Reference length=29) 
(52.4 / 30.0 / 21.1 / 11.1)

Original comment: substitute ' %s ' with title in the string " [ ] %s " , write it to the standard output .
// write title to the self . stdout stream .
Code line 641:                               self . stdout . write ( " [ ] %s" % title )
BLEU = 0.00 (Bravity Penalty=0.236, Length ratio=0.409, Translated length=9, Reference length=22) 
(55.6 / 12.5 / 0.0 / 0.0)

Original comment: derive class SimpleCookie from the base class http_cookies . SimpleCookie .
// derive the class SimpleCookie from the http_cookies . SimpleCookie base class .
Code line 642:   class SimpleCookie ( http_cookies . SimpleCookie ) :
BLEU = 35.93 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(91.7 / 54.5 / 30.0 / 11.1)

Original comment: convert values into a list , substitute it for value .
// convert values into a list , substitute it for values .
Code line 643:                   values = list ( values )
BLEU = 80.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 77.8 / 75.0)

Original comment: if self . connection is true ,
// if self . connection is true ,
Code line 644:  if self . connection :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method setdefault with 3 arguments: self , key and default set to None .
// define the method setdefault with 3 arguments : self , key and default set to None .
Code line 645:    def setdefault ( self , key , default = None ) :
BLEU = 76.25 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(88.2 / 81.2 / 73.3 / 64.3)

Original comment: return msg .
// return msg .
Code line 646:     return msg
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if KeyError exception is caught ,
// if KeyError exception is caught ,
Code line 647:   except KeyError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function add_move with an argument move .
// define the function MovedModule with an argument move .
Code line 648:    def add_move ( move ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: return msg .
// return msg .
Code line 649:    return msg
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: append string ' %% ( %s ) s ' to plural , where ' %s ' is replaced with t . contents .
// append <unk> to plural . contents .
Code line 650:                       plural . append ( '%%(%s)s' % t . contents )
BLEU = 0.00 (Bravity Penalty=0.102, Length ratio=0.304, Translated length=7, Reference length=23) 
(85.7 / 50.0 / 20.0 / 0.0)

Original comment: substitute app_namefor command .
// substitute app_name for command .
Code line 651:            command = app_name
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 652:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: join func . __class__ . __module__ and func . __class__ . __name__ into a string , separated by character ' . ' , substitute it for self . _func_path .
// join func . __class__ . __module__ , func . __name__ and func . __name__ , substitute the result for self . html_initial_id .
Code line 653:                self . _func_path = '.' . join ( [ func . __class__ . __module__ , func . __class__ . __name__ ] )
BLEU = 26.54 (Bravity Penalty=0.738, Length ratio=0.767, Translated length=23, Reference length=30) 
(78.3 / 50.0 / 28.6 / 15.0)

Original comment: import bpython .
// import module bpython .
Code line 654:           import bpython
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3) 
(75.0 / 33.3 / 0.0 / 0.0)

Original comment: convert tagname to lowercase , substitute it for tagname .
// substitute first element of the result for tagname .
Code line 655:   tagname = tagname . lower ( )
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10) 
(44.4 / 25.0 / 14.3 / 0.0)

Original comment: derive the class ManagementUtility from object base class .
// derive the class CacheHandler from the object base class .
Code line 656:     class ManagementUtility ( object ) :
BLEU = 39.28 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9) 
(80.0 / 55.6 / 37.5 / 14.3)

Original comment: define the method get_nodes_by_type with 2 arguments: self and nodetype .
// define the method get_nodes_by_type with 2 arguments : self and nodetype .
Code line 657:    def get_nodes_by_type ( self , nodetype ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: substitute sysid for self . sysid .
// substitute sysid for self . sysid .
Code line 658:  self . sysid = sysid
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if data is true , substitute it for data , otherwise data is an empty list .
// if data is true , substitute it for an empty list .
Code line 659:               data = data or [ ]
BLEU = 55.01 (Bravity Penalty=0.659, Length ratio=0.706, Translated length=12, Reference length=17) 
(100.0 / 90.9 / 80.0 / 66.7)

Original comment: if charset equals to string ' utf-8 ' ,
// if charset equals to <unk> ,
Code line 660:  if charset == 'utf-8' :
BLEU = 32.59 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=6, Reference length=9) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: fork a child process , if the result equals integer 0 ,
// call the function os . <unk> , if it evaluates to greater than integer 0 ,
Code line 661:               if os . fork ( ) > 0 :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=16, Reference length=12) 
(37.5 / 20.0 / 7.1 / 0.0)

Original comment: derive the class Context from the BaseContext base class .
// derive the class Context from the BaseContext base class .
Code line 662:      class Context ( BaseContext ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function register_serializer with 3 arguments: format , serializer_module and serializers set to None .
// define the function do_ifequal with 3 arguments : format , var_node and serializers set to None .
Code line 663:      def register_serializer ( format , serializer_module , serializers = None ) :
BLEU = 41.87 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(76.5 / 56.2 / 33.3 / 21.4)

Original comment: define the __init__ method with 5 arguments: self , urlconf_name , default_kwargs set to None , app_name set to None and namespace set to None .
// define the method __init__ with 4 arguments : self , urlconf_name , default_kwargs set to None , app_name set to None and namespace set to None .
Code line 664:  def __init__ ( self , urlconf_name , default_kwargs = None , app_name = None , namespace = None ) :
BLEU = 73.67 (Bravity Penalty=1.000, Length ratio=1.038, Translated length=27, Reference length=26) 
(88.9 / 73.1 / 68.0 / 66.7)

Original comment: if commit is false ,
// if commit is false ,
Code line 665:  if not commit :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the value under the ns key of the resolver . app_dict dictionary , substitute it for app_list .
// substitute value under the ns key of the resolver . _levelNames dictionary for app_list .
Code line 666:                   app_list = resolver . app_dict [ ns ]
BLEU = 51.55 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19) 
(93.3 / 71.4 / 61.5 / 50.0)

Original comment: break the loop execution .
// break from the loop execution .
Code line 667:                   break
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: return key and pdict .
// return key and owner .
Code line 668:    return key , pdict
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: otherwise if self . _meta . exclude is true and field is not contained in self . _meta . exclude ,
// otherwise if self . _meta . exclude is true and field . exclude is contained in self . _meta . exclude ,
Code line 669:   elif self . _meta . exclude and field in self . _meta . exclude :
BLEU = 78.39 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21) 
(90.9 / 81.0 / 75.0 / 68.4)

Original comment: if init_path is not a file ,
// if app_dir is not a directory ,
Code line 670:  if not os . path . isfile ( init_path ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(71.4 / 33.3 / 20.0 / 0.0)

Original comment: join dirpath and filename into a path separated by ' / ' , append it to new_filenames .
// join dirpath and filename into a file path , use it as an argument for the call to the function os . path . join .
Code line 671:                           new_filenames . append ( os . path . join ( dirpath , filename ) )
BLEU = 20.71 (Bravity Penalty=1.000, Length ratio=1.444, Translated length=26, Reference length=18) 
(42.3 / 20.0 / 16.7 / 13.0)

Original comment: define the method compress with arguments self and data_list .
// define the method compress with 2 arguments : self and data_list .
Code line 672:    def compress ( self , data_list ) :
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(83.3 / 63.6 / 50.0 / 33.3)

Original comment: otherwise if vale is not an instance of ConvertingList and value is an instance of list type ,
// otherwise if value is not an instance of ConvertingList and value is an instance of list type ,
Code line 673:   elif not isinstance ( value , ConvertingList ) and isinstance ( value , list ) :
BLEU = 85.79 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18) 
(94.4 / 88.2 / 81.2 / 80.0)

Original comment: if string end ends with string ' /> ' ,
// if end ends with <unk> ,
Code line 674:   if end . endswith ( '/>' ) :
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=6, Reference length=10) 
(83.3 / 40.0 / 25.0 / 0.0)

Original comment: call the function validate_ipv6_address with an argument value .
// call the function logging_config_func with an argument value .
Code line 675:               validate_ipv6_address ( value )
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: substitute length of existing for num_existing .
// buffer_types is a length of existing .
Code line 676:  num_existing = len ( existing )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(57.1 / 33.3 / 20.0 / 0.0)

Original comment: call the function allow_lazy with 2 arguments: javascript_quote and six . text_type , substitute the result for javascript_quote .
// call the function allow_lazy with 2 arguments : result of the function six . text_type and six . text_type .
Code line 677:   javascript_quote = allow_lazy ( javascript_quote , six . text_type )
BLEU = 38.28 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19) 
(65.0 / 42.1 / 33.3 / 23.5)

Original comment: call the method __init__ with an argument display_name , from the base class of the LoaderOrigin class .
// call the method __init__ from the base class of the class LoaderOrigin , with an argument display_name .
Code line 678:           super ( LoaderOrigin , self ) . __init__ ( display_name )
BLEU = 57.31 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18) 
(100.0 / 64.7 / 50.0 / 33.3)

Original comment: if loader is an instance of tuple or list ,
// if loader is an instance of tuple or list types ,
Code line 679:       if isinstance ( loader , ( tuple , list ) ) :
BLEU = 80.71 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(90.9 / 80.0 / 77.8 / 75.0)

Original comment: return s .
// return s .
Code line 680:           return s
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: do nothing .
// do nothing .
Code line 681:               pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 682:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method parser . add_option with an argument opt .
// call the method parser . print_help with an argument clean_data .
Code line 683:                   parser . add_option ( opt )
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 60.0 / 44.4 / 25.0)

Original comment: SINGLE_BRACE_END is a string ' } ' .
// WARNING is integer <unk> .
Code line 684:  SINGLE_BRACE_END = '}'
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: define the function abspathu with an argument path .
// define the function abspathu with an argument path .
Code line 685:       def abspathu ( path ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 686:                       try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: call the method obj . save with an argument using set to self . using .
// call the method obj . save with arguments using set to self . using .
Code line 687:                               obj . save ( using = self . using )
BLEU = 74.87 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16) 
(93.3 / 85.7 / 76.9 / 66.7)

Original comment: call the method mark_safe with lines joined into a string , separated by newlines as argument , return the result .
// call the function lines with an argument lines , join the result into a string , return the result .
Code line 688:    return mark_safe ( '\n' . join ( lines ) )
BLEU = 32.98 (Bravity Penalty=0.951, Length ratio=0.952, Translated length=20, Reference length=21) 
(70.0 / 42.1 / 27.8 / 17.6)

Original comment: if value under the ' indent ' key of the self . options dictionary is true ,
// get the value under the <unk> key of the self . options dictionary , if it is true ,
Code line 689:  if self . options . get ( "indent" ) :
BLEU = 45.31 (Bravity Penalty=1.000, Length ratio=1.118, Translated length=19, Reference length=17) 
(73.7 / 55.6 / 41.2 / 25.0)

Original comment: append f . name to exclude .
// append f . name to exclude .
Code line 690:                   exclude . append ( f . name )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: append a string ' This field type is a guess . ' to field_notes .
// append field to field_notes .
Code line 691:  field_notes . append ( 'This field type is a guess.' )
BLEU = 0.00 (Bravity Penalty=0.135, Length ratio=0.333, Translated length=5, Reference length=15) 
(100.0 / 50.0 / 33.3 / 0.0)

Original comment: create a directory self . default_locale_path .
// call the function os . makedirs with argument self . default_locale_path .
Code line 692:                       os . makedirs ( self . default_locale_path )
BLEU = 21.20 (Bravity Penalty=1.000, Length ratio=1.714, Translated length=12, Reference length=7) 
(33.3 / 27.3 / 20.0 / 11.1)

Original comment: call the method self . as_widget with 3 arguments: instance of a class Textarea , attrs and unpacked dictionary kwargs , return the result .
// call the method self . as_widget with 3 arguments : tp , attrs and unpacked dictionary kwargs , return the result .
Code line 693:  return self . as_widget ( Textarea ( ) , attrs , ** kwargs )
BLEU = 67.53 (Bravity Penalty=0.873, Length ratio=0.880, Translated length=22, Reference length=25) 
(86.4 / 81.0 / 75.0 / 68.4)

Original comment: return result .
// return result .
Code line 694:    return result
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method connection . introspection . django_table_names with an argument boolean true , substitute the result for tables .
// call the method connection . introspection . <unk> with an argument <unk> set to boolean True , substitute the result for tables .
Code line 695:           tables = connection . introspection . django_table_names ( only_existing = True )
BLEU = 56.84 (Bravity Penalty=1.000, Length ratio=1.150, Translated length=23, Reference length=20) 
(78.3 / 63.6 / 52.4 / 40.0)

Original comment: output is an empty string .
// substitute <unk> for output .
Code line 696:               output = ''
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: call the function curry with 2 arguments: _proxy_method and method set to bytes . decode , substitute the result for decode .
// call the function curry with 2 arguments : _proxy_method and method set to connection . decode , substitute the result for decode .
Code line 697:     decode = curry ( _proxy_method , method = bytes . decode )
BLEU = 70.45 (Bravity Penalty=1.000, Length ratio=1.045, Translated length=23, Reference length=22) 
(87.0 / 77.3 / 66.7 / 55.0)

Original comment: raise an ImportError exception with an argument string " No IPython " .
// raise an ImportError exception with an argument <unk> .
Code line 698:     raise ImportError ( "No IPython" )
BLEU = 48.13 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=9, Reference length=13) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: if value is an instance of list type ,
// if value is an instance of list type ,
Code line 699:   if isinstance ( value , list ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class LazyStream from the six . Iterator base class .
// derive the class BoundaryIter from the six . Iterator base class .
Code line 700:        class LazyStream ( six . Iterator ) :
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(91.7 / 81.8 / 70.0 / 55.6)

Original comment: join host and server_port into a string , separated with ' : ' , substitute the result for host .
// convert host to a string and return it .
Code line 701:                   host = '%s:%s' % ( host , server_port )
BLEU = 0.00 (Bravity Penalty=0.295, Length ratio=0.450, Translated length=9, Reference length=20) 
(55.6 / 12.5 / 0.0 / 0.0)

Original comment: substitute i-th element of self . forms for form .
// substitute i-th element of self . forms for form .
Code line 702:                   form = self . forms [ i ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute kwargs for self . kwargs .
// substitute kwargs for self . kwargs .
Code line 703:  self . kwargs = kwargs
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if f . primary_key is true ,
// if f . unique is true ,
Code line 704:  if f . primary_key :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 40.0 / 0.0)

Original comment: increment self . loaded_object_count by loaded_objects_in_fixture .
// increment self . loaded_object_count by objects_in_fixture .
Code line 705:      self . loaded_object_count += loaded_objects_in_fixture
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: if not ,
// if not ,
Code line 706:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method self . connection . sendmail with arguments: from_email , recipients and return value of the function message . as_bytes .
// call the method self . connection . <unk> with arguments from_email , sysid and message . status_code , substitute the result for self . connection .
Code line 707:               self . connection . sendmail ( from_email , recipients , message . as_bytes ( ) )
BLEU = 28.60 (Bravity Penalty=1.000, Length ratio=1.130, Translated length=26, Reference length=23) 
(57.7 / 32.0 / 20.8 / 17.4)

Original comment: call the method apps . get_model with 2 arguments: string ' auth ' and string ' Permission ' .
// call the method apps . get_model with 2 arguments <unk> and <unk> .
Code line 708:               apps . get_model ( 'auth' , 'Permission' )
BLEU = 37.28 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=13, Reference length=19) 
(76.9 / 58.3 / 54.5 / 50.0)

Original comment: replace ' %s ' in string " Cache table ' %s ' created . " with tablename , write it to self . stdout .
// call the method self . stdout . write with argument <unk> , use the result as an argument for the call to the self . stdout . write method .
Code line 709:               self . stdout . write ( "Cache table '%s' created." % tablename )
BLEU = 9.52 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=30, Reference length=25) 
(30.0 / 10.3 / 7.1 / 3.7)

Original comment: if UnicodeDecodeError exception is caught ,
// if UnicodeDecodeError exception is caught ,
Code line 710:   except UnicodeDecodeError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: convert self . name into an boolean , return it .
// convert self . name into boolean and return it .
Code line 711:           return bool ( self . name )
BLEU = 48.96 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11) 
(90.0 / 66.7 / 50.0 / 28.6)

Original comment: call te method operator . itemgetter with an argument integer 0 , substitute the result for byte2int .
// call the method operator . <unk> with an argument integer 0 , substitute the result for default_translation .
Code line 712:   byte2int = operator . itemgetter ( 0 )
BLEU = 61.34 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18) 
(83.3 / 64.7 / 56.2 / 46.7)

Original comment: from django . core . mail . backends . base import BaseEmailBackend into default name space .
// from django . core . mail . backends . base import BaseEmailBackend into default name space .
Code line 713:   from django . core . mail . backends . base import BaseEmailBackend
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: join into a file path: app_dir and string %s . %s . sql , where ' %s ' is replaced by opts . model_name and backend_name , respectively , append the result to sql_files .
// join app_dir and <unk> into a file path , append the result to sql_files .
Code line 714:           sql_files . append ( os . path . join ( app_dir , "%s.%s.sql" % ( opts . model_name , backend_name ) ) )
BLEU = 14.26 (Bravity Penalty=0.264, Length ratio=0.429, Translated length=15, Reference length=35) 
(86.7 / 64.3 / 46.2 / 33.3)

Original comment: try ,
// try ,
Code line 715:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: for every regex in tuple with 3 elements: RFC1123_DATE , RFC850_DATE and ASCTIME_DATE ,
// for every regex in return value of the function chain , called with an argument ,
Code line 716:     for regex in RFC1123_DATE , RFC850_DATE , ASCTIME_DATE :
BLEU = 17.61 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=16, Reference length=14) 
(43.8 / 20.0 / 14.3 / 7.7)

Original comment: call the method self . __bytes_cast , return the result .
// call the method self . __bytes_cast , return the result .
Code line 717:                   return self . __bytes_cast ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __init__ with 2 arguments: self and nodelist .
// define the method __init__ with 2 arguments : self and nodelist .
Code line 718:       def __init__ ( self , nodelist ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: raise an ValidationError with 2 arguments: value under the ' required ' key of the self . error_messages dictionary and code set to ' required ' .
// raise an ValidationError with 2 arguments : value under the <unk> key of the self . error_messages dictionary and code set to <unk> .
Code line 719:               raise ValidationError ( self . error_messages [ 'required' ] , code = 'required' )
BLEU = 56.08 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=24, Reference length=27) 
(83.3 / 69.6 / 59.1 / 47.6)

Original comment: if _cached_modules equals to module_values ,
// if _cached_modules equals _cached_modules ,
Code line 720:  if _cached_modules == module_values :
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: decorator is an instance of class Node , created with 2 arguments: instance of Leaf class created with 2 arguments: token . AT and " @ ' , and instance of Name class created with an argument string ' python_2_unicode_compatible ' .
// call the function Node with 3 arguments : criticals and return value of the method Node . filter , called with 2 arguments : token . <unk> and an empty list , substitute the result for decorator .
Code line 721:  decorator = Node ( syms . decorator , [ Leaf ( token . AT , "@" ) , Name ( 'python_2_unicode_compatible' ) ] )
BLEU = 0.00 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=38, Reference length=42) 
(36.8 / 5.4 / 0.0 / 0.0)

Original comment: for every lib in builtins ,
// for every lib in builtins ,
Code line 722:  for lib in builtins :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class LocalTimezone from the ReferenceLocalTimezone base class .
// derive the class LocalTimezone from the RssFeed base class .
Code line 723:      class LocalTimezone ( ReferenceLocalTimezone ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: call the function self . path with argument name , use the result as an argument for the call to the function os . path . getatime , use the result as an argument for the call to the function datetime . fromtimestamp , return the result .
// call the function self . path with argument name , use the result as an argument for the call to the function datetime . fromtimestamp , use the result as an argument for the call to the function datetime . fromtimestamp , return the result .
Code line 724:           return datetime . fromtimestamp ( os . path . getatime ( self . path ( name ) ) )
BLEU = 86.45 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=46, Reference length=48) 
(95.7 / 91.1 / 88.6 / 86.0)

Original comment: for every format in self . input_formats ,
// for every format in self . input_formats ,
Code line 725:               for format in self . input_formats :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute i-th element of tokens for token .
// substitute i-th element of tokens for token .
Code line 726:               token = tokens [ i ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function io . open with 3 arguments: work_file , string ' w ' and encoding set to settings . FILE_CHARSET as arguments , with the result renamed to fp , perform the following:
// call the function io . open with orig_file and encoding set to settings . FILE_CHARSET as arguments , with the result renamed to fp , perform the following :
Code line 727:                   with io . open ( orig_file , 'r' , encoding = settings . FILE_CHARSET ) as fp :
BLEU = 67.74 (Bravity Penalty=0.813, Length ratio=0.829, Translated length=29, Reference length=35) 
(89.7 / 85.7 / 81.5 / 76.9)

Original comment: do nothing .
// do nothing .
Code line 728:           pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: for every bit in bits ,
// for every bit in bits ,
Code line 729:  for bit in bits :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method urlresolvers . set_urlconf with urlconf as the argument .
// call the function urlresolvers . set_urlconf with urlconf as the argument .
Code line 730:  urlresolvers . set_urlconf ( urlconf )
BLEU = 76.92 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(91.7 / 81.8 / 70.0 / 66.7)

Original comment: delete self . _get .
// delete self . STDOFFSET .
Code line 731:               del self . _get
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: get the identity of the self object , use it as a key to get the value of the memo dictionary , substitute result for it .
// get the id of the self object , use it as a key to obtain the value from the memo dictionary , substitute self with it .
Code line 732:  memo [ id ( self ) ] = result
BLEU = 57.13 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=27, Reference length=27) 
(81.5 / 65.4 / 48.0 / 41.7)

Original comment: if self . help is true ,
// if self . help is true ,
Code line 733:  if self . help :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if value under the ' author_email ' key of the item dictionary is not None ,
// if value under the <unk> key of the item dictionary is not None ,
Code line 734:  if item [ 'author_email' ] is not None :
BLEU = 67.84 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16) 
(92.9 / 84.6 / 75.0 / 63.6)

Original comment: if to is true ,
// if to is true ,
Code line 735:  if to :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 736:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function remove_tags with 2 arguments: html and tags .
// define the function remove_tags with 2 arguments : html and tags .
Code line 737:    def remove_tags ( html , tags ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: call the method __init__ from the base class of the class DebugLexer , with 2 arguments: template_string and origin .
// call the method __init__ from the base class of the DebugLexer class , with arguments template_string and origin .
Code line 738:           super ( DebugLexer , self ) . __init__ ( template_string , origin )
BLEU = 63.54 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20) 
(94.7 / 72.2 / 58.8 / 50.0)

Original comment: call parser . add_argument method with ' args ' , metavar set to string ' fixture ' , nargs set to string ' * ' and help set to string ' Path ( s ) to fixtures to load before running the server . ' .
// call the method parser . add_argument with 5 arguments : <unk> , metavar set to <unk> , nargs set to <unk> , <unk> set to <unk> , <unk> set to <unk> <unk> .
Code line 739:           parser . add_argument ( 'args' , metavar = 'fixture' , nargs = '*' ,  help = 'Path(s) to fixtures to load before running the server.' )
BLEU = 13.78 (Bravity Penalty=0.674, Length ratio=0.717, Translated length=33, Reference length=46) 
(57.6 / 28.1 / 16.1 / 6.7)

Original comment: child_nodelists is a tuple with 2 elements strings ' nodelist_true ' and ' nodelist_false ' .
// child_nodelists is a tuple with 2 elements : <unk> and <unk> .
Code line 740:       child_nodelists = ( 'nodelist_true' , 'nodelist_false' )
BLEU = 39.34 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16) 
(75.0 / 54.5 / 50.0 / 44.4)

Original comment: call the method related . natural_key , substitute the result for value .
// call the method related . natural_key , substitute the result for value .
Code line 741:                   value = related . natural_key ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: close fd file .
// close the file fd .
Code line 742:                               os . close ( fd )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4) 
(80.0 / 0.0 / 0.0 / 0.0)

Original comment: define the method new_file with arguments: self , field_name , file_name , content_type , content_length , charset set to None ,
// define the method new_file with 4 arguments : self , field_name , file_name , content_type , content_length , content_length , charset and content_type_extra set to None .
Code line 743:    def new_file ( self , field_name , file_name , content_type , content_length , charset = None , content_type_extra = None ) :
BLEU = 56.06 (Bravity Penalty=1.000, Length ratio=1.286, Translated length=27, Reference length=21) 
(74.1 / 61.5 / 52.0 / 41.7)

Original comment: if bytes is contained in resultclasses , cls . _delegate_bytes is boolean True , otherwise it is boolean False .
// substitute <unk> for cls . _delegate_bytes for cls . django_template_source .
Code line 744:     cls . _delegate_bytes = bytes in resultclasses
BLEU = 0.00 (Bravity Penalty=0.441, Length ratio=0.550, Translated length=11, Reference length=20) 
(36.4 / 20.0 / 11.1 / 0.0)

Original comment: for every obj in return value of the PythonDeserializer created with 2 arguments: return value of the function yaml . load , with 2 arguments: stream and Loader set to SafeLoader , and unpacked dictionary options ,
// for every obj in return value of the function inspect . load called with arguments : stream and opening set to imported_objects , and unpacked dictionary options ,
Code line 745:           for obj in PythonDeserializer ( yaml . load ( stream , Loader = SafeLoader ) , ** options ) :
BLEU = 37.42 (Bravity Penalty=0.725, Length ratio=0.757, Translated length=28, Reference length=37) 
(78.6 / 59.3 / 42.3 / 36.0)

Original comment: define the function addslashes with an argument value .
// define the function <unk> with an argument value .
Code line 746:  def addslashes ( value ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: args is an empty tuple .
// args is an empty tuple .
Code line 747:                   args = ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . _create_alternatives with an argument msg , use it as an argument for the call to the self . _create_attachments method , return the result .
// call the method self . _create_attachments with an argument msg , use the result as an argument for the call to the self . _create_attachments method , return the result .
Code line 748:           return self . _create_attachments ( self . _create_alternatives ( msg ) )
BLEU = 78.90 (Bravity Penalty=1.000, Length ratio=1.033, Translated length=31, Reference length=30) 
(90.3 / 83.3 / 75.9 / 67.9)

Original comment: call the method datetime . datetime . strptime with 2 arguments: result of the function force_str called with an argument value , and format , return the result .
// call the method datetime . datetime . strptime with 2 arguments : result of the function force_str called with an argument value , and format , return the result .
Code line 749:           return datetime . datetime . strptime ( force_str ( value ) , format )
BLEU = 87.43 (Bravity Penalty=1.000, Length ratio=1.034, Translated length=30, Reference length=29) 
(93.3 / 89.7 / 85.7 / 81.5)

Original comment: raise an TemplateSyntaxError exception with an argument string " Invalid templatetag argument: ' %s ' . Must be one of: %s " , where ' %s ' is replaced with tag and TemplateTagNode . mapping converted into a list .
// raise TemplateSyntaxError (
Code line 750:           raise TemplateSyntaxError ( "Invalid templatetag argument: '%s'."  " Must be one of: %s" %  ( tag , list ( TemplateTagNode . mapping ) ) )
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.075, Translated length=3, Reference length=40) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: if value is not None ,
// if value is not None ,
Code line 751:  if value is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 752:    else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if id_for_label is true ,
// if id_for_label is true ,
Code line 753:  if id_for_label :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every message in messages ,
// for every message in messages ,
Code line 754:  for message in messages :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 755:           try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: for every cat in value under ' categories ' key of item dictionary ,
// for every cat in value under the <unk> key of the item dictionary ,
Code line 756:     for cat in item [ 'categories' ] :
BLEU = 48.42 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14) 
(78.6 / 61.5 / 41.7 / 27.3)

Original comment: property decorator .
// property decorator ,
Code line 757:    @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(66.7 / 50.0 / 0.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 758:    else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: from importlib import import_module into default name space .
// from importlib import import_module into default name space .
Code line 759:  from importlib import import_module
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if expires is lesser than now ,
// if expires is lesser than now ,
Code line 760:   if expires < now :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method msg_data . decode with argument charset , substitute the result for msg_data .
// call the method <unk> . decode with an argument charset , substitute the result for msg_data .
Code line 761:  msg_data = msg_data . decode ( charset )
BLEU = 64.23 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(88.2 / 75.0 / 60.0 / 42.9)

Original comment: define the function reverse with 6 arguments: viewname , urlconf set to None , args set to None , kwargs set to None , prefix set to None , current_app set to None .
// define the function reverse with 4 arguments : viewname , urlconf set to None , args set to None , prefix set to None , current_app set to None and current_app set to None .
Code line 762:     def reverse ( viewname , urlconf = None , args = None , kwargs = None , prefix = None , current_app = None ) :
BLEU = 75.50 (Bravity Penalty=1.000, Length ratio=1.029, Translated length=35, Reference length=34) 
(85.7 / 79.4 / 72.7 / 65.6)

Original comment: convert value into an floating point number , substitute it for value .
// convert value into an floating point number , substitute it for value .
Code line 763:               value = float ( value )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __setattr__ with 3 arguments: self , name and value .
// define the method __setattr__ with self , name and value as arguments .
Code line 764:   def __setattr__ ( self , name , value ) :
BLEU = 59.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(84.6 / 66.7 / 54.5 / 40.0)

Original comment: if doublecolon_start equals integer -1 ,
// if doublecolon_start equals integer -1 ,
Code line 765:  if doublecolon_start == - 1 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if fp is an instance of file and data is an instance of unicode and fp . encoding is not None ,
// if fp is an instance of unicode and fp . encoding is not None and fp is not None ,
Code line 766:    if ( isinstance ( fp , file ) and  isinstance ( data , unicode ) and  fp . encoding is not None ) :
BLEU = 68.02 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=20, Reference length=22) 
(85.0 / 73.7 / 72.2 / 70.6)

Original comment: define the method _start_relational_field with arguments self and field .
// define the method upload_complete with arguments self and field .
Code line 767:     def _start_relational_field ( self , field ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: _cached_filenames is an empty list .
// _cached_filenames is an empty list .
Code line 768:  _cached_filenames = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if PY3 is true ,
// if PY3 is true ,
Code line 769:       if PY3 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: append mw_instance . process_request at the end of request_middleware .
// append mw_instance . fetchone to the standard list .
Code line 770:                   request_middleware . append ( mw_instance . process_request )
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10) 
(55.6 / 25.0 / 14.3 / 0.0)

Original comment: get the value from the options dictionary under the key ' load_initial_data ' , substitute it for self . load_initial_data .
// get the value under the <unk> key of the options dictionary , substitute it for self . load_initial_data .
Code line 771:  self . load_initial_data = options . get ( 'load_initial_data' )
BLEU = 48.98 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21) 
(89.5 / 66.7 / 47.1 / 31.2)

Original comment: call the method m . end , slice list rest from previous result as starting index to the end , substitute the result for rest .
// call the method m . end , substitute the result for rest and rest , respectively .
Code line 772:                       rest = rest [ m . end ( ) : ]
BLEU = 40.83 (Bravity Penalty=0.589, Length ratio=0.654, Translated length=17, Reference length=26) 
(88.2 / 68.8 / 66.7 / 57.1)

Original comment: join elements of words into a string , return it .
// return an instance of a class <unk> , created with an argument words .
Code line 773:    return '' . join ( words )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.273, Translated length=14, Reference length=11) 
(42.9 / 0.0 / 0.0 / 0.0)

Original comment: define the method __init__ with 3 arguments self , states and first .
// define the method __init__ with 3 arguments : self , input_data and first .
Code line 774:   def __init__ ( self , states , first ) :
BLEU = 57.31 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(85.7 / 69.2 / 50.0 / 36.4)

Original comment: if not ,
// if not ,
Code line 775:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: _meth_func is a string " __func__ " .
// _meth_func is integer <unk> .
Code line 776:       _meth_func = "__func__"
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: if id_ is true ,
// if id_ is true ,
Code line 777:   if id_ :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if self . allow_folders is true ,
// if self . allow_folders is true ,
Code line 778:     if self . allow_folders :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get ' value ' attribute of the _active object , if it exists substitute it for t , if not t is None .
// get <unk> attribute of the _active object , if it exists substitute it for t , if not t is None .
Code line 779:  t = getattr ( _active , "value" , None )
BLEU = 83.38 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24) 
(95.5 / 90.5 / 90.0 / 89.5)

Original comment: substitute c_int64 for ULONG_PTR .
// substitute WSGIRequest for smart_str .
Code line 780:           ULONG_PTR = c_int64
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(60.0 / 0.0 / 0.0 / 0.0)

Original comment: extract the value under the key ' database ' from the options dictionary , use the value for indexing connections list , substitute the result for connection .
// get the value under the ' <unk> ' key of the options dictionary , substitute it for connection .
Code line 781:   connection = connections [ options [ 'database' ] ]
BLEU = 21.61 (Bravity Penalty=0.623, Length ratio=0.679, Translated length=19, Reference length=28) 
(78.9 / 50.0 / 29.4 / 12.5)

Original comment: try ,
// try ,
Code line 782:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: import module base64 .
// import module base64 .
Code line 783:   import base64
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define function python_2_unicode_compatible , with klass as an argument .
// define the function python_2_unicode_compatible with an argument klass .
Code line 784:      def python_2_unicode_compatible ( klass ) :
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10) 
(88.9 / 25.0 / 0.0 / 0.0)

Original comment: derive the class DisallowedHost from the SuspiciousOperation base class .
// derive the class DisallowedHost from the SuspiciousOperation base class .
Code line 785:     class DisallowedHost ( SuspiciousOperation ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: import module time .
// import module time .
Code line 786:  import time
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 787:               try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: raise an ValueError exception with an argument string " Unsupported version: %s " formated with value under ' version ' key of config dictionary .
// raise an ValueError exception with an argument string " <unk> <unk> of config value under the <unk> key .
Code line 788:               raise ValueError ( "Unsupported version: %s" % config [ 'version' ] )
BLEU = 37.20 (Bravity Penalty=0.729, Length ratio=0.760, Translated length=19, Reference length=25) 
(78.9 / 55.6 / 41.2 / 37.5)

Original comment: add k to seen .
// add k to excluded_models set .
Code line 789:   seen . add ( k )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5) 
(66.7 / 40.0 / 25.0 / 0.0)

Original comment: substitute MONTHS for self . months .
// substitute EscapeBytes for self . months .
Code line 790:               self . months = MONTHS
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: otherwise if domains equals a string django ' and , file_ext equals ' . py ' or file_ext is contained in command . extensions ,
// otherwise if domain equals to <unk> equals to <unk> , or if domain equals to <unk> equals to <unk> ,
Code line 791:   elif domain == 'django' and ( file_ext == '.py' or file_ext in command . extensions ) :
BLEU = 0.00 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=20, Reference length=25) 
(35.0 / 5.3 / 0.0 / 0.0)

Original comment: define the method id_for_label with arguments self and id .
// define the method id_for_label with 2 arguments : self and id_ .
Code line 792:    def id_for_label ( self , id_ ) :
BLEU = 38.83 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(75.0 / 45.5 / 30.0 / 22.2)

Original comment: call the function msvcrt . get_osfhandle with return value of the _fd ( f ) function as argument , substitute the result for hfile .
// call the function msvcrt . get_osfhandle with return value of the function BaseForm , use the result as an argument for the call to the function msvcrt .
Code line 793:           hfile = msvcrt . get_osfhandle ( _fd ( f ) )
BLEU = 41.83 (Bravity Penalty=1.000, Length ratio=1.120, Translated length=28, Reference length=25) 
(67.9 / 40.7 / 34.6 / 32.0)

Original comment: if use_grouping is true ,
// if use_grouping is true ,
Code line 794:    if use_grouping :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method _trans . gettext with an argument message .
// call the function _trans . gettext_noop with an argument message , return the result .
Code line 795:       return _trans . gettext ( message )
BLEU = 22.89 (Bravity Penalty=1.000, Length ratio=1.364, Translated length=15, Reference length=11) 
(60.0 / 35.7 / 15.4 / 8.3)

Original comment: return nothing .
// return nothing .
Code line 796:               return
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: substitute self . to_field_name , if true , for key , or if not , substitute string ' pk ' for key .
// if self . to_field_name is true , substitute it for key , otherwise substitute <unk> for key .
Code line 797:   key = self . to_field_name or 'pk'
BLEU = 0.00 (Bravity Penalty=0.757, Length ratio=0.783, Translated length=18, Reference length=23) 
(77.8 / 47.1 / 18.8 / 0.0)

Original comment: define the method root_attributes with an argument self .
// define the method root_attributes with an argument self .
Code line 798:    def root_attributes ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function safe_join with 2 arguments template_dir and template_name , yield the result .
// call the function safe_join with 2 arguments template_dir and template_name , yield the result .
Code line 799:                   yield safe_join ( template_dir , template_name )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function self . tag with 2 arguments: function_name and compile_func .
// call the method self . tag with 2 arguments : function_name and compile_func .
Code line 800:  self . tag ( function_name , compile_func )
BLEU = 48.42 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(78.6 / 61.5 / 41.7 / 27.3)

Original comment: call the method formats . sanitize_separators with an argument value , substitute the result for value .
// call the method formats . sanitize_separators with an argument value , substitute the result for value .
Code line 801:               value = formats . sanitize_separators ( value )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method nud with 2 arguments: self and parser .
// define the method nud with 2 arguments : self and parser .
Code line 802:    def nud ( self , parser ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: import module warnings .
// import module warnings .
Code line 803:  import warnings
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return lib .
// return lib .
Code line 804:    return lib
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: non_capturing_groups is an empty list .
// <unk> is an empty list .
Code line 805:  non_capturing_groups = [ ]
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: call the MigrationAutodetector function with arguments , return value of the call to the method executor . loader . project_state , and return value of the call to the method ProjectState . from_apps with apps as an argument , assign it to the autodetector .
// call the method executor . loader . <unk> with an argument apps , call the method <unk> on the result with an argument apps , call the method <unk> on the result , substitute the result for autodetector .
Code line 806:   autodetector = MigrationAutodetector (  executor . loader . project_state ( ) ,  ProjectState . from_apps ( apps ) ,  )
BLEU = 16.49 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=39, Reference length=45) 
(64.1 / 23.7 / 10.8 / 8.3)

Original comment: decorator function register . filter with an argument is_safe set to boolean True .
// decorator function register . filter with an argument is_safe set to boolean True .
Code line 807:         @ register . filter ( is_safe = True )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an CommandError exception with an argument string " couldn ' t download URL %s to %s: %s " , where ' %s ' is replaced with url , filename and e .
// raise an CommandError exception with an argument <unk> ,
Code line 808:               raise CommandError ( "couldn't download URL %s to %s: %s" %  ( url , filename , e ) )
BLEU = 5.22 (Bravity Penalty=0.069, Length ratio=0.273, Translated length=9, Reference length=33) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: validate_comma_separated_integer_list is a instance of a RegexValidator class , created with 3 arguments: comma_separated_int_list_re , return value of the call to the function _ with an argument string ' Enter only digits separated by commas . ' and string ' invalid ' .
// <unk> is an instance of a RegexValidator class , created with 3 arguments : _string_concat , return value of the function _ called with an argument <unk> , return value is the result of the function _ called with an argument <unk> .
Code line 809:  validate_comma_separated_integer_list = RegexValidator ( comma_separated_int_list_re , _ ( 'Enter only digits separated by commas.' ) , 'invalid' )
BLEU = 32.68 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=43, Reference length=43) 
(51.2 / 38.1 / 29.3 / 20.0)

Original comment: return filelist .
// return filelist .
Code line 810:  return filelist
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if six . PY2 is true , _BASE64_DECODE_ERROR is TypeError , if not , _BASE64_DECODE_ERROR is binascii . Error .
// if TypeError of six . PY2 is true , call the function six . PY2 with an argument six . PY2 .
Code line 811:   _BASE64_DECODE_ERROR = TypeError if six . PY2 else binascii . Error
BLEU = 24.18 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=22, Reference length=20) 
(45.5 / 23.8 / 20.0 / 15.8)

Original comment: if lang is None ,
// if lang is None ,
Code line 812:           if lang is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: append a tuple containing 3 elements: filename , content , mimetype to self . attachments list .
// append a tuple with 2 elements : filename and content , to self . attachments .
Code line 813:  self . attachments . append ( ( filename , content , mimetype ) )
BLEU = 24.38 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17) 
(68.8 / 40.0 / 21.4 / 7.7)

Original comment: in the string " <%s: level=%r , msg=%r , hint=%r , obj=%r , id=%r> " , replace ' %s ' with the name of the type of this class instance , replace all the ' %r ' with self . level , self . msg , self . hint . self . obj and self . id , respectively , return the result .
// return <unk> <unk> with self . __class__ . __name__ , self . level , self . hint , self . hint , self . hint , self . hint and self . hint , respectively .
Code line 814:           return "<%s: level=%r, msg=%r, hint=%r, obj=%r, id=%r>" % ( self . __class__ . __name__ , self . level , self . msg , self . hint , self . obj , self . id )
BLEU = 13.32 (Bravity Penalty=0.459, Length ratio=0.562, Translated length=36, Reference length=64) 
(66.7 / 37.1 / 23.5 / 12.1)

Original comment: update self dictionary with updates .
// call the method self . update with an argument unused_char .
Code line 815:   self . update ( updates )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.833, Translated length=11, Reference length=6) 
(36.4 / 0.0 / 0.0 / 0.0)

Original comment: from django . http . utils import fix_location_header and conditional_content_removal into default name space .
// from django . http . utils import get_current_timezone_name and get_exception_reporter_filter into default name space .
Code line 816:  from django . http . utils import fix_location_header , conditional_content_removal
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(86.7 / 71.4 / 61.5 / 50.0)

Original comment: call the function _add_doc with 2 arguments: reraise and string " " " Reraise an exception . " " " .
// call the function _add_doc with 2 arguments : statement and <unk> .
Code line 817:     _add_doc ( reraise , """Reraise an exception.""" )
BLEU = 21.18 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=12, Reference length=21) 
(66.7 / 45.5 / 40.0 / 33.3)

Original comment: call the method __init__ from the base class of the class MultiWidget , with an argument attrs .
// call the method __init__ from the base class of the class MultiWidget , with an argument attrs .
Code line 818:  super ( MultiWidget , self ) . __init__ ( attrs )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __init__ with 2 arguments: self and name .
// define the method __init__ with 2 arguments : self and name .
Code line 819:        def __init__ ( self , name ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: replace ' %s ' in string " Cache table ' %s ' already exists . " with tablename , write it to the self . stdout stream .
// call the method self . stdout . write with <unk> as argument , write the result to self . stdout .
Code line 820:                   self . stdout . write ( "Cache table '%s' already exists." % tablename )
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=21, Reference length=28) 
(47.6 / 15.0 / 5.3 / 0.0)

Original comment: if not ,
// if not ,
Code line 821:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: decrement remaining by length of emitting .
// decrement remaining by length of buf .
Code line 822:  remaining -= len ( emitting )
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: call the add_argument method on the parser object , with string ' app_label ' , and help set to string ' App label of the application containing the migration . ' as arguments .
// call the method parser . add_argument with 2 arguments : <unk> set to the return value of the call to the parser . add_argument method and <unk> as the arguments .
Code line 823:           parser . add_argument ( 'app_label' ,  help = 'App label of the application containing the migration.' )
BLEU = 0.00 (Bravity Penalty=0.908, Length ratio=0.912, Translated length=31, Reference length=34) 
(54.8 / 20.0 / 0.0 / 0.0)

Original comment: if Exception , renamed to e , exception is caught ,
// if Exception , renamed to e , exception is caught ,
Code line 824:   except Exception as e :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an CommandError exception with an argument string " Command doesn ' t accept any arguments " .
// raise an CommandError exception with an argument <unk> , use the result as an argument for the call to the function CommandError , respectively .
Code line 825:               raise CommandError ( "Command doesn't accept any arguments" )
BLEU = 23.71 (Bravity Penalty=1.000, Length ratio=1.389, Translated length=25, Reference length=18) 
(32.0 / 25.0 / 21.7 / 18.2)

Original comment: replace every occurrence of string ' \r\n ' in message with ' \n ' , replace every occurrence of string ' \r ' , in the previous result for with string ' \n ' , substitute the result for eol_message .
// call the method message . replace with 2 arguments : <unk> and string " <unk> ( <unk> ) ( <unk> ) " , replace ' %s ' with <unk> of <unk> converted to a string , return the result .
Code line 826:    eol_message = message . replace ( str ( '\r\n' ) , str ( '\n' ) ) . replace ( str ( '\r' ) , str ( '\n' ) )
BLEU = 0.00 (Bravity Penalty=0.975, Length ratio=0.976, Translated length=40, Reference length=41) 
(40.0 / 5.1 / 0.0 / 0.0)

Original comment: substitute c_void_p for PVOID .
// substitute python_reloader for int2byte .
Code line 827:   PVOID = c_void_p
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(60.0 / 0.0 / 0.0 / 0.0)

Original comment: if self . use_natural_primary_keys is false or obj doesnt have a ' natural_key ' attribute .
// if self . use_natural_primary_keys is false or obj doesnt have <unk> ,
Code line 828:  if not self . use_natural_primary_keys or not hasattr ( obj , 'natural_key' ) :
BLEU = 57.83 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16) 
(83.3 / 81.8 / 80.0 / 77.8)

Original comment: define the method M with an argument self .
// define the method reader_enters with an argument self .
Code line 829:    def M ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: if not ,
// if not ,
Code line 830:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: context is an instance of a class Context , created with 2 arguments: dictionary created by apllying options to unpacked dictionary containing 3 entries: name for base_name , top_dir for base_directory and docs_version for ' docs_version ' and autoescape set to boolean False .
// context is an instance of Context class , created with 4 arguments : unpacked dictionary options , unpacked list fixture_labels and <unk> set to boolean False .
Code line 831:    context = Context ( dict ( options , ** {  base_name : name ,  base_directory : top_dir ,  'docs_version' : docs_version ,  } ) , autoescape = False )
BLEU = 18.53 (Bravity Penalty=0.533, Length ratio=0.614, Translated length=27, Reference length=44) 
(74.1 / 42.3 / 28.0 / 16.7)

Original comment: define the function strip_spaces_between_tags with an argument value .
// define the function strip_spaces_between_tags with an argument value .
Code line 832:    def strip_spaces_between_tags ( value ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: import module cgi .
// import module tarfile .
Code line 833:   import cgi
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(75.0 / 33.3 / 0.0 / 0.0)

Original comment: if self . decimal_places is not None and decimals is grater than self . decimal_places:
// if self . decimal_places is not None and decimals is greater than self . decimal_places ,
Code line 834:   if self . decimal_places is not None and decimals > self . decimal_places :
BLEU = 67.39 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(81.2 / 73.3 / 64.3 / 53.8)

Original comment: define the method __enter__ with argument self .
// define the method __enter__ with an argument self .
Code line 835:     def __enter__ ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: call the method cls with 3 arguments: value under the ' filename ' key of file_dict , value under the ' content ' key of file_dict ,
// get the value under the <unk> key of the temp_lib dictionary , if it doesnt exists return value under the <unk> key of the cls dictionary , if the key doesnt exists return an empty list , if not , return an empty string .
Code line 836:  return cls ( file_dict [ 'filename' ] ,  file_dict [ 'content' ] ,  file_dict . get ( 'content-type' , 'text/plain' ) )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.667, Translated length=45, Reference length=27) 
(31.1 / 13.6 / 4.7 / 0.0)

Original comment: for every form in self . extra_forms ,
// for every form in self . _ordering ,
Code line 837:  for form in self . extra_forms :
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 71.4 / 66.7 / 60.0)

Original comment: if VariableDoesNotExist exception is caught ,
// if VariableDoesNotExist exception is caught ,
Code line 838:   except VariableDoesNotExist :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: directory_created is an empty dictionary .
// <unk> is None .
Code line 839:  directory_created = { }
BLEU = 0.00 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=4, Reference length=6) 
(50.0 / 0.0 / 0.0 / 0.0)

Original comment: value is an instance of ConvertingTuple class , created with an argument value .
// call the function ConvertingTuple with an argument value , substitute the result for value .
Code line 840:               value = ConvertingTuple ( value )
BLEU = 21.02 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14) 
(53.3 / 28.6 / 15.4 / 8.3)

Original comment: call the method m . groups , use the first element of the result as key for obtaining value from self . config dictionary , substitute it for d .
// call the method m . groups , substitute first element of the result for d .
Code line 841:  d = self . config [ m . groups ( ) [ 0 ] ]
BLEU = 29.68 (Bravity Penalty=0.417, Length ratio=0.533, Translated length=16, Reference length=30) 
(100.0 / 86.7 / 64.3 / 46.2)

Original comment: once split at the ' . ' value under the ' ENGINE ' key of the connection . settings_dict dictionary , substitute last element of the result for backend_name .
// call the method connection . NOTICE with an argument string ' <unk> ' , substitute the last element of the result for script_name .
Code line 842:      backend_name = connection . settings_dict [ 'ENGINE' ] . split ( '.' ) [ - 1 ]
BLEU = 20.65 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=24, Reference length=30) 
(62.5 / 30.4 / 18.2 / 14.3)

Original comment:  if self . max_digits is not None and self . decimal_places is not None and whole_digits is grater than the difference of , self . max_digits and self . decimal_places ,
// if self . max_digits is not None ,
Code line 843:   if ( self . max_digits is not None and self . decimal_places is not None  and whole_digits > ( self . max_digits - self . decimal_places ) ) :
BLEU = 4.91 (Bravity Penalty=0.056, Length ratio=0.258, Translated length=8, Reference length=31) 
(100.0 / 85.7 / 83.3 / 80.0)

Original comment: x is integer 0 .
// x is an integer 0 .
Code line 844:     x = 0
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5) 
(83.3 / 60.0 / 25.0 / 0.0)

Original comment: field_type is a string ' NullBooleanField ( '
// substitute <unk> for field_type .
Code line 845:                               field_type = 'NullBooleanField('
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(20.0 / 0.0 / 0.0 / 0.0)

Original comment: from django . utils . regex_helper import normalize into default name space .
// from django . utils . <unk> import normalize into default name space .
Code line 846:  from django . utils . regex_helper import normalize
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: call the method handler . addQuickElement with 2 arguments: string ' updated ' and result of the function rfc3339_date , called with an argument value under the ' updateddate ' key of the item dictionary .
// call the method handler . addQuickElement with 2 arguments : <unk> and value under the <unk> key of the item dictionary , call the method handler . addQuickElement with an argument value .
Code line 847:               handler . addQuickElement ( 'updated' , rfc3339_date ( item [ 'updateddate' ] ) )
BLEU = 39.77 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=33, Reference length=36) 
(69.7 / 50.0 / 38.7 / 26.7)

Original comment: if not ,
// if not ,
Code line 848:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: set attr . name attribute of Module_six_moves_urllib_robotparser object to attr .
// set attr . name attribute of Module_six_moves_urllib_response object to attr .
Code line 849:       setattr ( Module_six_moves_urllib_robotparser , attr . name , attr )
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: substitute self . waiting_readers for t .
// substitute self . waiting_readers for t .
Code line 850:                   t = self . waiting_readers
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function allow_lazy with an argument chars , substitute the result for chars .
// call the function allow_lazy with an argument chars , substitute the result for chars .
Code line 851:   chars = allow_lazy ( chars )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the __init__ method from the base class of the HttpResponse class , with the arguments: unpacked list args and unpacked dictionary kwargs .
// call the method __init__ from the base class of the class HttpResponse , with 2 arguments : unpacked list args , and unpacked dictionary kwargs .
Code line 852:           super ( HttpResponse , self ) . __init__ ( * args , ** kwargs )
BLEU = 42.26 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=26, Reference length=24) 
(84.6 / 52.0 / 33.3 / 21.7)

Original comment: try ,
// try ,
Code line 853:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: if initial is not None ,
// if initial is not None ,
Code line 854:            if initial is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method validate_unique with an argument self .
// define the method validate_unique with an argument self .
Code line 855:     def validate_unique ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method tempfile . NamedTemporaryFile with argument suffix set to string ' . upload ' .
// call the method tempfile . NamedTemporaryFile with an argument suffix set to <unk> , substitute the result for file .
Code line 856:               file = tempfile . NamedTemporaryFile ( suffix = '.upload' )
BLEU = 42.46 (Bravity Penalty=1.000, Length ratio=1.176, Translated length=20, Reference length=17) 
(60.0 / 47.4 / 38.9 / 29.4)

Original comment: old_handler is None .
// old_handler is None .
Code line 857:                       old_handler = None
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an ValidationError with 3 arguments: dictionary self . error_messages value under the key ' invalid_pk_value ' , code set to string ' invalid_pk_value and params with an entry: pk for ' pk ' .
// raise an ValidationError with 3 arguments : value under the <unk> key of the self . error_messages dictionary , code set to <unk> , and params set to <unk> .
Code line 858:                   raise ValidationError (  self . error_messages [ 'invalid_pk_value' ] ,  code = 'invalid_pk_value' ,  params = { 'pk' : pk } ,  )
BLEU = 25.04 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=30, Reference length=35) 
(66.7 / 41.4 / 25.0 / 11.1)

Original comment: convert value to an integer .
// convert value into an integer and substitute it for value .
Code line 859:  value = int ( value )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.833, Translated length=11, Reference length=6) 
(45.5 / 20.0 / 0.0 / 0.0)

Original comment: for every k in doomed ,
// for every k in sorted_items ,
Code line 860:  for k in doomed :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: get the value under the field key of self . fields dictionary , substitute error_messages field of the result for error_messages .
// substitute value under the field . error_messages key of the self . fields dictionary for error_messages .
Code line 861:                   error_messages = self . fields [ field ] . error_messages
BLEU = 30.49 (Bravity Penalty=0.745, Length ratio=0.773, Translated length=17, Reference length=22) 
(94.1 / 62.5 / 33.3 / 14.3)

Original comment: define the function csrf with an argument request .
// define the function get_tag_uri with an argument request .
Code line 862:    def csrf ( request ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: convert locale to lowercase and return it .
// convert locale to lowercase , return it .
Code line 863:           return locale . lower ( )
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 71.4 / 50.0 / 20.0)

Original comment: join statements in a string separated by newline , return the result .
// join statements into a string , return it .
Code line 864:  return '\n' . join ( statements )
BLEU = 0.00 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=9, Reference length=13) 
(77.8 / 37.5 / 0.0 / 0.0)

Original comment: return func .
// return func .
Code line 865:  return func
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define lambda function that returns self . file . xreadlines field , use it as an argument for property function , put the result in xreadlines .
// define lambda function that returns self . file . __init__ field , use it as an argument for property function , put the result in __init__ .
Code line 866:  xreadlines = property ( lambda self : self . file . xreadlines )
BLEU = 82.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=27, Reference length=27) 
(92.6 / 84.6 / 80.0 / 75.0)

Original comment: append value under k key of self dictionary to a list , for every k in self . keyOrder , return the result .
// for every k in self . keyOrder append list containing elements of self . keyOrder , return the resulting list .
Code line 867:               return [ self [ k ] for k in self . keyOrder ]
BLEU = 42.63 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24) 
(71.4 / 50.0 / 42.1 / 38.9)

Original comment: if value is None ,
// if value is None ,
Code line 868:  if value is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if stream_or_string is an instance of bytes ,
// if stream_or_string is an instance of bytes ,
Code line 869:  if isinstance ( stream_or_string , bytes ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return boolean False .
// return boolean False .
Code line 870:    return False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if ImportError exception is caught ,
// if ImportError exception is caught ,
Code line 871:   except ImportError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . importer with an argument used , substitute the result for found .
// call the method self . importer with an argument used , substitute the result for found .
Code line 872:               found = self . importer ( used )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: remove self . _regex_validator from self . validators .
// call the method self . validators . remove with an argument self . _regex_validator .
Code line 873:               self . validators . remove ( self . _regex_validator )
BLEU = 24.60 (Bravity Penalty=1.000, Length ratio=1.667, Translated length=15, Reference length=9) 
(53.3 / 35.7 / 23.1 / 8.3)

Original comment: return self . _client .
// return self . _client .
Code line 874:    return self . _client
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: change access mode of path to stat . S_IWRITE mode .
// call the function os . chmod with arguments path and stat . <unk> .
Code line 875:    os . chmod ( path , stat . S_IWRITE )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.273, Translated length=14, Reference length=11) 
(28.6 / 7.7 / 0.0 / 0.0)

Original comment: for every table_name in return value of the method connection . introspection . table_names called with an argument cursor ,
// call the method connection . introspection . table_names with an argument cursor , for every loop in the result ,
Code line 876:  for table_name in connection . introspection . table_names ( cursor ) :
BLEU = 51.09 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20) 
(75.0 / 57.9 / 44.4 / 35.3)

Original comment: otherwise if bmatch is true ,
// otherwise if over_bytes is true ,
Code line 877:    elif bmatch :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 25.0 / 0.0)

Original comment: get the value under the format key of the _serializers dictionary , return the Serializer filed of the result .
// return the value under the format key of the _serializers dictionary , return it .
Code line 878:   return _serializers [ format ] . Serializer
BLEU = 57.98 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=15, Reference length=20) 
(86.7 / 85.7 / 76.9 / 75.0)

Original comment: if close is True ,
// if close is true ,
Code line 879:           if close :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: substitute serialize for __str__ .
// substitute serialize for __str__ .
Code line 880:           __str__ = serialize
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 881:               try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: try ,
// try ,
Code line 882:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: call the method m . groups , substitute the first element of the result for idx .
// call the method m . groups , substitute first element of the result for idx .
Code line 883:                           idx = m . groups ( ) [ 0 ]
BLEU = 83.20 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=16, Reference length=17) 
(100.0 / 93.3 / 85.7 / 76.9)

Original comment: substitute second element of elt for param .
// substitute second element of elt for param .
Code line 884:  param = elt [ 1 ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method _get_choices with an argument self .
// define the method _get_choices with an argument self .
Code line 885:    def _get_choices ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . utils . datastructures import MultiValueDict into default name space .
// from django . utils . datastructures import MultiValueDict into default name space .
Code line 886:   from django . utils . datastructures import MultiValueDict
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define __del__ method with self as the argument .
// define the method <unk> with an argument self .
Code line 887:    def __del__ ( self ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(77.8 / 0.0 / 0.0 / 0.0)

Original comment: return result .
// return result .
Code line 888:               return result
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: update dictionary item with an argument kwargs .
// update item dictionary with kwargs .
Code line 889:  item . update ( kwargs )
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8) 
(100.0 / 20.0 / 0.0 / 0.0)

Original comment: get the value under the LANGUAGE_SESSION_KEY key of the request . session dictionary , substitute it for lang_code .
// get the value under the backend key of the request . COOKIES dictionary , substitute it for lang_code .
Code line 890:           lang_code = request . session . get ( LANGUAGE_SESSION_KEY )
BLEU = 68.88 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19) 
(89.5 / 77.8 / 64.7 / 50.0)

Original comment: upto is integer 0 .
// upto is integer 0 .
Code line 891:  upto = 0
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an CommandError exception with an argument string " couldn ' t handle %s template %s . " , replace ' %s ' with self . app_or_project and template .
// raise an CommandError with an argument <unk> .
Code line 892:     raise CommandError ( "couldn't handle %s template %s." %  ( self . app_or_project , template ) )
BLEU = 0.00 (Bravity Penalty=0.064, Length ratio=0.267, Translated length=8, Reference length=30) 
(87.5 / 57.1 / 33.3 / 0.0)

Original comment: define the method _text_words with 3 arguments: self , length and truncate .
// define the method incr_version with 3 arguments : self , length and truncate .
Code line 893:   def _text_words ( self , length , truncate ) :
BLEU = 48.42 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(78.6 / 61.5 / 41.7 / 27.3)

Original comment: derive the class CallbackFilter from logging . Filter base class .
// derive the class <unk> from logging . Filter base class .
Code line 894:      class CallbackFilter ( logging . Filter ) :
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: for every char in fmt ,
// for every char in fmt ,
Code line 895:  for char in fmt :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method states . items , for every state and rules in the result ,
// for every state in return value of manifest . items method ,
Code line 896:   for state , rules in states . items ( ) :
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16) 
(66.7 / 27.3 / 10.0 / 0.0)

Original comment: reverse the order of modules elements , put them into a list , return it .
// sort elements of modules into a list , return it .
Code line 897:           return list ( reversed ( modules ) )
BLEU = 41.16 (Bravity Penalty=0.635, Length ratio=0.688, Translated length=11, Reference length=16) 
(90.9 / 70.0 / 55.6 / 50.0)

Original comment: call the method self . data . utctimetuple , use the result as an argument for the call to the function calendar . timegm , return result converted into an integer .
// call the method calendar . NOTICE , convert the result to a integer , use it as an argument for the call to the function calendar , convert the result into a integer , return it .
Code line 898:               return int ( calendar . timegm ( self . data . utctimetuple ( ) ) )
BLEU = 34.59 (Bravity Penalty=1.000, Length ratio=1.156, Translated length=37, Reference length=32) 
(64.9 / 41.7 / 25.7 / 20.6)

Original comment: if arg is None
// if arg is None ,
Code line 899:   if arg is None :
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4) 
(80.0 / 75.0 / 66.7 / 50.0)

Original comment: property decorator ,
// property decorator ,
Code line 900:    @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: join statements into a string , separated by newlines , return it .
// join statements into a string , return it .
Code line 901:  return '\n' . join ( statements )
BLEU = 55.75 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=9, Reference length=13) 
(100.0 / 100.0 / 85.7 / 66.7)

Original comment: define the method __init__ with 5 arguments: self , max_length set to None , min_length set to None , unpacked list args , and unpacked dictionary kwargs .
// define the method __init__ with 4 arguments : self , max_length set to None , min_length set to None , unpacked list args and unpacked dictionary kwargs .
Code line 902:       def __init__ ( self , max_length = None , min_length = None , * args , ** kwargs ) :
BLEU = 76.37 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=28, Reference length=28) 
(89.3 / 81.5 / 73.1 / 64.0)

Original comment: call the method self . get_full_path , append the result to string ' // ' , substitute it for location .
// call the function <unk> , substitute the result for location .
Code line 903:                 location = '//%s' % self . get_full_path ( )
BLEU = 0.00 (Bravity Penalty=0.403, Length ratio=0.524, Translated length=11, Reference length=21) 
(81.8 / 50.0 / 11.1 / 0.0)

Original comment: if KeyError exception is caught ,
// if KeyError exception is caught ,
Code line 904:   except KeyError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: finally perform ,
// finally perform ,
Code line 905:     finally :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: self . app_label is a string ' django_cache ' .
// substitute <unk> for self . app_label .
Code line 906:  self . app_label = 'django_cache'
BLEU = 0.00 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=7, Reference length=10) 
(57.1 / 33.3 / 20.0 / 0.0)

Original comment: remove dirname from the dirnames .
// remove dirname from the dirnames .
Code line 907:                       dirnames . remove ( dirname )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function split_url with an argument url .
// define the function get_system_encoding with an argument url .
Code line 908:            def split_url ( url ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: return data .
// return data .
Code line 909:               return data
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: from django . conf import settings into default name space .
// from django . conf import settings into default name space .
Code line 910:  from django . conf import settings
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return an instance of a class RegexURLResolver created with arguments: raw string ' ^/ ' and a list containing an element ns_resolver .
// return an instance of a class RegexURLResolver , created with 2 arguments : <unk> and an empty list .
Code line 911:  return RegexURLResolver ( r'^/' , [ ns_resolver ] )
BLEU = 30.30 (Bravity Penalty=0.810, Length ratio=0.826, Translated length=19, Reference length=23) 
(68.4 / 38.9 / 29.4 / 25.0)

Original comment: if attrs is false , make attrs an empty dictionary .
// substitute attrs for attrs .
Code line 912:                   attrs = attrs or { }
BLEU = 0.00 (Bravity Penalty=0.301, Length ratio=0.455, Translated length=5, Reference length=11) 
(60.0 / 0.0 / 0.0 / 0.0)

Original comment: substitute TemporaryFile for NamedTemporaryFile .
// substitute DEFAULT_MAX_NUM for NamedTemporaryFile .
Code line 913:     NamedTemporaryFile = TemporaryFile
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: get the value under the ' filename ' key of the disposition dictionary , substitute it for file_name .
// get the value under the <unk> key of the disposition dictionary , substitute it for file_name .
Code line 914:                        file_name = disposition . get ( 'filename' )
BLEU = 73.63 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: if self . initial is true , substitute the length of self . initial for initial_forms , if not , initial_forms is integer 0 .
// if length of self . initial is true , return boolean True , otherwise initial_forms is boolean False .
Code line 915:                initial_forms = len ( self . initial ) if self . initial else 0
BLEU = 31.21 (Bravity Penalty=0.729, Length ratio=0.760, Translated length=19, Reference length=25) 
(68.4 / 44.4 / 35.3 / 31.2)

Original comment: return boolean True if self . level is greater than or equals to ERROR , otherwise return boolean False .
// if self . level is greater or equal to ERROR , return boolean True , otherwise return boolean False .
Code line 916:           return self . level >= ERROR
BLEU = 60.05 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20) 
(90.0 / 73.7 / 55.6 / 35.3)

Original comment: if transfer_encoding is not None ,
// if transfer_encoding is not None ,
Code line 917:  if transfer_encoding is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 918:           try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: define the function timeuntil_filter with 2 arguments value and arg set to None .
// define the function <unk> with 2 arguments value and arg set to None .
Code line 919:  def timeuntil_filter ( value , arg = None ) :
BLEU = 78.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14) 
(92.9 / 84.6 / 75.0 / 63.6)

Original comment: leave_locale_alone is boolean True
// leave_locale_alone is boolean True .
Code line 920:  leave_locale_alone = True
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4) 
(80.0 / 75.0 / 66.7 / 50.0)

Original comment: models is a string ' models '
// models is integer <unk> .
Code line 921:  models = 'models'
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=5, Reference length=7) 
(40.0 / 25.0 / 0.0 / 0.0)

Original comment: for every node in self . nodelist_loop ,
// for every node in self . nodelist_loop ,
Code line 922:           for node in self . nodelist_loop :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute max_expr for self . max_expr .
// substitute CacheEntry for self . _encoding .
Code line 923:  self . max_expr = max_expr
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(71.4 / 33.3 / 20.0 / 0.0)

Original comment: increment i by integer 1 , substitute the result for i .
// increment i by integer 1 , substitute the result for i .
Code line 924:  i = i + 1
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: otherwise if field . rel is true and field . rel is an instance of the models . ManyToOneRel object ,
// otherwise if field . rel is true and field . rel is an instance of models . ManyToManyRel ,
Code line 925:     elif field . rel and isinstance ( field . rel , models . ManyToOneRel ) :
BLEU = 73.83 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21) 
(94.7 / 83.3 / 76.5 / 75.0)

Original comment: val is None .
// val is None .
Code line 926:               val = None
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute _iteritems for iteritems .
// substitute _iteritems for iteritems .
Code line 927:           iteritems = _iteritems
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . connection is a instance of a class contained in connection_class , instantiated with arguments: self . host , self . port , and unpacked dictionary connection_params .
// convert self . host into a string , substitute it for self . connection .
Code line 928:               self . connection = connection_class ( self . host , self . port , ** connection_params )
BLEU = 0.00 (Bravity Penalty=0.393, Length ratio=0.517, Translated length=15, Reference length=29) 
(60.0 / 28.6 / 15.4 / 0.0)

Original comment: call the function get_library with an argument taglib , substitute the result for lib .
// call the function get_library with an argument taglib , substitute the result for lib .
Code line 929:                   lib = get_library ( taglib )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . build_attrs with an argument id set to field modulus id_ , substitute the result for local_attrs .
// call the method self . build_attrs with an argument id , substitute the result for pluralmatch .
Code line 930:   local_attrs = self . build_attrs ( id = field % id_ )
BLEU = 57.74 (Bravity Penalty=0.745, Length ratio=0.773, Translated length=17, Reference length=22) 
(94.1 / 81.2 / 73.3 / 64.3)

Original comment: if path is not contained in self . _js ,
// if path is not contained in self . _js ,
Code line 931:                   if path not in self . _js :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if value under the ' daemonize ' of options dictionary is None ,
// if value under the <unk> key of options dictionary is None ,
Code line 932:    if options [ "daemonize" ] is None :
BLEU = 58.34 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: return FormSet .
// return FormSet .
Code line 933:  return FormSet
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function curry with 3 arguments: _curried_func , unpacked list args and unpacked dictionary kwargs .
// define the function curry with 3 arguments : argset , unpacked list args and unpacked dictionary kwargs .
Code line 934:       def curry ( _curried_func , * args , ** kwargs ) :
BLEU = 71.60 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17) 
(83.3 / 76.5 / 68.8 / 60.0)

Original comment: call the method parser . next_token , substitute the result for token .
// call the method parser . next_token , substitute the result for token .
Code line 935:  token = parser . next_token ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: decorator function register . filter with an argument is_safe set to boolean False .
// decorator function register . filter with an argument is_safe set to boolean False .
Code line 936:     @ register . filter ( is_safe = False )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function func with an argument path .
// call the function func with an argument path .
Code line 937:   func ( path )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method formats . number_format with 2 arguments: number and absolute value of p , use the result as an argument for the call to the mark_safe function , return the result .
// call the method formats . number_format with 2 arguments : number and new_file_name , use the result as an argument for the call to the function mark_safe , return the result .
Code line 938:  return mark_safe ( formats . number_format ( number , abs ( p ) ) )
BLEU = 65.40 (Bravity Penalty=0.939, Length ratio=0.941, Translated length=32, Reference length=34) 
(90.6 / 74.2 / 63.3 / 55.2)

Original comment: define the method _add_local_translations with an argument self .
// define the method __getinitargs__ with an argument self .
Code line 939:     def _add_local_translations ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: from django . utils . six . moves import html_parser as _html_parse into default name space .
// from django . utils . six . moves import ProjectState as _ExpatParser into default name space .
Code line 940: from django . utils . six . moves import html_parser as _html_parser
BLEU = 70.86 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(88.2 / 75.0 / 66.7 / 57.1)

Original comment: define the function get_objects .
// define the function <unk> .
Code line 941:    def get_objects ( ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: substitute cls . __text_cast for cls . __text_cast .
// substitute cls . __text_cast for cls . __unicode__ .
Code line 942:                       cls . __unicode__ = cls . __text_cast
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: if self . verbosity is greater or equal to integer 2 ,
// if self . verbosity is greater or equal to integer 2 ,
Code line 943:   if self . verbosity >= 2 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: month_field is a string ' %s_month ' .
// loaded_objects_in_fixture is integer <unk> .
Code line 944:  month_field = '%s_month'
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: define the method __hash__ with an argument self .
// define the method __hash__ with an argument self .
Code line 945:    def __hash__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . _archive . close .
// call the method self . _archive . close .
Code line 946:           self . _archive . close ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . utils . formats import localize into default name space .
// from django . utils . formats import localize into default name space .
Code line 947:  from django . utils . formats import localize
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __init__ with 7 arguments: self , data set to None , files set to None , auto_id set to an string ' id_%s ' ,
// define the method __init__ with 4 arguments : self , data set to None , files set to None , auto_id set to None , error_class set to None , error_class set to None and error_class set to an empty tuple .
Code line 948:  def __init__ ( self , data = None , files = None , auto_id = 'id_%s' , prefix = None ,  initial = None , error_class = ErrorList ) :
BLEU = 43.87 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=42, Reference length=28) 
(52.4 / 46.3 / 42.5 / 35.9)

Original comment: define the method handle_inspection with 2 argument: self and options .
// define the method created_time with 2 arguments : self and options .
Code line 949:     def handle_inspection ( self , options ) :
BLEU = 34.17 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(75.0 / 54.5 / 30.0 / 11.1)

Original comment: from django . utils . safestring import SafeData and EscapeData into default name space .
// from django . utils . safestring import SafeData and EscapeData into default name space .
Code line 950:  from django . utils . safestring import SafeData , EscapeData
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method serialize with 3 arguments: self , queryset and unpacked dictionary options .
// define the method serialize with 3 arguments : self , queryset and unpacked dictionary options .
Code line 951:   def serialize ( self , queryset , ** options ) :
BLEU = 74.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 80.0 / 71.4 / 61.5)

Original comment: convert value to lowercase and return the result .
// convert value to lowercase , return it .
Code line 952:  return value . lower ( )
BLEU = 33.76 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9) 
(75.0 / 42.9 / 33.3 / 20.0)

Original comment: if ValueError exception is caught ,
// if ValueError exception is caught ,
Code line 953:   except ValueError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: append filename to filenames .
// append filename to filenames .
Code line 954:               filenames . append ( filename )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: increment piece by firs element of elt .
// append first element of elt to piece .
Code line 955:               piece += elt [ 0 ]
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(62.5 / 28.6 / 16.7 / 0.0)

Original comment: for every base in new_class . __mro__ in reversed order ,
// for every base in reversed list new_class . local_fields ,
Code line 956:  for base in reversed ( new_class . __mro__ ) :
BLEU = 32.12 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11) 
(80.0 / 55.6 / 25.0 / 14.3)

Original comment: import module os .
// import module os .
Code line 957: import os
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get ' value ' attribute of the _active object , if it exists substitute it for t , if not t is None .
// get <unk> attribute of the _active object , if it exists substitute it for t , if not t is None .
Code line 958:   t = getattr ( _active , "value" , None )
BLEU = 83.38 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24) 
(95.5 / 90.5 / 90.0 / 89.5)

Original comment: from django . core . validators import EMPTY_VALUES into default name space .
// from django . core . validators import cookie_date into default name space .
Code line 959:    from django . core . validators import EMPTY_VALUES
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: delete the value under the key key of self . _expire_info dictionary .
// delete the value under the key key of self . _expire_info dictionary .
Code line 960:  del self . _expire_info [ key ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 961:    else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: m2m_convert is a lambda function with an argument v , return value is the result of the function smart_text called with an argument: return value of the method field . rel . to . _meta . pk . to_python called with an argument v .
// zip field . rel . to . _meta . pk . pk . pk . pk and return value of the function smart_text , called with an argument v .
Code line 962:                       m2m_convert = lambda v : smart_text ( field . rel . to . _meta . pk . to_python ( v ) )
BLEU = 36.25 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=30, Reference length=45) 
(76.7 / 65.5 / 57.1 / 44.4)

Original comment: property decorator ,
// property decorator ,
Code line 963:     @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: return media .
// return media .
Code line 964:   return media
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the method _handle_fk_field_node with arguments self , node and field .
// define the method handle_merge with arguments self , node and field .
Code line 965:    def _handle_fk_field_node ( self , node , field ) :
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(91.7 / 81.8 / 70.0 / 55.6)

Original comment: if end is lesser than integer 0 ,
// if end is lesser than integer 0 ,
Code line 966:   if end < 0 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method os . umask with an argument umask .
// call the function os . umask with an argument umask .
Code line 967:  os . umask ( umask )
BLEU = 74.19 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 62.5)

Original comment: call the function re . compile with 2 arguments: raw string ' ( ?:<br clear= " all " >|<i><\/i>|<b><\/b>|<em><\/em>|<strong><\/strong>|<\/?smallcaps>|<\/?uppercase> ) ' and re . IGNORECASE , substitute the result for html_gunk_re .
// call the function re . compile with 2 arguments : <unk> and re . IGNORECASE , substitute the result for <unk> .
Code line 968:  html_gunk_re = re . compile ( r'(?:<br clear="all">|<i><\/i>|<b><\/b>|<em><\/em>|<strong><\/strong>|<\/?smallcaps>|<\/?uppercase>)' , re . IGNORECASE )
BLEU = 43.47 (Bravity Penalty=0.635, Length ratio=0.688, Translated length=22, Reference length=32) 
(81.8 / 71.4 / 65.0 / 57.9)

Original comment: call the function re . compile with arguments regex and re . UNICODE , substitute the result for compiled_regex .
// call the function re . compile with 2 arguments : regex and re . UNICODE , substitute the result for unichr .
Code line 969:                   compiled_regex = re . compile ( regex , re . UNICODE )
BLEU = 69.41 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=22, Reference length=20) 
(86.4 / 71.4 / 65.0 / 57.9)

Original comment: obj is an instance of Node class , created with 2 arguments: connector set to self . connector and negated set to self . negated .
// obj is an instance of Node class , created with arguments : connector set to self . connector and negated set to self . negated .
Code line 970:  obj = Node ( connector = self . connector , negated = self . negated )
BLEU = 85.31 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=26, Reference length=26) 
(92.3 / 88.0 / 83.3 / 78.3)

Original comment: call the method kwargs . update with an argument self . default_args .
// update self . default_args dictionary with self . default_args .
Code line 971:    kwargs . update ( self . default_args )
BLEU = 22.38 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=10, Reference length=13) 
(70.0 / 33.3 / 25.0 / 14.3)

Original comment: if only_initial is false ,
// if only_initial is false ,
Code line 972:               if not only_initial :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function sql_destroy_indexes with 3 arguments: app_config , self . style and connection , substitute the result for statements .
// call the function sql_destroy_indexes with 3 arguments : app_config , self . style and connection , substitute the result for statements .
Code line 973:  statements = sql_destroy_indexes ( app_config , self . style , connection )
BLEU = 82.32 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21) 
(90.9 / 85.7 / 80.0 / 73.7)

Original comment: if ValidationError renamed to e , exception is caught ,
// if ValidationError , renamed to e , exception is caught ,
Code line 974:   except ValidationError as e :
BLEU = 74.19 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(90.9 / 80.0 / 66.7 / 62.5)

Original comment: call the traceback . extract_tb method with argument tb , substitute the first element of last row of the result to filename .
// call the function traceback . <unk> with an argument error_class , substitute second element of the result for filename .
Code line 975:                    filename = traceback . extract_tb ( tb ) [ - 1 ] [ 0 ]
BLEU = 0.00 (Bravity Penalty=0.861, Length ratio=0.870, Translated length=20, Reference length=23) 
(70.0 / 36.8 / 5.6 / 0.0)

Original comment: derive the class metaclass form the meta base class .
// derive the class metaclass from the meta base class .
Code line 976:        class metaclass ( meta ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: return a string " UTC " .
// return <unk> .
Code line 977:           return "UTC"
BLEU = 0.00 (Bravity Penalty=0.264, Length ratio=0.429, Translated length=3, Reference length=7) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: substitute elements of self . template_string list from upto index to the end for last_lit .
// substitute the last element of self . template_string for view_path .
Code line 978:   last_bit = self . template_string [ upto : ]
BLEU = 17.71 (Bravity Penalty=0.635, Length ratio=0.688, Translated length=11, Reference length=16) 
(72.7 / 30.0 / 22.2 / 12.5)

Original comment: decorator stringfilter ,
// decorator stringfilter ,
Code line 979:  @ stringfilter
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if ValueError exception is caught ,
// if ValueError exception is caught ,
Code line 980:   except ValueError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return a list containing first element of source and a list containing params .
// return first element of source and second element of params .
Code line 981:   return [ source [ 0 ] ] , [ params ]
BLEU = 31.76 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14) 
(72.7 / 50.0 / 33.3 / 25.0)

Original comment: call the function os . path . basename with first element of self . argv as an argument , substitute the result for self . prog_name .
// call the method os . path . basename with an argument : first element of self . argv , substitute the result for self . prog_name .
Code line 982:  self . prog_name = os . path . basename ( self . argv [ 0 ] )
BLEU = 67.99 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=27, Reference length=27) 
(92.6 / 76.9 / 60.0 / 50.0)

Original comment: try ,
// try ,
Code line 983:                   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: call the method qs . using with an argument form . instance . _state . db , substitute the result for qs .
// call the method qs . using with an argument form . instance . get_all_field_names , substitute the result for qs .
Code line 984:   qs = qs . using ( form . instance . _state . db )
BLEU = 78.70 (Bravity Penalty=0.909, Length ratio=0.913, Translated length=21, Reference length=23) 
(95.2 / 90.0 / 84.2 / 77.8)

Original comment: translation . _info is an empty dictionary .
// substitute nonlocal_root for translation . __cause__ .
Code line 985:  translation . _info = { }
BLEU = 0.00 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8) 
(42.9 / 16.7 / 0.0 / 0.0)

Original comment: substitute integers 0 , 1 , 2 and 3 for PREV , NEXT , KEY and RESULT , respectivley .
// opt_dict is an instance of a class <unk> , created with 5 arguments : substitutions , an empty integer 0 , and integer 2 .
Code line 986:  PREV , NEXT , KEY , RESULT = 0 , 1 , 2 , 3
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=25, Reference length=20) 
(28.0 / 4.2 / 0.0 / 0.0)

Original comment: append string ' AutoField? ' to comment_notes .
// append <unk> to comment_notes .
Code line 987:                               comment_notes . append ( 'AutoField?' )
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: import module sys .
// import module sys .
Code line 988:  import sys
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method decr_version with 4 arguments , self , key , delta defaulting to integer 1 and version defaulting to None .
// define the method <unk> with 4 arguments : self , key , delta set to integer 1 and version set to None .
Code line 989:    def decr_version ( self , key , delta = 1 , version = None ) :
BLEU = 46.07 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=23, Reference length=23) 
(82.6 / 63.6 / 42.9 / 20.0)

Original comment: exc_info is an tuple with 3 elements: None , result of method record . getMessage and None .
// call the function reraise with 3 arguments : None , record , and None , substitute the result for exc_info .
Code line 990:               exc_info = ( None , record . getMessage ( ) , None )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=21, Reference length=18) 
(47.6 / 15.0 / 0.0 / 0.0)

Original comment: define the method __str__ with an argument self .
// define the method __str__ with an argument self .
Code line 991:    def __str__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function get_default_timezone , use the result as an argument for the call to the function _get_timezone_name , return the result .
// call the function get_default_timezone , use the result as an argument for the call to the function _get_timezone_name , return the result .
Code line 992:  return _get_timezone_name ( get_default_timezone ( ) )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=23, Reference length=23) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: import module sys .
// import module sys .
Code line 993:  import sys
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class BadSerializer from the object base class .
// derive the class Literal from the object base class .
Code line 994:    class BadSerializer ( object ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: if LookupError exception is caught ,
// if LookupError exception is caught ,
Code line 995:   except LookupError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method as_string with arguments self and unixfrom set to boolean False .
// define the method as_string with arguments self and unixfrom set to boolean False .
Code line 996:       def as_string ( self , unixfrom = False ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=14, Reference length=14) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute old_method_name for self . old_method_name .
// substitute old_method_name for self . old_method_name .
Code line 997:  self . old_method_name = old_method_name
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute result of the self . path function with argument name for full_path .
// call the method self . path with argument name , substitute the result for full_path .
Code line 998:           full_path = self . path ( name )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=16, Reference length=14) 
(75.0 / 40.0 / 21.4 / 0.0)

Original comment: define the method handle with arguments self and unpacked dictionary options .
// define the method handle with arguments self and unpacked dictionary options .
Code line 999:    def handle ( self , ** options ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the stream_or_string . read function , substitute the result for stream_or_string .
// call the method stream_or_string . read , substitute the result for stream_or_string .
Code line 1000:           stream_or_string = stream_or_string . read ( )
BLEU = 62.34 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 75.0 / 54.5 / 40.0)

Original comment: return an empty list .
// return an empty list .
Code line 1001:               return [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if ValueError or TypeError exceptions are caught ,
// if TypeError or ValueError exceptions are caught ,
Code line 1002:   except ( ValueError , TypeError ) :
BLEU = 41.11 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 42.9 / 33.3 / 20.0)

Original comment: otherwise if token . token_type equals integer 1 ,
// otherwise if token . token_type equals integer 1 ,
Code line 1003:   elif token . token_type == 1 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method Image . open with an argument file , on the result call the verify method
// call the method to_delete . open ( ) .
Code line 1004:                  Image . open ( file ) . verify ( )
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=9, Reference length=18) 
(55.6 / 37.5 / 14.3 / 0.0)

Original comment: is length of list_ equals integer 0 ,
// if length of list_ equals integer 0 ,
Code line 1005:  if len ( list_ ) == 0 :
BLEU = 84.09 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 85.7 / 83.3 / 80.0)

Original comment: return list with 2 elements: first_item and second_item , and old_style_list .
// return a list with 3 elements : display_name , second_item and old_style_list .
Code line 1006:   return [ first_item , second_item ] , old_style_list
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12) 
(61.5 / 25.0 / 9.1 / 0.0)

Original comment: define the get_str_from_wsgi function with environ , key and default as arguments .
// define the function python_reloader with environ , default and default as arguments .
Code line 1007:     def get_str_from_wsgi ( environ , key , default ) :
BLEU = 43.53 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(84.6 / 58.3 / 36.4 / 20.0)

Original comment: if NotImplementedError exception ,
// if NotImplementedError exception is caught ,
Code line 1008:   except NotImplementedError :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=6, Reference length=4) 
(66.7 / 40.0 / 25.0 / 0.0)

Original comment: convert s to integer of base 36 , substitute it for value .
// convert s to an integer , substitute it for value .
Code line 1009:   value = int ( s , 36 )
BLEU = 50.31 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13) 
(90.9 / 70.0 / 55.6 / 37.5)

Original comment: define the method clean with 2 arguments: self and value .
// define the method clean with arguments self and value .
Code line 1010:    def clean ( self , value ) :
BLEU = 59.54 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: replace ' %s ' in string " Running pre-migrate handlers for application %s " with app_config . label , print it to the standard output .
// append a string " ( <unk> handlers for application <unk> % ( <unk> in app_config . label .
Code line 1011:               print ( "Running pre-migrate handlers for application %s" % app_config . label )
BLEU = 0.00 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=18, Reference length=26) 
(55.6 / 29.4 / 12.5 / 0.0)

Original comment: define the method __bool__ with argument self .
// define the method __bool__ with an argument self .
Code line 1012:    def __bool__ ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: if extend is boolean True ,
// if extend is boolean True ,
Code line 1013:                   if extend is True :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the index of the first occurrence of tagname , substitute it for i .
// call the method open_tags . index with an argument tagname , substitute the result for i .
Code line 1014:                       i = open_tags . index ( tagname )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15) 
(52.9 / 25.0 / 13.3 / 0.0)

Original comment: call the decode function with argument string ' ascii ' on the return value of the method domain . encode with argument string ' idna ' substitute the result for domain .
// call the method domain . encode with an argument <unk> , call the method decode on the result with an argument <unk> , substitute the result for domain .
Code line 1015:  domain = domain . encode ( 'idna' ) . decode ( 'ascii' )
BLEU = 34.00 (Bravity Penalty=0.902, Length ratio=0.906, Translated length=29, Reference length=32) 
(69.0 / 42.9 / 29.6 / 23.1)

Original comment: from django . utils . encoding import force_text and iri_to_uri into default name space .
// from django . utils . encoding import force_text and iri_to_uri into default name space .
Code line 1016:  from django . utils . encoding import force_text , iri_to_uri
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute ' %s ' in string ' # %s ' with line , write it to out file .
// write string ' # <unk> % % % " to out .
Code line 1017:                           out . write ( ' # %s' % line )
BLEU = 0.00 (Bravity Penalty=0.558, Length ratio=0.632, Translated length=12, Reference length=19) 
(58.3 / 27.3 / 10.0 / 0.0)

Original comment: write a string " Resetting sequences\n " to self . stdout stream .
// write <unk> to self . stdout stream .
Code line 1018:                       self . stdout . write ( "Resetting sequences\n" )
BLEU = 37.85 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=8, Reference length=13) 
(87.5 / 71.4 / 66.7 / 60.0)

Original comment: import module cgi .
// import module tarfile .
Code line 1019:  import cgi
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(75.0 / 33.3 / 0.0 / 0.0)

Original comment: EventHandler . modified_code is FILE_MODIFIED .
// substitute BOOL for LockFileEx . modified_code .
Code line 1020:                   EventHandler . modified_code = FILE_MODIFIED
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=7, Reference length=6) 
(42.9 / 16.7 / 0.0 / 0.0)

Original comment: from django . utils import six into default name space .
// from django . utils import six into default name space .
Code line 1021:  from django . utils import six
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __iter__ with an argument self .
// define the method __iter__ with an argument self .
Code line 1022:    def __iter__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive class Command from the base class AppCommand .
// derive the class Command from the AppCommand base class .
Code line 1023:    class Command ( AppCommand ) :
BLEU = 34.57 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9) 
(90.0 / 44.4 / 25.0 / 14.3)

Original comment: call the method new_name . find , with an argument string ' __ ' , if it evaluates to greater or equal than integer 0 ,
// call the method new_name . find with an argument <unk> , if it evaluates to greater or equal to integer 0 ,
Code line 1024:    if new_name . find ( '__' ) >= 0 :
BLEU = 53.92 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=22, Reference length=26) 
(90.9 / 76.2 / 60.0 / 42.1)

Original comment: call the function cls with 8 arguments: date . year , date . month , date . day , time . hour , time . minute , time . second , time . microsecond , and time . tzinfo , return the result .
// return an instance of a class cls . year , called with 4 arguments : date , date . month , field . day , result of the function time . microsecond , and time . microsecond , and time . second , return the result .
Code line 1025:           return cls ( date . year , date . month , date . day ,  time . hour , time . minute , time . second ,  time . microsecond , time . tzinfo )
BLEU = 38.60 (Bravity Penalty=1.000, Length ratio=1.068, Translated length=47, Reference length=44) 
(68.1 / 47.8 / 33.3 / 20.5)

Original comment: call the method MIMEMultipart . __init__ with 5 arguments: self , _subtype , boundary , _subparts and unpacked dictionary _params .
// call the method MIMEMultipart . __init__ with 4 arguments : self , _subtype , boundary , iterations and unpacked dictionary resultclasses .
Code line 1026:  MIMEMultipart . __init__ ( self , _subtype , boundary , _subparts , ** _params )
BLEU = 54.48 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21) 
(77.3 / 61.9 / 50.0 / 36.8)

Original comment: if filename ends with extensions or filename is contained in extra_files ,
// if filename ends with extensions and filename is contained in extra_files ,
Code line 1027:   if filename . endswith ( extensions ) or filename in extra_files :
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(91.7 / 81.8 / 70.0 / 55.6)

Original comment: call the method middleware . process_request with an argument request , substitute the result for result .
// call the method middleware . fetchone with an argument request , substitute the result for result .
Code line 1028:                       result = middleware . process_request ( request )
BLEU = 82.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: define the method render with 2 arguments: self and context .
// define the method render with 2 arguments : self and context .
Code line 1029:       def render ( self , context ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: skip this loop execution .
// skip this loop iteration .
Code line 1030:                               continue
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: return an empty string .
// return <unk> .
Code line 1031:           return ''
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=3, Reference length=5) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: define the function get_bytes_from_wsgi with environ , key and default as arguments .
// define the function get_bytes_from_wsgi with environ , default and default as arguments .
Code line 1032:     def get_bytes_from_wsgi ( environ , key , default ) :
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: derive the class _OFFSET from the Structure base class .
// derive the class JsLexer from the XMLGenerator base class .
Code line 1033:    class _OFFSET ( Structure ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(80.0 / 55.6 / 25.0 / 0.0)

Original comment: call the method _trans . ngettext with 3 arguments singular , plural and number .
// call the method _trans . ngettext with 3 arguments : singular , plural and number , return the result .
Code line 1034:       return _trans . ngettext ( singular , plural , number )
BLEU = 59.32 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=20, Reference length=15) 
(75.0 / 63.2 / 55.6 / 47.1)

Original comment: return an string ' 0 ' .
// return <unk> .
Code line 1035:               return '0'
BLEU = 0.00 (Bravity Penalty=0.264, Length ratio=0.429, Translated length=3, Reference length=7) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: call the method self . stdout . write with an argument string " Loading ' %s ' fixtures . . . " , where ' %s ' is replaced with fixture_name .
// write <unk> to the self . stdout stream .
Code line 1036:               self . stdout . write ( "Loading '%s' fixtures..." % fixture_name )
BLEU = 0.00 (Bravity Penalty=0.078, Length ratio=0.281, Translated length=9, Reference length=32) 
(66.7 / 25.0 / 14.3 / 0.0)

Original comment: call the function getInnerText with argument k , on the result call the method strip , for every k in keys , append the results to field_value list .
// call the function getInnerText with an argument k , for every k in keys , call the function getInnerText with an argument k , substitute the result for field_value .
Code line 1037:                        field_value = [ getInnerText ( k ) . strip ( ) for k in keys ]
BLEU = 39.42 (Bravity Penalty=1.000, Length ratio=1.034, Translated length=30, Reference length=29) 
(70.0 / 48.3 / 32.1 / 22.2)

Original comment: fork a child process , if the result equals integer 0 ,
// call the function os . <unk> , if it evaluates to greater than integer 0 ,
Code line 1038:               if os . fork ( ) > 0 :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=16, Reference length=12) 
(37.5 / 20.0 / 7.1 / 0.0)

Original comment: if locale_dir is false ,
// if locale_dir is false ,
Code line 1039:   if not locale_dir :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method parser . add_argument with 4 arguments: string ' args ' , metavar set to string ' app_label [ . ModelName ] ' , nargs set to ' * ' and help is a string ' Restricts dumped data to the specified app_label or app_label . ModelName . ' .
// call the method parser . add_argument with 5 arguments : <unk> , metavar set to <unk> , nargs set to <unk> , <unk> set to <unk> <unk> , use the result as an argument for the call to the method parser . delete_first_token .
Code line 1040:           parser . add_argument ( 'args' , metavar = 'app_label[.ModelName]' , nargs = '*' ,  help = 'Restricts dumped data to the specified app_label or app_label.ModelName.' )
BLEU = 21.09 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=44, Reference length=52) 
(43.2 / 30.2 / 21.4 / 14.6)

Original comment: call the method self . writer_leaves .
// call the method self . writer_leaves .
Code line 1041:               self . writer_leaves ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: templatetags_modules is an empty list .
// templatetags_modules is an empty list .
Code line 1042:     templatetags_modules = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . forms import Form into default name space .
// from django . forms import autoreload into default name space .
Code line 1043:  from django . forms import Form
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: call the connection . cursor method , substitute the result for cursor .
// call the connection . cursor method , substitute the result for cursor .
Code line 1044:  cursor = connection . cursor ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the self . initial_form_count method , return the sublist of self . forms , using previous result as start index to the end .
// return the value under the self . initial_form_count key of the self . forms dictionary .
Code line 1045:  return self . forms [ self . initial_form_count ( ) : ]
BLEU = 15.11 (Bravity Penalty=0.570, Length ratio=0.640, Translated length=16, Reference length=25) 
(75.0 / 40.0 / 21.4 / 7.7)

Original comment: call the method g . flatten with arguments self and unixfrom set to unixfrom .
// call the method g . flatten with 2 arguments : self and unixfrom set to unixfrom .
Code line 1046:  g . flatten ( self , unixfrom = unixfrom )
BLEU = 70.86 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15) 
(88.2 / 75.0 / 66.7 / 57.1)

Original comment: for every opt in list containing 3 elements: strings ' fields ' , ' exclude ' and ' localized_fields ' ,
// for every opt in tuple with 4 elements : <unk> , <unk> and <unk> ,
Code line 1047:      for opt in [ 'fields' , 'exclude' , 'localized_fields' ] :
BLEU = 12.68 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=15, Reference length=21) 
(46.7 / 21.4 / 15.4 / 8.3)

Original comment: define the method close with argument self .
// define the method close with argument self .
Code line 1048:    def close ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class DisallowedRedirect from the SuspiciousOperation base class .
// derive the class StreamingHttpResponse from the SuspiciousOperation base class .
Code line 1049:     class DisallowedRedirect ( SuspiciousOperation ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: delete the value under key key of self . _cache dictionary .
// delete the value under the key key of self . _cache dictionary .
Code line 1050:                   del self . _cache [ key ]
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: return an empty string .
// return <unk> .
Code line 1051:  return ''
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=3, Reference length=5) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: define the method _list_cache_files with argument self .
// define the method _get_name with an argument self .
Code line 1052:    def _list_cache_files ( self ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(77.8 / 50.0 / 28.6 / 0.0)

Original comment: if second element of url_fields is false ,
// if second element of url_fields is false ,
Code line 1053:   if not url_fields [ 1 ] :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute file . name for filename .
// substitute file . name for filename .
Code line 1054:                   filename = file . name
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: otherwise if ' = ' is contained in part ,
// otherwise if <unk> is contained in part ,
Code line 1055:   elif '=' in part :
BLEU = 46.31 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=8, Reference length=10) 
(87.5 / 71.4 / 50.0 / 40.0)

Original comment: otherwise if maxsize is None ,
// otherwise if maxsize is None ,
Code line 1056:     elif maxsize is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function with arguments self and filename .
// define the method extract with 2 arguments self and filename .
Code line 1057:    def extract ( self , filename ) :
BLEU = 41.72 (Bravity Penalty=1.000, Length ratio=1.222, Translated length=11, Reference length=9) 
(72.7 / 50.0 / 33.3 / 25.0)

Original comment: call the method os . setsid .
// call the os . <unk> function .
Code line 1058:   os . setsid ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(71.4 / 33.3 / 0.0 / 0.0)

Original comment: if i is greater than sys . maxint ,
// if i is greater than sys . LANGUAGES_BIDI ,
Code line 1059:   if i > sys . maxint :
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: define the method utcoffset with 2 arguments: self and dt .
// define the method utcoffset with 2 arguments self and dt .
Code line 1060:     def utcoffset ( self , dt ) :
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: if self . _wrapped is empty ,
// if self . _wrapped is empty ,
Code line 1061:           if self . _wrapped is empty :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: perform binary or for operands: fourth element of_attr_list and termios . ECHO , store the result in fourth element of attr_list .
// append termios to the end of attr_list .
Code line 1062:                   attr_list [ 3 ] |= termios . ECHO
BLEU = 0.00 (Bravity Penalty=0.174, Length ratio=0.364, Translated length=8, Reference length=22) 
(62.5 / 28.6 / 16.7 / 0.0)

Original comment: if self . empty is true ,
// if self . empty is true ,
Code line 1063:    if self . empty :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an TemplateSyntaxError exception with an argument " ' %s ' received unexpected keyword argument ' %s ' " , where ' %s ' are replaced with name and param .
// raise TemplateSyntaxError (
Code line 1064:                    raise TemplateSyntaxError (  "'%s' received unexpected keyword argument '%s'" %  ( name , param ) )
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.097, Translated length=3, Reference length=31) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: call the LockFileEx function with 5 arguments: hfile , integer 0 , integer 0 , hexadecimal value FFFF0000 , return value of the byref function called with argument overlapped , substitute the result for ret .
// format is a lambda function with 3 arguments : parent_model , integer 0 , integer 0 ,
Code line 1065:  ret = UnlockFileEx ( hfile , 0 , 0 , 0xFFFF0000 , byref ( overlapped ) )
BLEU = 12.60 (Bravity Penalty=0.327, Length ratio=0.472, Translated length=17, Reference length=36) 
(52.9 / 43.8 / 33.3 / 28.6)

Original comment: from django . utils . six . moves import xrange into default name space .
// from django . utils . six . moves import xrange into default name space .
Code line 1066:  from django . utils . six . moves import xrange
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: msguniq_options is an list with elements: string ' --to-code=utf-8 ' .
// skipped is a list containing an element <unk> .
Code line 1067:  msguniq_options = [ '--to-code=utf-8' ]
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11) 
(44.4 / 0.0 / 0.0 / 0.0)

Original comment: call the function select_template with an argument file_name , substitute the result for t .
// call the function select_template with an argument file_name , substitute the result for t .
Code line 1068:                               t = select_template ( file_name )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function touch_import with 3 arguments: string ' django . utils . encoding ' , string ' python_2_unicode_compatible ' and decorated .
// call the function register_serializer with 2 arguments : <unk> and <unk> .
Code line 1069:   touch_import ( 'django.utils.encoding' , 'python_2_unicode_compatible' , decorated )
BLEU = 0.00 (Bravity Penalty=0.400, Length ratio=0.522, Translated length=12, Reference length=23) 
(50.0 / 18.2 / 10.0 / 0.0)

Original comment: yield and empty string as the result .
// yield <unk> .
Code line 1070:  yield ''
BLEU = 0.00 (Bravity Penalty=0.189, Length ratio=0.375, Translated length=3, Reference length=8) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: if self . parent_instance is not None ,
// if self . parent_instance is not None ,
Code line 1071:  if self . parent_instance is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if dklen is false ,
// if dklen is false ,
Code line 1072:  if not dklen :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __getitem__ with 2 arguments: self and idx .
// define the method __getitem__ with 2 arguments : self and idx .
Code line 1073:    def __getitem__ ( self , idx ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: derive the class Command from the BaseCommand base class .
// derive the class Command from the BaseCommand base class .
Code line 1074:    class Command ( BaseCommand ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute WSGIServer for httpd_cls .
// substitute WSGIServer for int2byte .
Code line 1075:           httpd_cls = WSGIServer
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: call the method termios . tcsetattr with fd , termios . TCSANOW and attr_list , as arguments .
// call the method termios . <unk> with arguments fd , termios . <unk> and sender .
Code line 1076:   termios . tcsetattr ( fd , termios . TCSANOW , attr_list )
BLEU = 37.10 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18) 
(81.2 / 46.7 / 35.7 / 23.1)

Original comment: do nothing .
// do nothing .
Code line 1077:           pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if sep is an instance of unicode ,
// if sep is an instance of unicode ,
Code line 1078:               if isinstance ( sep , unicode ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function lazy with 2 arguments: ugettext and six . text_type , substitute ugettext_lazy .
// call the function lazy with 2 arguments : ugettext and six . text_type , substitute the result for ugettext_lazy .
Code line 1079:  ugettext_lazy = lazy ( ugettext , six . text_type )
BLEU = 55.88 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=20, Reference length=16) 
(75.0 / 63.2 / 50.0 / 41.2)

Original comment: if field is not contained in self . fields ,
// if field is not contained in self . fields ,
Code line 1080:    if field not in self . fields :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method activate with an argument self . old_language .
// call the function activate with an argument self . _iterator .
Code line 1081:               activate ( self . old_language )
BLEU = 53.48 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 60.0 / 44.4 / 37.5)

Original comment: call the method copy . deepcopy with 2 arguments: self . _wrapped and memo , return the result .
// call the method copy . deepcopy with 2 arguments : self . _wrapped and memo , return the result .
Code line 1082:   return copy . deepcopy ( self . _wrapped , memo )
BLEU = 80.32 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19) 
(90.0 / 84.2 / 77.8 / 70.6)

Original comment: call the function format_html_join twice , first time with 3 elements: an empty string , string ' { 0 } = " { 1 } " ' and sorted return value of the items of the attrs dictionary , and second time with 3 arguments: an empty string , string ' { 0 } ' , and sorted list of boolean_attrs elements , concatenate the results and return the resulting list .
// call the function register_serializer with 3 arguments : <unk> , string ' <unk> , %s ( <unk> ) ( <unk> ) ( <unk> ) ( <unk> ) ( <unk> ) ) , <unk> ) * ( <unk> ) ) ,
Code line 1083:     return (  format_html_join ( '' , ' {0}="{1}"' , sorted ( attrs . items ( ) ) ) +  format_html_join ( '' , ' {0}' , sorted ( boolean_attrs ) )  )
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=40, Reference length=72) 
(27.5 / 12.8 / 5.3 / 0.0)

Original comment: define the function code_changed .
// define the function smart_split .
Code line 1084:     def code_changed ( ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: get the value under the ' database ' key of the options dictionary , use the result as a key to get the value from the connections dictionary , substitute the result for connection .
// get the value under the <unk> key of the options dictionary , use it as the key to get the value from the connections dictionary , substitute the result for connection .
Code line 1085:   connection = connections [ options . get ( 'database' ) ]
BLEU = 70.69 (Bravity Penalty=0.911, Length ratio=0.914, Translated length=32, Reference length=35) 
(93.8 / 80.6 / 73.3 / 65.5)

Original comment: import module inspect .
// import module fnmatch .
Code line 1086: import inspect
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(75.0 / 33.3 / 0.0 / 0.0)

Original comment: define the method defalt with arguments self and o .
// define the method default with 2 arguments : self and o .
Code line 1087:  def default ( self , o ) :
BLEU = 32.65 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(75.0 / 45.5 / 30.0 / 11.1)

Original comment: for every locale in locales ,
// for every locale in locales ,
Code line 1088:    for locale in locales :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an StopIteration .
// raise an StopIteration exception .
Code line 1089:               raise StopIteration ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: call the method connection . creation . create_test_db with verbosity set to verbosity , autoclobber set to inverse value of interactive , serialize set to boolean False , substitute the return value for db_name .
// call the method connection . creation . <unk> with arguments verbosity set to verbosity , <unk> set to boolean False , and content_type set to boolean False .
Code line 1090:    db_name = connection . creation . create_test_db ( verbosity = verbosity , autoclobber = not interactive , serialize = False )
BLEU = 37.95 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=28, Reference length=35) 
(75.0 / 55.6 / 42.3 / 32.0)

Original comment: define the method namespace_dict with an argument self .
// define the method _init_translation_catalog with an argument self .
Code line 1091:  def namespace_dict ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: for every field in return value of the function _parse_date_fmt ,
// call the function _parse_date_fmt , for every field in result ,
Code line 1092:  for field in _parse_date_fmt ( ) :
BLEU = 46.92 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(72.7 / 60.0 / 44.4 / 25.0)

Original comment: define the function constant_time_compare with 2 arguments: length set to integer 12 ,
// define the function <unk> with length of length and <unk> set to integer <unk> as arguments .
Code line 1093:     def get_random_string ( length = 12 ,  allowed_chars = 'abcdefghijklmnopqrstuvwxyz'  'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.308, Translated length=17, Reference length=13) 
(47.1 / 25.0 / 13.3 / 0.0)

Original comment: define the function make_key with self class instance , key and version set to None as arguments .
// define the method make_key with self class instance , key and version defaulting to None as arguments .
Code line 1094:    def make_key ( self , key , version = None ) :
BLEU = 68.99 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18) 
(88.9 / 76.5 / 62.5 / 53.3)

Original comment: substitute path , match and recursive for self . path , self . match and self . recursive .
// substitute path and var2 for self . path and self . extra_headers , respectively , respectively , respectively .
Code line 1095:           self . path , self . match , self . recursive = path , match , recursive
BLEU = 22.40 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19) 
(68.4 / 33.3 / 17.6 / 6.2)

Original comment: call the function limit_choices_to , substitute the result for limit_choices_to .
// evaluate the function limit_choices_to , substitute the result for limit_choices_to .
Code line 1096:                           limit_choices_to = limit_choices_to ( )
BLEU = 89.32 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 90.0 / 88.9 / 87.5)

Original comment: i is the reminder of the division of i by j .
// increment i by j , substitute the result for i .
Code line 1097:  i = i % j
BLEU = 0.00 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12) 
(54.5 / 20.0 / 11.1 / 0.0)

Original comment: call the method parser . add_argument with 3 arguments: string ' --database ' , default set to DEFAULT_DB_ALIAS , and help set to a string ' Nominates a database to print the SQL for . Defaults to the " default " database . ' .
// call the method parser . add_argument with 5 arguments : <unk> , default set to DEFAULT_DB_ALIAS , and help set to a string ' <unk> to print print the SQL to print the SQL to . ' .
Code line 1098:  parser . add_argument ( '--database' , default = DEFAULT_DB_ALIAS ,  help = 'Nominates a database to print the SQL for. Defaults to the '  '"default" database.' )
BLEU = 47.60 (Bravity Penalty=0.832, Length ratio=0.844, Translated length=38, Reference length=45) 
(76.3 / 62.2 / 52.8 / 42.9)

Original comment: errors is an empty list .
// errors is an empty list .
Code line 1099:  errors = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method invalid_block_tag with 4 arguments: self , token , command and parse_until as None .
// define the method invalid_block_tag with 3 arguments : self , token , command and parse_until set to None .
Code line 1100:    def invalid_block_tag ( self , token , command , parse_until = None ) :
BLEU = 53.09 (Bravity Penalty=1.000, Length ratio=1.118, Translated length=19, Reference length=17) 
(73.7 / 61.1 / 47.1 / 37.5)

Original comment: if not ,
// if not ,
Code line 1101:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method Model . _meta . pk . to_python with one argument: value under the ' pk ' key of dictionary d , or None if previous doesnt exists , substitute the result for the value under the Model . _meta . pk . attname key of data dictionary .
// call the method Model . _meta . get_field with 2 arguments : <unk> and None . _meta . pk , substitute the result for value under the medium key of the data dictionary . _meta . pk .
Code line 1102:               data [ Model . _meta . pk . attname ] = Model . _meta . pk . to_python ( d . get ( "pk" , None ) )
BLEU = 32.28 (Bravity Penalty=0.710, Length ratio=0.745, Translated length=38, Reference length=51) 
(78.9 / 54.1 / 38.9 / 25.7)

Original comment: define the method __init__ with 3 arguments: self , unpacked list args and unpacked dictionary kwargs .
// define the method __init__ with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .
Code line 1103:   def __init__ ( self , * args , ** kwargs ) :
BLEU = 77.78 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17) 
(88.9 / 82.4 / 75.0 / 66.7)

Original comment: if value under the ' language ' key of the self . feed dictionary is not None ,
// if value under the <unk> key of the self . feed dictionary is not None ,
Code line 1104:           if self . feed [ 'language' ] is not None :
BLEU = 71.95 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18) 
(93.8 / 86.7 / 78.6 / 69.2)

Original comment: define the method id_for_label with 2 arguments: self and id_ .
// define the method id_for_label with 2 arguments : self and id_ .
Code line 1105:    def id_for_label ( self , id_ ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: if f is a file ,
// if f . path file path exists ,
Code line 1106:  if os . path . isfile ( f ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=8, Reference length=6) 
(50.0 / 14.3 / 0.0 / 0.0)

Original comment: if opts . managed is true ,
// if opts . is_usable is true ,
Code line 1107:      if opts . managed :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 40.0 / 0.0)

Original comment: return None .
// return None .
Code line 1108:               return None
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if dirname is true , return dirname converted to a string and surounded by single quotes , if not return string ' absolute path ' .
// if dirname is true , return boolean True , otherwise return boolean False .
Code line 1109:       return "'%s'" % dirname if dirname else 'absolute path'
BLEU = 16.43 (Bravity Penalty=0.424, Length ratio=0.538, Translated length=14, Reference length=26) 
(64.3 / 38.5 / 33.3 / 27.3)

Original comment: raise an CommandError exception with an argument string " %r is not a valid port number . " , where ' %r ' is repaced with self . port .
// raise an CommandError exception with an argument <unk> is not a valid port <unk> <unk> with self . port .
Code line 1110:                   raise CommandError ( "%r is not a valid port number." % self . port )
BLEU = 39.51 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=20, Reference length=30) 
(85.0 / 73.7 / 61.1 / 47.1)

Original comment: substitute value under the ' database ' key of the options dictionary for database .
// call the method options . get with an argument <unk> , substitute the result for database .
Code line 1111:           database = options . get ( 'database' )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.133, Translated length=17, Reference length=15) 
(41.2 / 12.5 / 6.7 / 0.0)

Original comment: do nothing .
// do nothing .
Code line 1112:               pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the function c with an argument unpacked dictionary kwargs , substitute the result for result .
// call the function c with an argument unpacked dictionary kwargs , substitute the result for result .
Code line 1113:  result = c ( ** kwargs )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if middleware has an attribute ' process_response ' ,
// if middleware has an attribute <unk> ,
Code line 1114:                       if hasattr ( middleware , 'process_template_response' ) :
BLEU = 48.35 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: call the method re_newlines . sub with 2 arguments: ' \n ' and text , return the result .
// call the method dot_re . sub with 2 arguments : <unk> and text , return the result .
Code line 1115:  return re_newlines . sub ( '\n' , text )
BLEU = 50.91 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19) 
(77.8 / 64.7 / 50.0 / 33.3)

Original comment: if ' / ' is contained in path , and only if ' \\ ' is contained in path and index of the first occurrence of ' / ' in path is lesser than , index of the first occurrence of ' \\ ' in path , or alternatively if ' \\ ' is not contained in path ,
// if <unk> is contained in path and return value of the function path . find called with an argument <unk> is not equal to path and return value of the function path . find called with an argument <unk> is not contained in path ,
Code line 1116:  if '/' in path and ( ( '\\' in path and path . find ( '/' ) < path . find ( '\\' ) )  or '\\' not in path ) :
BLEU = 15.98 (Bravity Penalty=0.733, Length ratio=0.763, Translated length=45, Reference length=59) 
(46.7 / 25.0 / 16.3 / 11.9)

Original comment: both_before is a list containing 14 elements , all of them are instances of Tok class , created with 2 arguments , a string and a raw string .
// <unk> is a list containing 2 elements : <unk> and raw string " <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> ( <unk> ) <unk> <unk> ) <unk> <unk> ) <unk> <unk> ) <unk> <unk> ) <unk> <unk> ) <unk> <unk> ) <unk> <unk> ) <unk> <unk> ) <unk> <unk> ) <unk> <unk> " , replace ' %s ' with : <unk> and <unk> set to integer <unk> and <unk> .
Code line 1117:                both_before = [  Tok ( "comment" , r"/\*(.|\n)*?\*/" ) ,  Tok ( "linecomment" , r"//.*?$" ) ,  Tok ( "ws" , r"\s+" ) ,  Tok ( "keyword" , literals ( """                            break case catch class const continue debugger                            default delete do else enum export extends                            finally for function if import in instanceof                            new return super switch this throw try typeof                            var void while with                            """ , suffix = r"\b" ) , next = 'reg' ) ,  Tok ( "reserved" , literals ( "null true false" , suffix = r"\b" ) , next = 'div' ) ,  Tok ( "id" , r"""                   ([a-zA-Z_$   ]|\\u[0-9a-fA-Z]{4})   # first char                   ([a-zA-Z_$0-9]|\\u[0-9a-fA-F]{4})*  # rest chars                   """ , next = 'div' ) ,  Tok ( "hnum" , r"0[xX][0-9a-fA-F]+" , next = 'div' ) ,  Tok ( "onum" , r"0[0-7]+" ) ,  Tok ( "dnum" , r"""                     (   (0|[1-9][0-9]*)     # DecimalIntegerLiteral                         \.                  # dot                         [0-9]*              # DecimalDigits-opt                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     |                         \.                  # dot                         [0-9]+              # DecimalDigits                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     |                         (0|[1-9][0-9]*)     # DecimalIntegerLiteral                         ([eE][-+]?[0-9]+)?  # ExponentPart-opt                     )                     """ , next = 'div' ) ,  Tok ( "punct" , literals ( """                          >>>= === !== >>> <<= >>= <= >= == != << >> &&                          || += -= *= %= &= |= ^=                          """ ) , next = "reg" ) ,  Tok ( "punct" , literals ( "++ -- ) ]" ) , next = 'div' ) ,  Tok ( "punct" , literals ( "{ } ( [ . ; , < > + - * % & | ^ ! ~ ? : =" ) , next = 'reg' ) ,  Tok ( "string" , r'"([^"\\]|(\\(.|\n)))*?"' , next = 'div' ) ,  Tok ( "string" , r"'([^'\\]|(\\(.|\n)))*?'" , next = 'div' ) ,  ]
BLEU = 1.54 (Bravity Penalty=1.000, Length ratio=7.069, Translated length=205, Reference length=29) 
(5.9 / 2.0 / 1.0 / 0.5)

Original comment: define function no_style , without input arguments .
// define the function no_style .
Code line 1118:     def no_style ( ) :
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(80.0 / 25.0 / 0.0 / 0.0)

Original comment: if proto is greater than or equal to integer 2 ,
// if mtime is greater or equal to integer 2 ,
Code line 1119:           if proto >= 2 :
BLEU = 54.18 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11) 
(90.0 / 66.7 / 50.0 / 42.9)

Original comment: define the method __deepcopy__ with arguments self and memo .
// define the method __deepcopy__ with 2 arguments : self and memo .
Code line 1120:    def __deepcopy__ ( self , memo ) :
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(83.3 / 63.6 / 50.0 / 33.3)

Original comment: from django . utils . _os import safe_join into default name space .
// from django . utils . _os import safe_join into default name space .
Code line 1121:  from django . utils . _os import safe_join
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every refto and refs in return value of references . items method .
// call the method compiled_parent . items , for every refto and unused in the result ,
Code line 1122:  for refto , refs in references . items ( ) :
BLEU = 19.56 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=16, Reference length=14) 
(50.0 / 26.7 / 14.3 / 7.7)

Original comment: substitute path_info for self . path_info .
// substitute path_info for self . path_info .
Code line 1123:  self . path_info = path_info
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every app_label and app_migrations in result of the method changes . items ,
// call the method changes . items , for every app_label and unused in the result ,
Code line 1124:  for app_label , app_migrations in changes . items ( ) :
BLEU = 47.92 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=16, Reference length=14) 
(75.0 / 53.3 / 42.9 / 30.8)

Original comment: define the funtion get_internal_wsgi_application .
// define the function get_internal_wsgi_application .
Code line 1125:    def get_internal_wsgi_application ( ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 0.0 / 0.0)

Original comment: if VariableDoesNotExist exception is caught ,
// if VariableDoesNotExist exception is caught ,
Code line 1126:   except VariableDoesNotExist :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 1127:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: substitute Command for BaseRunserverCommand .
// substitute Command for <unk> .
Code line 1128:       BaseRunserverCommand = Command
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: l is lambda function with argument x , that calls the method self . make_key with x and version set to version as arguments .
// substitute length of version for l .
Code line 1129:           l = lambda x : self . make_key ( x , version = version )
BLEU = 0.00 (Bravity Penalty=0.076, Length ratio=0.280, Translated length=7, Reference length=25) 
(42.9 / 0.0 / 0.0 / 0.0)

Original comment: call the function _curried_func with 2 arguments: list moreargs appended to args and unpacked , unpacked dictionary created with elements of morekwargs dictionary through the kwargs mapping , return the result .
// call the function bound_func with 2 arguments : unpacked list args and unpacked dictionary m_kwargs , use the result as an argument for the call to the function rfc3339_date , use the result as an argument for the call to the function rfc3339_date , return the result .
Code line 1130:           return _curried_func ( * ( args + moreargs ) , ** dict ( kwargs , ** morekwargs ) )
BLEU = 14.20 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=48, Reference length=32) 
(39.6 / 21.3 / 10.9 / 4.4)

Original comment: if the UnicodeEncodeError exception is caught ,
// if UnicodeEncodeError exception is caught ,
Code line 1131:    except UnicodeEncodeError :
BLEU = 67.32 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7) 
(100.0 / 80.0 / 75.0 / 66.7)

Original comment: return j .
// return j .
Code line 1132:  return j
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: yield subwidget , as the result of the generator .
// yield palette .
Code line 1133:               yield subwidget
BLEU = 0.00 (Bravity Penalty=0.097, Length ratio=0.300, Translated length=3, Reference length=10) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: if nodelist is an instance of NodeList and node is not an instance of TextNode class .
// if nodelist is an instance of NodeList class ,
Code line 1134:    if isinstance ( nodelist , NodeList ) and not isinstance ( node , TextNode ) :
BLEU = 30.86 (Bravity Penalty=0.411, Length ratio=0.529, Translated length=9, Reference length=17) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: tried_modules is an empty list .
// _meth_self is an empty list .
Code line 1135:  tried_modules = [ ]
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: return s .
// return s .
Code line 1136:           return s
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the LockFileEx function with 6 arguments: hfile , flags , integer 0 , integer 0 , hexadecimal value FFFF0000 , return value of the byref function called with argument overlapped , substitute the result for ret .
// call the function compile_string with 3 arguments : full_module_name , flags , integer 0 , integer 0 , integer 0 and fragment , respectively .
Code line 1137:  ret = LockFileEx ( hfile , flags , 0 , 0 , 0xFFFF0000 , byref ( overlapped ) )
BLEU = 21.98 (Bravity Penalty=0.595, Length ratio=0.658, Translated length=25, Reference length=38) 
(60.0 / 37.5 / 30.4 / 27.3)

Original comment: from django . utils . deconstruct import deconstructible into default name space .
// from django . utils . deconstruct import deconstructible into default name space .
Code line 1138:  from django . utils . deconstruct import deconstructible
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function urlquote with an argument _prefix , use the result as an argument for the call to the normalize function , substitute the fitst element of the result for prefix_norm and prefix_args , respectively .
// call the function normalize with an argument quoted_url , use the first element of the result as an argument for the call to the function normalize , substitute the first element of the result for old_umask .
Code line 1139:   prefix_norm , prefix_args = normalize ( urlquote ( _prefix ) ) [ 0 ]
BLEU = 47.72 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=37, Reference length=37) 
(78.4 / 58.3 / 42.9 / 26.5)

Original comment: if block_name is contained in parser . __loaded_blocks ,
// if block_name is contained in parser . __loaded_blocks ,
Code line 1140:           if block_name in parser . __loaded_blocks :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if can_fail is true ,
// if can_fail is true ,
Code line 1141:               if can_fail :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute changeset for get_git_changeset . cache .
// substitute changeset for cache . cache .
Code line 1142:    get_git_changeset . cache = changeset
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 40.0 / 0.0)

Original comment: for every name in formatters ,
// for every name in formatters ,
Code line 1143:  for name in formatters :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function conditional_content_removal with request and response as the arguments .
// define the function parse_color_setting with 2 arguments : request and response .
Code line 1144:     def conditional_content_removal ( request , response ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(75.0 / 36.4 / 20.0 / 0.0)

Original comment: define the function __wrapper__ with 2 arguments: unpacked list args and unpacked dictionary kw .
// define the function __wrapper__ with 2 arguments : unpacked list args and unpacked dictionary kw .
Code line 1145:  def __wrapper__ ( * args , ** kw ) :
BLEU = 74.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 80.0 / 71.4 / 61.5)

Original comment: if filename is not contained in _error_files ,
// if filename is not contained in _error_files ,
Code line 1146:    if filename not in _error_files :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return self . _encoding .
// return self . _encoding .
Code line 1147:           return self . _encoding
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __len__ with an argument self .
// define the method __len__ with an argument self .
Code line 1148:    def __len__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 1149:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: call the method next with an argument bits , substitute the result for bit .
// call the function next with an argument bits , substitute the result for bit .
Code line 1150:                       bit = next ( bits )
BLEU = 82.42 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(93.3 / 85.7 / 76.9 / 75.0)

Original comment: call the function _i18n_cache_key_suffix with request and cache_key as arguments , return the result .
// call the function _i18n_cache_key_suffix with request and cache_key as arguments , return the result .
Code line 1151:  return _i18n_cache_key_suffix ( request , cache_key )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if initial_value is an callable object ,
// if initial_value is callable object ,
Code line 1152:  if callable ( initial_value ) :
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7) 
(100.0 / 80.0 / 50.0 / 0.0)

Original comment: call the method form . add_initial_prefix with an argument name , substitute the result for self . html_initial_name .
// call the method form . add_initial_prefix with an argument name , substitute the result for self . match_re .
Code line 1153:  self . html_initial_name = form . add_initial_prefix ( name )
BLEU = 89.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19) 
(94.7 / 88.9 / 88.2 / 87.5)

Original comment: from django . core . exceptions import SuspiciousFileOperation into default name space .
// from django . core . exceptions import MiddlewareNotUsed into default name space .
Code line 1154:  from django . core . exceptions import SuspiciousFileOperation
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: call the method self . _get_scheme , return the result .
// call the method self . _get_scheme , return the result .
Code line 1155:      return self . _get_scheme ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call self . _delete method with argument fname .
// call the method self . _delete with argument fname .
Code line 1156:               self . _delete ( fname )
BLEU = 40.46 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=10, Reference length=9) 
(90.0 / 55.6 / 37.5 / 14.3)

Original comment: call iri_to_uri with return value of the request . build_absolute_uri method , us the result as the argument for the call to the force_bytes function , use the result as the argument for the call to the hashlib . mdb function , store the result in url .
// call the function force_bytes , use the result as an argument for the call to the function hashlib . md5 , use the result as an argument for the call to the function hashlib . md5 , substitute the result for url .
Code line 1157:    url = hashlib . md5 ( force_bytes ( iri_to_uri ( request . build_absolute_uri ( ) ) ) )
BLEU = 33.86 (Bravity Penalty=0.890, Length ratio=0.896, Translated length=43, Reference length=48) 
(79.1 / 45.2 / 29.3 / 20.0)

Original comment: derive the class RegexField from the base class CharField class .
// derive the class StreamingHttpResponse from the base class CharField class .
Code line 1158:      class RegexField ( CharField ) :
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: try ,
// try ,
Code line 1159:               try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: derive the class EmailMultiAlternatives from the EmailMessage base class .
// derive the class Loader from the Storage base class .
Code line 1160:      class EmailMultiAlternatives ( EmailMessage ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(80.0 / 55.6 / 25.0 / 0.0)

Original comment: if middleware has an attribute ' process_response ' ,
// if middleware has an attribute <unk> ,
Code line 1161:     if hasattr ( middleware , 'process_response' ) :
BLEU = 48.35 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: if not ,
// if not ,
Code line 1162:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function is_naive with an argument value .
// define the function is_naive with an argument value .
Code line 1163:     def is_naive ( value ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __init__ with 11 arguments: self , subject set to an empty string , body set to an empty string ,
// define the method __init__ with 4 arguments : self , subject set to <unk> , body set to <unk> , body set to None ,
Code line 1164:   def __init__ ( self , subject = '' , body = '' , from_email = None , to = None , bcc = None ,  connection = None , attachments = None , headers = None , alternatives = None ,  cc = None ) :
BLEU = 38.40 (Bravity Penalty=1.000, Length ratio=1.087, Translated length=25, Reference length=23) 
(60.0 / 45.8 / 34.8 / 22.7)

Original comment: define the function _samefile with arguments src and dst .
// define the function compile_string with 2 arguments : src and dst .
Code line 1165:    def _samefile ( src , dst ) :
BLEU = 32.65 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(75.0 / 45.5 / 30.0 / 11.1)

Original comment: if not ,
// if not ,
Code line 1166:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if self . verbosity is greater or equal to integer 1 .
// if self . verbosity is greater or equal to integer 1 ,
Code line 1167:               if self . verbosity >= 1 :
BLEU = 90.36 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(91.7 / 90.9 / 90.0 / 88.9)

Original comment: define the function format_html_join with 3 arguments: sep , format_string and args_generator .
// define the function mail_admins with 3 arguments : sep , format_string and <unk> .
Code line 1168:     def format_html_join ( sep , format_string , args_generator ) :
BLEU = 29.42 (Bravity Penalty=1.000, Length ratio=1.077, Translated length=14, Reference length=13) 
(71.4 / 46.2 / 25.0 / 9.1)

Original comment: define the method popitem with an argument self .
// define the method popitem with an argument self .
Code line 1169:    def popitem ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method token . split_contents , substitute the result for args .
// call the method token . split_contents , substitute the result for args .
Code line 1170:            args = token . split_contents ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: try ,
// try ,
Code line 1171:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: define the method __delattr__ with self and name as arguments .
// define the method __delattr__ with 2 arguments : self and name .
Code line 1172:    def __delattr__ ( self , name ) :
BLEU = 44.83 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 54.5 / 40.0 / 22.2)

Original comment: if not .
// if not ,
Code line 1173:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(66.7 / 50.0 / 0.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 1174:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: from django . utils . xmlutils import SimplerXMLGenerator into default name space .
// from django . utils . xmlutils import SimplerXMLGenerator into default name space .
Code line 1175:  from django . utils . xmlutils import SimplerXMLGenerator
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . default_locale_path is None .
// self . default_locale_path is None .
Code line 1176:  self . default_locale_path = None
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method handler . endElement with an argument string ' item ' .
// call the method handler . endElement with an argument <unk> .
Code line 1177:  handler . endElement ( "item" )
BLEU = 61.44 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14) 
(90.9 / 80.0 / 77.8 / 75.0)

Original comment: register . tag decorator ,
// register . tag decorator ,
Code line 1178:     @ register . tag
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if length of words is greater than length ,
// if length of words is greater than length ,
Code line 1179:  if len ( words ) > length :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if namespaces is true ,
// if namespaces is true ,
Code line 1180:   if namespaces :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function url with 2 arguments: parser and token .
// define the function url with 2 arguments : parser and token .
Code line 1181:  def url ( parser , token ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: import fcntl .
// import fcntl .
Code line 1182:           import fcntl
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if self . warning is an instance of Exception class ,
// if self . warning is an instance of Exception ,
Code line 1183:           if isinstance ( self . warning , Exception ) :
BLEU = 81.76 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=10, Reference length=11) 
(100.0 / 88.9 / 87.5 / 85.7)

Original comment: return settings . TEMPLATE_STRING_IF_INVALID .
// return settings . TEMPLATE_STRING_IF_INVALID .
Code line 1184:   return settings . TEMPLATE_STRING_IF_INVALID
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method parser . expression with an argument bp , substitute it for self . seconds .
// call the method parser . expression with an argument bp , substitute the result for self . second .
Code line 1185:  self . second = parser . expression ( bp )
BLEU = 68.59 (Bravity Penalty=1.000, Length ratio=1.056, Translated length=19, Reference length=18) 
(84.2 / 72.2 / 64.7 / 56.2)

Original comment: for every model in model_list ,
// for every model in model_list ,
Code line 1186:    for model in model_list :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: help is a string " Squashes an existing set of migrations ( from first until specified ) into a single new one . " .
// help is a string created by a mapping function , substitute the result for help .
Code line 1187:       help = "Squashes an existing set of migrations (from first until specified) into a single new one."
BLEU = 9.65 (Bravity Penalty=0.570, Length ratio=0.640, Translated length=16, Reference length=25) 
(37.5 / 20.0 / 14.3 / 7.7)

Original comment: validate_slug is a instance of a RegexValidator class , created with 3 arguments: slug_re , return value of the call to the function , _ with an argument string " Enter a valid ' slug ' consisting of letters , numbers , underscores or hyphens . " , and string ' invalid ' .
// <unk> is a instance of a RegexValidator class , created with 3 arguments : <unk> , return value of the function _ called with an argument <unk> , return value is the result of the function _ , called with an argument <unk> set to a string , and <unk> <unk> <unk> .
Code line 1188:  validate_slug = RegexValidator ( slug_re , _ ( "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens." ) , 'invalid' )
BLEU = 31.28 (Bravity Penalty=0.981, Length ratio=0.981, Translated length=53, Reference length=54) 
(58.5 / 34.6 / 25.5 / 20.0)

Original comment: if loader is an instance of six . string_types ,
// if loader is an instance of six . string_types ,
Code line 1189:   if isinstance ( loader , six . string_types ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an ContextPopException .
// raise an ContentNotRenderedError exception .
Code line 1190:               raise ContextPopException
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=5, Reference length=4) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: define the method receive_data_chunk with arguments: self , raw_data and start .
// define the method receive_data_chunk with arguments self , raw_data and start .
Code line 1191:    def receive_data_chunk ( self , raw_data , start ) :
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(91.7 / 81.8 / 70.0 / 55.6)

Original comment: from email . mime . message import MIMEMessage into default name space .
// from email . mime . message import BaseLoader into default name space .
Code line 1192:  from email . mime . message import MIMEMessage
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: if Model . DoesNotExist exception is caught ,
// if Model . SMTPException exception is caught ,
Code line 1193:   except Model . DoesNotExist :
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 71.4 / 50.0 / 20.0)

Original comment: if BLOCK_CONTEXT_KEY is contained in render_context and call to the method get_block with an argument self . name from the object , under the BLOCK_CONTEXT_KEY key of render_context dictionary dictionary evaluates to be not equal to None ,
// if BLOCK_CONTEXT_KEY is a tuple with 3 elements : self . name , and value under the BLOCK_CONTEXT_KEY key of the render_context dictionary and value under the BLOCK_CONTEXT_KEY key of the render_context dictionary .
Code line 1194:  if ( BLOCK_CONTEXT_KEY in render_context and  render_context [ BLOCK_CONTEXT_KEY ] . get_block ( self . name ) is not None ) :
BLEU = 17.83 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=34, Reference length=38) 
(58.8 / 27.3 / 15.6 / 6.5)

Original comment: subtract decimals from digits , substitute the result for whole_digits .
// add digits to digits , substitute the result for str_hidden .
Code line 1195:   whole_digits = digits - decimals
BLEU = 47.99 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(63.6 / 50.0 / 44.4 / 37.5)

Original comment: if IOError exception is caught ,
// if IOError exception is caught ,
Code line 1196:    except IOError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if LookupError exception is caught ,
// if LookupError exception is caught ,
Code line 1197:   except LookupError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute length of text for end .
// substitute length of text for end .
Code line 1198:  end = len ( text )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: with lock ,
// with lock ,
Code line 1199:  with lock :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: substitute name , nodelist and parent for self . name , self . nodelist and self . parent .
// substitute name and nodelist for self . name and self . parent , respectively .
Code line 1200:           self . name , self . nodelist , self . parent = name , nodelist , parent
BLEU = 30.13 (Bravity Penalty=0.766, Length ratio=0.789, Translated length=15, Reference length=19) 
(93.3 / 50.0 / 30.8 / 16.7)

Original comment: define the method build_potfiles with an argument self .
// define the method get_fqdn with an argument self .
Code line 1201:      def build_potfiles ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: do nothing .
// do nothing .
Code line 1202:       pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: code is a string ' max_value '
// code is an integer <unk> .
Code line 1203:  code = 'max_value'
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7) 
(33.3 / 20.0 / 0.0 / 0.0)

Original comment: if Exception , renamed to e , exception is caught ,
// if Exception , renamed to e , exception is caught ,
Code line 1204:     except Exception as e :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . main_help_text with an argument commands_only set to boolean True , append new line to it , write it to sys . stdout .
// call the method self . main_help_text . write with an argument commands_only set to boolean True , append the result to sys . stdout .
Code line 1205:                   sys . stdout . write ( self . main_help_text ( commands_only = True ) + '\n' )
BLEU = 61.74 (Bravity Penalty=0.887, Length ratio=0.893, Translated length=25, Reference length=28) 
(88.0 / 75.0 / 65.2 / 54.5)

Original comment: call the method time . localtime with an argument stamp , substitute the result for tt .
// call the method time . localtime with an argument stamp , substitute the result for tt .
Code line 1206:   tt = time . localtime ( stamp )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: sum version and delta together , return the result .
// add delta and delta , return the result .
Code line 1207:  return version + delta
BLEU = 45.94 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10) 
(77.8 / 62.5 / 42.9 / 33.3)

Original comment: if not ,
// if not ,
Code line 1208:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: import module itertools .
// import module itertools .
Code line 1209:  import itertools
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute file_or_path for file .
// substitute _urllib_robotparser_moved_attributes for file .
Code line 1210:           file = file_or_path
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: for every attr in _urllib_error_moved_attributes ,
// for every attr in boundarystream ,
Code line 1211:  for attr in _urllib_error_moved_attributes :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: do nothing .
// do nothing .
Code line 1212:             pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: import module os .
// import module os .
Code line 1213:  import os
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the value under the ' database ' key of the options dictionary , substitute the result for database .
// get the value under the <unk> key of the options dictionary , substitute it for using .
Code line 1214:  using = options . get ( 'database' )
BLEU = 49.09 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20) 
(82.4 / 62.5 / 53.3 / 42.9)

Original comment: define the function urlquote_plus with 2 arguments: url and safe set to an empty string .
// define the function constant_time_compare with 2 arguments : url and safe set to <unk> .
Code line 1215:    def urlquote_plus ( url , safe = '' ) :
BLEU = 34.64 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16) 
(73.3 / 50.0 / 30.8 / 16.7)

Original comment: for eery app_config in app_configs ,
// for every app_config in app_configs ,
Code line 1216:  for app_config in app_configs :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: define the method format_subject with 2 arguments: self and subject .
// define the method as_text with 2 arguments : self and subject .
Code line 1217:    def format_subject ( self , subject ) :
BLEU = 34.17 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(75.0 / 54.5 / 30.0 / 11.1)

Original comment: call the function errors . error_dict . items , for every field and messages in the result ,
// for every field , messages in errors . error_dict . items method return value ,
Code line 1218:  for field , messages in errors . error_dict . items ( ) :
BLEU = 30.98 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18) 
(80.0 / 50.0 / 30.8 / 16.7)

Original comment: define the function escape_filter with an argument value .
// define the function <unk> with an argument value .
Code line 1219:  def escape_filter ( value ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: from collections import defaultdict into default name space .
// from collections import FASTCGI_OPTIONS into default name space .
Code line 1220: from collections import defaultdict
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: return boolean False .
// return boolean False .
Code line 1221:   return False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: while i is lesser than length of subject and i-th element of subject is an empty space or tab character ,
// while i is smaller than length of subject and i-th element of subject is an empty space ,
Code line 1222:  while i < len ( subject ) and subject [ i ] in ( ' ' , '\t' ) :
BLEU = 66.85 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=18, Reference length=21) 
(94.4 / 82.4 / 75.0 / 66.7)

Original comment: if i is greater than , or equal to the result of the call to the method self . initial_form_count , and i is greater than or equal to self . min_num ,
// if i is greater or equal to the result of the method self . initial_form_count , and i is greater than self . min_num ,
Code line 1223:      if i >= self . initial_form_count ( ) and i >= self . min_num :
BLEU = 59.69 (Bravity Penalty=0.726, Length ratio=0.758, Translated length=25, Reference length=33) 
(100.0 / 91.7 / 78.3 / 63.6)

Original comment: call the function force_text with first element of choice as an argument , substitute the result for self . choice_value .
// call the function force_text with first element of choice as an argument , substitute the result for self . choice_value .
Code line 1224:  self . choice_value = force_text ( choice [ 0 ] )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: convert role to uppercase .
// call the method role . <unk> , substitute the result for role .
Code line 1225:  role = role . upper ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.600, Translated length=13, Reference length=5) 
(15.4 / 0.0 / 0.0 / 0.0)

Original comment: if code is None ,
// if code is None ,
Code line 1226:           if code is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . db import connections , router , transaction , DEFAULT_DB_ALIAS , IntegrityError and DatabaseError into default name space .
// from django . db import connections , router , transaction , DEFAULT_DB_ALIAS , DEFAULT_DB_ALIAS and DatabaseError into default name space .
Code line 1227:  from django . db import ( connections , router , transaction , DEFAULT_DB_ALIAS ,  IntegrityError , DatabaseError )
BLEU = 86.56 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21) 
(95.2 / 90.0 / 84.2 / 77.8)

Original comment: lexer is an instance of JsLexer class .
// call the function hook , substitute the result for lexer .
Code line 1228:     lexer = JsLexer ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.375, Translated length=11, Reference length=8) 
(18.2 / 0.0 / 0.0 / 0.0)

Original comment: try ,
// try ,
Code line 1229:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: from django . core . exceptions import DisallowedRedirect into default name space .
// from django . core . exceptions import FASTCGI_OPTIONS into default name space .
Code line 1230:  from django . core . exceptions import DisallowedRedirect
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: e . args is a tuple containing string " Problem installing fixture ' %s ' : %s " , where ' %s ' is replaced with fixture_file , e .
// e . args is a tuple containing 2 elements : strings and help is a tuple containing 2 elements : fixture_file and e , for e . args .
Code line 1231:                       e . args = ( "Problem installing fixture '%s': %s" % ( fixture_file , e ) , )
BLEU = 22.97 (Bravity Penalty=0.966, Length ratio=0.967, Translated length=29, Reference length=30) 
(44.8 / 25.0 / 18.5 / 15.4)

Original comment: from django . db . migrations . optimizer import MigrationOptimizer into default name space .
// from django . db . migrations . multipart import reduce into default name space .
Code line 1232:  from django . db . migrations . optimizer import MigrationOptimizer
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(86.7 / 71.4 / 61.5 / 50.0)

Original comment: call the method parser . compile_filter with an argument string " var|%s " , where ' %s ' is replaced with rest , substitute the result for filter_expr .
// call the method parser . compile_filter with an argument , , use the result as an argument for the call to the method parser . compile_filter , substitute the result for filter_expr .
Code line 1233:  filter_expr = parser . compile_filter ( "var|%s" % ( rest ) )
BLEU = 41.30 (Bravity Penalty=1.000, Length ratio=1.138, Translated length=33, Reference length=29) 
(51.5 / 43.8 / 38.7 / 33.3)

Original comment: substitute absolute seconds for seconds .
// call the function valid_ident with an argument seconds , substitute the result for seconds .
Code line 1234:  seconds = abs ( seconds )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.500, Translated length=15, Reference length=6) 
(33.3 / 14.3 / 7.7 / 0.0)

Original comment: self . waiting_readers is an integer 0 .
// self . waiting_readers is integer 0 .
Code line 1235:  self . waiting_readers = 0
BLEU = 51.54 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=7, Reference length=8) 
(100.0 / 83.3 / 60.0 / 25.0)

Original comment: join callback . __module__ , character " . " and callback . __class__ . __name__ together , substitute the result for lookup_str .
// append <unk> of the <unk> <unk> from the <unk> <unk> of <unk> . __class__ . __name__ . __name__ .
Code line 1236:                       lookup_str = callback . __module__ + "." + callback . __class__ . __name__
BLEU = 11.81 (Bravity Penalty=0.810, Length ratio=0.826, Translated length=19, Reference length=23) 
(36.8 / 16.7 / 11.8 / 6.2)

Original comment: try ,
// try ,
Code line 1237:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: return e .
// return e .
Code line 1238:  return e
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: append f . name to exclude .
// append f . name to exclude .
Code line 1239:                   exclude . append ( f . name )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: convert value and arg into a integers , return their sum .
// convert value to an integer , convert it to a integer , return it .
Code line 1240:           return int ( value ) + int ( arg )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=15, Reference length=12) 
(40.0 / 14.3 / 0.0 / 0.0)

Original comment: call the function re . compile with an argument raw string ' ^\w { 6 , 9 } , %s-%s-%s %s GMT$ ' formated with __D , __M , __Y2 and __T , substitute the result for RFC850_DATE .
// call the function re . compile with an argument <unk> , use the result as an argument for the call to the function re . compile , substitute the result for file_list .
Code line 1241:  RFC850_DATE = re . compile ( r'^\w{6,9}, %s-%s-%s %s GMT$' % ( __D , __M , __Y2 , __T ) )
BLEU = 29.48 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=33, Reference length=39) 
(48.5 / 37.5 / 32.3 / 26.7)

Original comment: import module keyword .
// import this module .
Code line 1242:  import keyword
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(75.0 / 0.0 / 0.0 / 0.0)

Original comment: call the method data . getlist with an argument name , return the result .
// call the method data . getlist with an argument name , return the result .
Code line 1243:               return data . getlist ( name )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: otherwise if ch equals a string ' : ' ,
// otherwise if ch equals <unk> ,
Code line 1244:   elif ch == ':' :
BLEU = 27.59 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=6, Reference length=10) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: if messages is not an instance of the ValidationError class ,
// if messages is not an instance of ValidationError ,
Code line 1245:                   if not isinstance ( messages , ValidationError ) :
BLEU = 61.90 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11) 
(100.0 / 75.0 / 71.4 / 66.7)

Original comment: define the function escape with an argument text .
// define the function escape with an argument text .
Code line 1246:    def escape ( text ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method strptime with arguments self , value and format .
// define the method strptime with 3 arguments : self , value and format .
Code line 1247:    def strptime ( self , value , format ) :
BLEU = 62.98 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12) 
(85.7 / 69.2 / 58.3 / 45.5)

Original comment: define the method dumps with arguments self and obj .
// define the method dumps with 2 arguments : self and obj .
Code line 1248:  def dumps ( self , obj ) :
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(83.3 / 63.6 / 50.0 / 33.3)

Original comment: substitute self . none_value for self . day_none_value .
// substitute self . none_value for self . day_none_value .
Code line 1249:  self . day_none_value = self . none_value
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if six . PY3 is true ,
// if six . PY3 is true ,
Code line 1250:    if six . PY3 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method handler . endElement with an argument string ' author ' .
// call the method handler . endElement with an argument <unk> .
Code line 1251:   handler . endElement ( "author" )
BLEU = 61.44 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14) 
(90.9 / 80.0 / 77.8 / 75.0)

Original comment: try ,
// try ,
Code line 1252:     try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: return doy .
// return default_key_func .
Code line 1253:   return doy
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: if fset is not None ,
// if fset is not None ,
Code line 1254:    if fset is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . _post is an instance of QueryDict created with arguments: an empty string and encoding set to self . _encoding , self . _files is an instance of class MultiValueDict .
// self . _post is an instance of QueryDict class created with arguments <unk> and encoding set to self . _encoding , self . _files is an instance of QueryDict class .
Code line 1255:               self . _post , self . _files = QueryDict ( '' , encoding = self . _encoding ) , MultiValueDict ( )
BLEU = 68.74 (Bravity Penalty=0.968, Length ratio=0.969, Translated length=31, Reference length=32) 
(87.1 / 73.3 / 65.5 / 60.7)

Original comment: raise an ValueError exception with an argument string ' Unknown level: %r ' formated with level .
// raise an ValueError exception with an argument <unk> converted to a string .
Code line 1256:                   raise ValueError ( 'Unknown level: %r' % level )
BLEU = 36.82 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17) 
(69.2 / 50.0 / 45.5 / 40.0)

Original comment: call the method __deepcopy__ from the base class of the class ChoiceField , with an argument memo , substitute the result for result .
// call the method __deepcopy__ with an argument memo from the base class of the class ChoiceField , substitute the result for result .
Code line 1257:           result = super ( ChoiceField , self ) . __deepcopy__ ( memo )
BLEU = 76.87 (Bravity Penalty=0.957, Length ratio=0.958, Translated length=23, Reference length=24) 
(100.0 / 90.9 / 76.2 / 60.0)

Original comment: if not ,
// if not ,
Code line 1258:     else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: remove first element of unhandled_params .
// remove first element from colors .
Code line 1259:                        unhandled_params . pop ( 0 )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(66.7 / 40.0 / 25.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 1260:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if inplural is true ,
// if inplural is true ,
Code line 1261:                       if inplural :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . conf import settings into default name space .
// from django . conf import settings into default name space .
Code line 1262:  from django . conf import settings
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: args is an empty list .
// args is an empty list .
Code line 1263:    args = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an ViewDoesNotExist exception with an argument string " Could not import ' %s ' . Parent module %s does not exist . " , where string ' %s ' is replaced by lookup_view and mod_name , respectively .
// raise an ViewDoesNotExist exception with an argument <unk> .
Code line 1264:                   raise ViewDoesNotExist (  "Could not import '%s'. Parent module %s does not exist." %  ( lookup_view , mod_name ) )
BLEU = 2.68 (Bravity Penalty=0.036, Length ratio=0.231, Translated length=9, Reference length=39) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: raise an CommandError exception , with an arguent: string " App ' %s ' has migrations . Only the sqlmigrate and sqlflush commands can be used when an app has migrations . " , where ' %s ' is replaced for app_config . label .
// raise an CommandError exception with an argument <unk> , use the result as an argument for the call to the <unk> function , raise an exception , with <unk> as an argument .
Code line 1265:           raise CommandError ( "App '%s' has migrations. Only the sqlmigrate and sqlflush commands can be used when an app has migrations." % app_config . label )
BLEU = 8.47 (Bravity Penalty=0.695, Length ratio=0.733, Translated length=33, Reference length=45) 
(36.4 / 18.8 / 9.7 / 3.3)

Original comment: if ext is true ,
// if ext is true ,
Code line 1266:  if ext :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if level is not contained in logging . _levelNames ,
// if level is not contained in logging . LANGUAGES_BIDI ,
Code line 1267:               if level not in logging . _levelNames :
BLEU = 78.25 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 75.0 / 71.4)

Original comment: schemes is a list containing 4 initial elements: ' http ' , ' https ' , ' ftp ' and ' ftps ' .
// schemes is a list with 5 elements : <unk> , <unk> , <unk> and <unk> .
Code line 1268:  schemes = [ 'http' , 'https' , 'ftp' , 'ftps' ]
BLEU = 11.04 (Bravity Penalty=0.607, Length ratio=0.667, Translated length=16, Reference length=24) 
(50.0 / 20.0 / 14.3 / 7.7)

Original comment: define the method __init__ with self class instance , file , and name defaulting to None as arguments .
// define the method __init__ with 3 arguments : self , file and name set to None .
Code line 1269:   def __init__ ( self , file , name = None ) :
BLEU = 28.32 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19) 
(82.4 / 43.8 / 20.0 / 14.3)

Original comment: if self . verbosity is greater or equal to integer 2 ,
// if self . verbosity is greater or equal to integer 2 ,
Code line 1270:               if self . verbosity >= 2 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method clean with arguments self , data and initial set to None .
// define the method clean with arguments self , data and initial set to None .
Code line 1271:    def clean ( self , data , initial = None ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __iter__ with an argument self .
// define the method __iter__ with an argument self .
Code line 1272:    def __iter__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . add_truncation_text with 2 arguments: an empty string and truncate , substitute it for truncate_text .
// call the method self . add_truncation_text with 2 arguments : <unk> and truncate , substitute the result for opfunc .
Code line 1273:  truncate_text = self . add_truncation_text ( '' , truncate )
BLEU = 49.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20) 
(70.0 / 52.6 / 44.4 / 35.3)

Original comment: if ImproperlyConfigured renamed to exc , exception is caught ,
// if ImproperlyConfigured , renamed to exc , exception is caught ,
Code line 1274:   except ImproperlyConfigured as exc :
BLEU = 74.19 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(90.9 / 80.0 / 66.7 / 62.5)

Original comment: join self . dirpath and thefile in a string , substitute the result for work_file .
// join self . dirpath and thefile into a file path , substitute it for work_file .
Code line 1275:  work_file = os . path . join ( self . dirpath , thefile )
BLEU = 42.61 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16) 
(75.0 / 53.3 / 35.7 / 23.1)

Original comment: if key is contained in cache ,
// if key is contained in cache ,
Code line 1276:  if key in cache :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . setFeature with 2 arguments: handler . feature_external_ges and boolean False .
// call the method self . setFeature with 2 arguments : handler . <unk> and boolean False .
Code line 1277:  self . setFeature ( handler . feature_external_ges , False )
BLEU = 59.98 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(82.4 / 68.8 / 53.3 / 42.9)

Original comment: requires_system_checks is boolean False .
// requires_system_checks is boolean False .
Code line 1278:   requires_system_checks = False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute value under the name key of the lib . tags dictionary for value under the name key of the temp_lib . tags dictionary .
// substitute value under the name key of the lib . tags dictionary for value under the name key of the temp_lib . tags .
Code line 1279:                       temp_lib . tags [ name ] = lib . tags [ name ]
BLEU = 92.63 (Bravity Penalty=0.959, Length ratio=0.960, Translated length=24, Reference length=25) 
(100.0 / 95.7 / 95.5 / 95.2)

Original comment: import module re .
// import module re .
Code line 1280:  import re
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function escape_quotes with an argument m .
// define the function all_valid with an argument m .
Code line 1281:  def escape_quotes ( m ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: from django . conf import settings into default name space .
// from django . conf import settings into default name space .
Code line 1282:  from django . conf import settings
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function allow_lazy with 2 arguments: urlquote and six . text_type , substitute the result for urlquote .
// call the function allow_lazy with 2 arguments : display_name and six . text_type , substitute the result for exit_code .
Code line 1283:   urlquote = allow_lazy ( urlquote , six . text_type )
BLEU = 64.87 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19) 
(80.0 / 68.4 / 61.1 / 52.9)

Original comment: return wrapper .
// return wrapper .
Code line 1284:     return wrapper
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: left justify value under the ' microsecond ' key of the kw dictionary , in the field of width 6 , fill the rest with ' 0 ' , substitute the result for value under the ' microsecond ' key of the kw dictionary .
// call the function kw with 2 arguments : integer <unk> and <unk> , substitute the result for value under the <unk> key of the kw dictionary .
Code line 1285:               kw [ 'microsecond' ] = kw [ 'microsecond' ] . ljust ( 6 , '0' )
BLEU = 22.78 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=27, Reference length=45) 
(63.0 / 46.2 / 40.0 / 33.3)

Original comment: from django . utils . deprecation import RemovedInDjango19Warning into default name space .
// from django . utils . deprecation import RemovedInDjango19Warning into default name space .
Code line 1286:  from django . utils . deprecation import RemovedInDjango19Warning
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return boolean True .
// return boolean True .
Code line 1287:  return True
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: child_nodelists is a tuple with 2 initial elements: strings ' nodelist_true ' and ' nodelist_false ' .
// child_nodelists is a tuple with 2 elements : <unk> and <unk> .
Code line 1288:       child_nodelists = ( 'nodelist_true' , 'nodelist_false' )
BLEU = 29.56 (Bravity Penalty=0.659, Length ratio=0.706, Translated length=12, Reference length=17) 
(66.7 / 45.5 / 40.0 / 33.3)

Original comment: substitute ' %s ' in the string ' \n%s:\n%s\n ' , with group_name and formatted , substitute the result for msg .
// msg is a tuple with 2 elements : old_file_name and fdel , respectively .
Code line 1289:  msg += '\n%s:\n%s\n' % ( group_name , formatted )
BLEU = 0.00 (Bravity Penalty=0.565, Length ratio=0.636, Translated length=14, Reference length=22) 
(35.7 / 0.0 / 0.0 / 0.0)

Original comment: define the function default with 2 arguments value and arg .
// define the function default with 2 arguments value and arg .
Code line 1290:  def default ( value , arg ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an TemplateDoesNotExist exception .
// raise an TemplateDoesNotExist exception .
Code line 1291:               raise TemplateDoesNotExist
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . data . replace with 2 arguments: month as integer 1 and day as integer 1 , on the result call the method , weekday , increment the result by integer 1 and substitute it for jan1_weekday .
// call the method self . data . replace with 2 arguments : month and day , increment the result by integer 1 , multiply the result by integer 1 , substitute the result for jan1_weekday .
Code line 1292:  jan1_weekday = self . data . replace ( month = 1 , day = 1 ) . weekday ( ) + 1
BLEU = 44.44 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=36, Reference length=42) 
(86.1 / 60.0 / 44.1 / 33.3)

Original comment: return an empty string ,
// return <unk> .
Code line 1293:   return ''
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=3, Reference length=5) 
(33.3 / 0.0 / 0.0 / 0.0)

Original comment: help is a tuple containing a string " Output the contents of the database as a fixture of the given " " format ( using each model ' s default manager unless --all is specified ) . " .
// help is a tuple containing a string : the result of the function database called with an argument string " <unk> the contents of the database to <unk> <unk> if the given <unk> <unk> <unk> " .
Code line 1294:       help = ( "Output the contents of the database as a fixture of the given "  "format (using each model's default manager unless --all is "  "specified)." )
BLEU = 28.00 (Bravity Penalty=0.947, Length ratio=0.949, Translated length=37, Reference length=39) 
(48.6 / 38.9 / 22.9 / 17.6)

Original comment: property decorator ,
// property decorator ,
Code line 1295:     @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call parser . add_argument method with ' --noinput ' , action set to string ' store_false ' , dest set to string ' interactive ' , default set to boolean True and help set to string ' Tells Django to NOT prompt the user for input of any kind . ' .
// call the method parser . add_argument with 5 arguments : <unk> , action set to integer <unk> , dest set to integer <unk> , default set to boolean True , default set to boolean True , and help set to integer <unk> .
Code line 1296:  parser . add_argument ( '--noinput' , action = 'store_false' , dest = 'interactive' , default = True ,  help = 'Tells Django to NOT prompt the user for input of any kind.' )
BLEU = 25.41 (Bravity Penalty=0.811, Length ratio=0.827, Translated length=43, Reference length=52) 
(62.8 / 38.1 / 26.8 / 15.0)

Original comment: year_val and month_val and day_val are set to None .
// value is not None ,
Code line 1297:               year_val = month_val = day_val = None
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=5, Reference length=10) 
(20.0 / 0.0 / 0.0 / 0.0)

Original comment: db_module is a string ' django . db ' .
// yield integer <unk> .
Code line 1298:   db_module = 'django.db'
BLEU = 0.00 (Bravity Penalty=0.223, Length ratio=0.400, Translated length=4, Reference length=10) 
(25.0 / 0.0 / 0.0 / 0.0)

Original comment: sum evens and odds , if the result is divisible by integer 10 , return boolean True , if not return boolean False .
// return a tuple with 2 elements : reversed and result of the call to the function _len with an argument , return value converted to integer 0 .
Code line 1299:  return ( ( evens + odds ) % 10 == 0 )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=28, Reference length=24) 
(28.6 / 3.7 / 0.0 / 0.0)

Original comment: raise an self . source_error exception with 2 arguments: source and msg .
// call the method self . _should_delete_form with 2 arguments source and msg .
Code line 1300:  raise self . source_error ( source , msg )
BLEU = 26.13 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(61.5 / 41.7 / 18.2 / 10.0)

Original comment: if link is not None ,
// if link is not None ,
Code line 1301:  if link is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive class Command from base class BaseCommand .
// derive the class Command from the BaseCommand base class .
Code line 1302:     class Command ( BaseCommand ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.250, Translated length=10, Reference length=8) 
(80.0 / 33.3 / 12.5 / 0.0)

Original comment: if msg is true ,
// if msg is true ,
Code line 1303:    if msg :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __repr__ with an argument self .
// define the method __repr__ with an argument self .
Code line 1304:    def __repr__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method more with an argument self .
// define the method _set_name with an argument self .
Code line 1305:    def more ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: call the sys . exc_info function , assign the result to et , ev and tb , respectively .
// call the function sys . exc_info , substitute the result for <unk> and tb , respectively .
Code line 1306:               et , ev , tb = sys . exc_info ( )
BLEU = 31.46 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19) 
(82.4 / 50.0 / 26.7 / 14.3)

Original comment: call the function thread . start_new_thread with main_func and args as arguments .
// call the function thread . start_new_thread with main_func and args as arguments .
Code line 1307:  thread . start_new_thread ( main_func , args )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function mark_safe with an argument message , return the result .
// call the function mark_safe with an argument message , return the result .
Code line 1308:           return mark_safe ( message )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: break the loop execution ,
// break from the loop execution .
Code line 1309:                       break
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5) 
(66.7 / 40.0 / 25.0 / 0.0)

Original comment: substitute pos for end_text_pos .
// substitute pos for SafeString .
Code line 1310:                       end_text_pos = pos
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: import module glob .
// import module glob .
Code line 1311:  import glob
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . __class__ with 3 arguments: an empty string , mutable is boolean True , encoding is self . encoding , substitute the result for result .
// call the method self . __class__ with 3 arguments : <unk> , mutable set to boolean True , encoding set to self . encoding , substitute the result for result .
Code line 1312:           result = self . __class__ ( '' , mutable = True , encoding = self . encoding )
BLEU = 60.30 (Bravity Penalty=1.000, Length ratio=1.033, Translated length=31, Reference length=30) 
(77.4 / 66.7 / 55.2 / 46.4)

Original comment: append a tuple with 2 elements: f . name and formfield to field_list .
// append tuple with 2 elements : f . name and formfield .
Code line 1313:               field_list . append ( ( f . name , formfield ) )
BLEU = 37.95 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14) 
(83.3 / 54.5 / 40.0 / 22.2)

Original comment: substitute space for end .
// substitute newline for end .
Code line 1314:               end = newline
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: all_files is an empty list .
// clean_data is an empty list .
Code line 1315:  all_files = [ ]
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: call the smart_text function with 3 arguments: field_value , value under the ' encoding ' key of the options dictionary or , settings . DEFAULT_CHARSET if the key doesnt exists and strings_only set to boolean True .
// call the function smart_text with 3 arguments : field_value , value , value under the <unk> key of the options dictionary and strings_only set to boolean True , substitute the result for field_value .
Code line 1316:                   field_value = smart_text ( field_value , options . get ( "encoding" , settings . DEFAULT_CHARSET ) , strings_only = True )
BLEU = 34.52 (Bravity Penalty=0.916, Length ratio=0.919, Translated length=34, Reference length=37) 
(73.5 / 45.5 / 31.2 / 19.4)

Original comment: widget . input_type is a string ' hidden ' .
// substitute <unk> for widget . input_type .
Code line 1317:               widget . input_type = 'hidden'
BLEU = 0.00 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=7, Reference length=10) 
(57.1 / 33.3 / 20.0 / 0.0)

Original comment: call the function json . loads with an argument stream_or_string , substitute the result for objects .
// call the method json . loads with an argument stream_or_string , substitute the result for objects .
Code line 1318:           objects = json . loads ( stream_or_string )
BLEU = 84.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(94.1 / 87.5 / 80.0 / 78.6)

Original comment: define the function autodiscover_modules with 2 arguments unpacked list args and unpacked dictionary kwargs .
// define the function <unk> with 2 arguments : unpacked list args and unpacked dictionary kwargs .
Code line 1319:     def autodiscover_modules ( * args , ** kwargs ) :
BLEU = 61.28 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 73.3 / 57.1 / 38.5)

Original comment: register is an instance of Library class .
// register is an instance of Library class .
Code line 1320:   register = Library ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method value_from_datadict with 4 arguments: self , data , files and name .
// define the method value_from_datadict with 4 arguments : self , data , files and name .
Code line 1321:    def value_from_datadict ( self , data , files , name ) :
BLEU = 74.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 80.0 / 71.4 / 61.5)

Original comment: create directories from the elements in filename .
// create directories from the elements in filename .
Code line 1322:                       os . makedirs ( filename )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function sys . exc_info with an argument exc_info .
// call the function sys . exc_info , substitute the result for exc_info .
Code line 1323:               exc_info = sys . exc_info ( )
BLEU = 42.80 (Bravity Penalty=1.000, Length ratio=1.182, Translated length=13, Reference length=11) 
(61.5 / 50.0 / 36.4 / 30.0)

Original comment: return the_path .
// return the_path .
Code line 1324:     return the_path
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if ending is None substitute self . ending for ending .
// if <unk> is None substitute self . ending for ending , if not substitute ending for ending .
Code line 1325:           ending = self . ending if ending is None else ending
BLEU = 47.36 (Bravity Penalty=1.000, Length ratio=1.636, Translated length=18, Reference length=11) 
(61.1 / 47.1 / 43.8 / 40.0)

Original comment: call the method self . path with argument name , substitute the result for full_path .
// call the method self . path with argument name , substitute the result for full_path .
Code line 1326:  full_path = self . path ( name )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=16, Reference length=16) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return boolean False .
// return boolean False .
Code line 1327:               return False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return an empty string .
// return <unk> .
Code line 1328:  return ''
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=3, Reference length=5) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: call the function yaml . dump with 4 arguments: self . objects , self . stream , Dumper=DjangoSafeDumper and unpacked dictionary self . options .
// call the function pgettext_lazy . isleap with 3 arguments : self . objects , self . stream , self . options and unpacked dictionary options .
Code line 1329:           yaml . dump ( self . objects , self . stream , Dumper = DjangoSafeDumper , ** self . options )
BLEU = 43.29 (Bravity Penalty=1.000, Length ratio=1.040, Translated length=26, Reference length=25) 
(76.9 / 56.0 / 37.5 / 21.7)

Original comment: from __future__ import unicode_literals into default name space .
// from __future__ import unicode_literals into default name space .
Code line 1330: from __future__ import unicode_literals
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 1331:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the function op , return the result .
// return an instance of op class .
Code line 1332:               return op ( )
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(42.9 / 0.0 / 0.0 / 0.0)

Original comment: return split .
// return integer 0 .
Code line 1333:   return split
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=4, Reference length=3) 
(50.0 / 0.0 / 0.0 / 0.0)

Original comment: call the pickle . dumps function with value and pickle . HIGHEST_PROTOCOL as arguments .
// call the function pickle . dumps with value and pickle . HIGHEST_PROTOCOL as the arguments , substitute the result for pickled .
Code line 1334:  pickled = pickle . dumps ( value , pickle . HIGHEST_PROTOCOL )
BLEU = 36.86 (Bravity Penalty=1.000, Length ratio=1.467, Translated length=22, Reference length=15) 
(68.2 / 42.9 / 30.0 / 21.1)

Original comment: return an empty list .
// return an empty list .
Code line 1335:                   return [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method _has_changed with 3 arguments: self , initial and data .
// define the method _has_changed with arguments self , initial and data .
Code line 1336:    def _has_changed ( self , initial , data ) :
BLEU = 67.61 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13) 
(91.7 / 81.8 / 70.0 / 55.6)

Original comment: raise an ValidationError exception with 2 arguments: error_message and code as a string ' invalid ' .
// raise an ValidationError with arguments protocol and code set to <unk> .
Code line 1337:           raise ValidationError ( error_message , code = 'invalid' )
BLEU = 0.00 (Bravity Penalty=0.659, Length ratio=0.706, Translated length=12, Reference length=17) 
(58.3 / 27.3 / 10.0 / 0.0)

Original comment: call the method self . load_template with 2 arguments: template_name and template_dirs , return the result .
// call the method self . format_output with 2 arguments template_name and template_dirs , return the result .
Code line 1338:           return self . load_template ( template_name , template_dirs )
BLEU = 66.75 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(88.2 / 75.0 / 60.0 / 50.0)

Original comment: if name is true , substitute it for function_name , if not get ' _decorated_function ' attribute from func object , if it exists , substitute __name__ field of the result for function_name , in not , substitute func . __name__ for function_name .
// if name is true , substitute it for function_name , if not substitute func . __name__ for function_name , otherwise substitute func . __name__ for function_name .
Code line 1339:     function_name = ( name or  getattr ( func , '_decorated_function' , func ) . __name__ )
BLEU = 37.08 (Bravity Penalty=0.533, Length ratio=0.614, Translated length=27, Reference length=44) 
(92.6 / 73.1 / 64.0 / 54.2)

Original comment: substitute elements of middle from length of opening index to the end , for middle .
// substitute the length of middle for middle .
Code line 1340:                       middle = middle [ len ( opening ) : ]
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=8, Reference length=16) 
(100.0 / 57.1 / 16.7 / 0.0)

Original comment: call the function datetime with an argument unpacked list kw , return the result .
// call the function datetime with an argument unpacked list kw , return the result .
Code line 1341:   return datetime ( * kw )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute view_name for self . view_name .
// substitute view_name for self . view_name .
Code line 1342:           self . view_name = view_name
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method httpd . set_app with an argument wsgi_handler .
// call the method httpd . set_urlconf with an argument new_params .
Code line 1343:   httpd . set_app ( wsgi_handler )
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 60.0 / 44.4 / 25.0)

Original comment: define the method accessed_time with arguments self and name .
// define the method accessed_time with 2 arguments : self and name .
Code line 1344:    def accessed_time ( self , name ) :
BLEU = 54.52 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(83.3 / 63.6 / 50.0 / 33.3)

Original comment: return nothing .
// return nothing .
Code line 1345:           return
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: substitute app_name for self . app_name .
// substitute app_name for self . app_name .
Code line 1346:  self . app_name = app_name
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an ImportError exception .
// raise an ImportError exception .
Code line 1347:                    raise ImportError
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function to_locale with 2 arguments language and to_lower set to boolean False .
// define the function to_locale with 2 arguments : language and module_name set to boolean False .
Code line 1348:      def to_locale ( language , to_lower = False ) :
BLEU = 64.14 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 73.3 / 57.1 / 46.2)

Original comment: append form to self . saved_forms .
// append form to self . saved_forms .
Code line 1349:                   self . saved_forms . append ( form )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute func for value under the ' _setupfunc ' key of the self . __dict__ dictionary .
// substitute func for value under the <unk> key of the self . __dict__ dictionary .
Code line 1350:  self . __dict__ [ '_setupfunc' ] = func
BLEU = 70.04 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17) 
(93.3 / 85.7 / 76.9 / 66.7)

Original comment: call the function import_string with an argument dotted_path , substitute the result for attr .
// call the import_string with an argument dotted_path , substitute the result for attr .
Code line 1351:           attr = import_string ( dotted_path )
BLEU = 82.93 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=14, Reference length=15) 
(100.0 / 92.3 / 83.3 / 81.8)

Original comment: try ,
// try ,
Code line 1352:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: get is a tuple containing elements generated by the call to the function pformat with an argument POST_override , if POST_override is not None , or otherwise generated with the call to the function pformat with an argument request . POST .
// post is a tuple with 2 elements : return value of the function pformat called with an argument : result of the function pformat called with an argument : result of the call to the function pformat with an argument request . POST .
Code line 1353:               post = ( pformat ( POST_override )  if POST_override is not None  else pformat ( request . POST ) )
BLEU = 37.29 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=44, Reference length=42) 
(56.8 / 41.9 / 33.3 / 24.4)

Original comment: targets is a list containing tuple with two elements , app_label and None .
// targets is a list containing tuple with two elements app_label and None .
Code line 1354:                   targets = [ ( app_label , None ) ]
BLEU = 78.82 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14) 
(100.0 / 91.7 / 81.8 / 70.0)

Original comment: raise an raise self . warning with an argument self . warning .
// raise an AttributeError with an argument self . warning .
Code line 1355:               raise AttributeError ( self . warning )
BLEU = 52.38 (Bravity Penalty=0.741, Length ratio=0.769, Translated length=10, Reference length=13) 
(90.0 / 77.8 / 62.5 / 57.1)

Original comment: if size is None ,
// if size is None ,
Code line 1356:           if size is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . _lib . Client with argument self . _servers .
// call the method self . _lib . Client with an argument self . _servers , substitute the result for client .
Code line 1357:           client = self . _lib . Client ( self . _servers )
BLEU = 50.98 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=21, Reference length=14) 
(66.7 / 55.0 / 47.4 / 38.9)

Original comment: _ is an empty dictionary .
// substitute _ for _ .
Code line 1358:               _ = { }
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: call the function random . randrange with argument integer 100000 , substitute the result for randint .
// call the function random . <unk> with an argument <unk> , substitute the result for str_hidden .
Code line 1359:   randint = random . randrange ( 100000 )
BLEU = 45.72 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(76.5 / 50.0 / 40.0 / 28.6)

Original comment: join localpart and domain in a string separated by ' @ ' character , substitute it for addr .
// join app_dir and domain into a list , substitute it for addr .
Code line 1360:  addr = '@' . join ( [ localpart , domain ] )
BLEU = 28.53 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=13, Reference length=19) 
(76.9 / 50.0 / 36.4 / 30.0)

Original comment: if remaining is None ,
// if remaining is None ,
Code line 1361:   if remaining is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . core . management . base import CommandError into default name space .
// from django . core . management . base import CommandError into default name space .
Code line 1362:   from django . core . management . base import CommandError
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method nodelist . render with an argument , an instance of Context class , use the result as an argument for the creation of , an instance of VerbatimNode class , return it .
// call the method nodelist . render , use the result as an argument for the call to the function _slugify , return the result .
Code line 1363:  return VerbatimNode ( nodelist . render ( Context ( ) ) )
BLEU = 34.48 (Bravity Penalty=0.644, Length ratio=0.694, Translated length=25, Reference length=36) 
(72.0 / 58.3 / 47.8 / 40.9)

Original comment: call the method translation . activate with an argument settings . LANGUAGE_CODE .
// call the method translation . activate with an argument settings . LANGUAGE_CODE .
Code line 1364:     translation . activate ( settings . LANGUAGE_CODE )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute csrf_token for value under the ' csrf_token ' key of new_context dictionary .
// substitute csrf_token for value under the <unk> key of the wsgi_opts dictionary .
Code line 1365:                           new_context [ 'csrf_token' ] = csrf_token
BLEU = 43.55 (Bravity Penalty=0.926, Length ratio=0.929, Translated length=13, Reference length=14) 
(76.9 / 58.3 / 36.4 / 30.0)

Original comment: if self . data . minute equals integer 0 and self . data . hour equals integer 0 ,
// if self . data . minute equals integer 0 and self . data . hour equals integer 0 ,
Code line 1366:  if self . data . minute == 0 and self . data . hour == 0 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the value under f key of dictionary under ' filters ' key of self . config dictionary , use the result as an argument for the call to the method filterer . addFilter .
// call the method self . config . addHandler with an argument value under the f key of the self . config dictionary .
Code line 1367:                   filterer . addFilter ( self . config [ 'filters' ] [ f ] )
BLEU = 12.60 (Bravity Penalty=0.593, Length ratio=0.657, Translated length=23, Reference length=35) 
(78.3 / 36.4 / 14.3 / 5.0)

Original comment: self . _view_middleware is an empty list .
// self . _view_middleware is an empty list .
Code line 1368:  self . _view_middleware = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method signing . get_cookie_signer with an argument salt set to sum of key and salt , call the method unsign on the result , with arguments cookie_value and max_age set to max_age .
// call the method signing . get_cookie_signer with 2 arguments : salt set to key and salt set to max_age , call the method unsign on the result , substitute the result for value .
Code line 1369:               value = signing . get_cookie_signer ( salt = key + salt ) . unsign (  cookie_value , max_age = max_age )
BLEU = 50.43 (Bravity Penalty=0.971, Length ratio=0.971, Translated length=34, Reference length=35) 
(79.4 / 60.6 / 46.9 / 32.3)

Original comment: do nothing .
// do nothing .
Code line 1370:       pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: raise an SignatureExpired exception with an argument string ' Signature age %s > %s seconds ' , where ' %s ' is replaced by age and max_age , respectively .
// raise an <unk> exception with an argument <unk> , use the result as an argument for the call to the <unk> function , substitute the result for <unk> .
Code line 1371:                   raise SignatureExpired (  'Signature age %s > %s seconds' % ( age , max_age ) )
BLEU = 10.24 (Bravity Penalty=0.966, Length ratio=0.967, Translated length=29, Reference length=30) 
(31.0 / 14.3 / 7.4 / 3.8)

Original comment: write the string " Installing custom SQL . . . \n " to the standard output .
// write string " Installing custom <unk> " to self . stdout stream .
Code line 1372:                   self . stdout . write ( "  Installing custom SQL...\n" )
BLEU = 18.71 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17) 
(69.2 / 33.3 / 18.2 / 10.0)

Original comment: skip this loop iteration .
// skip this loop iteration .
Code line 1373:               continue
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function template_localtime with 2 arguments: obj and context . use_tz , substitute the result for obj .
// call the function template_localtime with arguments obj and context . use_tz , substitute the result for obj .
Code line 1374:                   obj = template_localtime ( obj , context . use_tz )
BLEU = 79.41 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19) 
(94.4 / 88.2 / 81.2 / 73.3)

Original comment: if not ,
// if not ,
Code line 1375:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: assign the values to the callback , callback_args , callback_kwargs , respectively , from the resolver_match tuple .
// substitute resolver_match for callback , and param_dict , respectively .
Code line 1376:  callback , callback_args , callback_kwargs = resolver_match
BLEU = 0.00 (Bravity Penalty=0.449, Length ratio=0.556, Translated length=10, Reference length=18) 
(60.0 / 22.2 / 0.0 / 0.0)

Original comment: define lambda function that returns self . file . read field , use it as an argument for property function , put the result in read .
// read lambda function that returns self . file . read field , use it as an argument for property function , put the result in read .
Code line 1377:  read = property ( lambda self : self . file . read )
BLEU = 96.07 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=27, Reference length=27) 
(96.3 / 96.2 / 96.0 / 95.8)

Original comment: define the method __enter__ with an argument self .
// define the method __enter__ with an argument self .
Code line 1378:    def __enter__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for dirname in dirs ,
// for every dirname in list out of files ,
Code line 1379:     for dirname in dirs [ : ] :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.800, Translated length=9, Reference length=5) 
(44.4 / 12.5 / 0.0 / 0.0)

Original comment: if app_labels is true ,
// if app_labels is true ,
Code line 1380:    if app_labels :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . source_error with 2 arguments: token . source and msg , return the result .
// call the method self . _truncate_html with 3 arguments : token . source , and msg , return the result .
Code line 1381:           return self . source_error ( token . source , msg )
BLEU = 51.83 (Bravity Penalty=1.000, Length ratio=1.105, Translated length=21, Reference length=19) 
(76.2 / 60.0 / 47.4 / 33.3)

Original comment: return the evaluated result of the mail . send method .
// call the mail . send method , return the result .
Code line 1382:    return mail . send ( )
BLEU = 42.97 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(81.8 / 50.0 / 33.3 / 25.0)

Original comment: for every _ and nodelist in self . conditions_nodelists ,
// for every _ and nodelist in self . conditions_nodelists ,
Code line 1383:           for _ , nodelist in self . conditions_nodelists :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . fields . values , for every field in result ,
// call the method self . fields . values , for every field in result ,
Code line 1384:  for field in self . fields . values ( ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: convert data to string , substitute it for data .
// convert data into a string , substitute it for data .
Code line 1385:                   data = str ( data )
BLEU = 63.16 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(81.8 / 70.0 / 55.6 / 50.0)

Original comment: call the function escape with an argument lead , substitute the result for lead , call the function escape with an argument trail , substitute the result for trail .
// call the function escape with an argument lead , substitute the result for lead and trail , respectively .
Code line 1386:                       lead , trail = escape ( lead ) , escape ( trail )
BLEU = 42.73 (Bravity Penalty=0.560, Length ratio=0.633, Translated length=19, Reference length=30) 
(89.5 / 77.8 / 70.6 / 68.8)

Original comment: try ,
// try ,
Code line 1387:   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: call the method qs . values_list with 2 arguments: string ' pk ' and flat set to boolean True , put the results in a list , substitute the result for value under the f . name key of data dictionary .
// call the method qs . <unk> with 2 arguments : <unk> and limit set to boolean True , substitute the result for value under the f . name key of the data dictionary .
Code line 1388:                       data [ f . name ] = list ( qs . values_list ( 'pk' , flat = True ) )
BLEU = 49.27 (Bravity Penalty=0.790, Length ratio=0.810, Translated length=34, Reference length=42) 
(85.3 / 69.7 / 56.2 / 45.2)

Original comment: import module re .
// import module re .
Code line 1389:  import re
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . db import connections and DEFAULT_DB_ALIAS into default name space .
// from django . db import connections and DEFAULT_DB_ALIAS into default name space .
Code line 1390:  from django . db import connections , DEFAULT_DB_ALIAS
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: property decorator ,
// property decorator ,
Code line 1391:    @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method self . extra_headers . get with arguments: string ' To ' and joined string from self . to elements separated by ' , ' , substitute the result for value under the ' To ' key of msg dictionary .
// call the method self . extra_headers . get with 2 arguments : <unk> and string ' . %s ' , substitute the result for value under the <unk> key of msg dictionary .
Code line 1392:  msg [ 'To' ] = self . extra_headers . get ( 'To' , ', ' . join ( self . to ) )
BLEU = 44.97 (Bravity Penalty=0.739, Length ratio=0.767, Translated length=33, Reference length=43) 
(81.8 / 65.6 / 54.8 / 46.7)

Original comment: divide hits by a floating point number self . per_page , convert its ceiling value to an integer and substitute it for self . _num_pages .
// convert format_type to an integer , convert the result to a integer , substitute it for self . _num_pages converted to an integer .
Code line 1393:  self . _num_pages = int ( ceil ( hits / float ( self . per_page ) ) )
BLEU = 25.73 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=24, Reference length=26) 
(54.2 / 34.8 / 22.7 / 14.3)

Original comment: decorator lru_cache . lru_cache with an argument maxsize set to None .
// method lru_cache . lru_cache with an argument maxsize set to None , as a decorator ,
Code line 1394:     @ lru_cache . lru_cache ( maxsize = None )
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.333, Translated length=16, Reference length=12) 
(68.8 / 60.0 / 57.1 / 53.8)

Original comment: if not ,
// if not ,
Code line 1395:    else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the method sign with arguments self and value .
// define the method sign with arguments self and value .
Code line 1396:    def sign ( self , value ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __init__ with 2 arguments: self and tagtype .
// define the method __init__ with 2 arguments : self and escape_html .
Code line 1397:   def __init__ ( self , tagtype ) :
BLEU = 48.33 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(75.0 / 54.5 / 40.0 / 33.3)

Original comment: SINGLE_BRACE_START is a string ' { ' .
// LOCK_SH is integer <unk> .
Code line 1398:  SINGLE_BRACE_START = '{'
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: define the method load_template with 3 arguments: self , template_name , template_dirs set to None .
// define the method load_template with 3 arguments : self , template_name , template_dirs set to None .
Code line 1399:     def load_template ( self , template_name , template_dirs = None ) :
BLEU = 76.25 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(88.2 / 81.2 / 73.3 / 64.3)

Original comment: derive the class CommentNode from Node base class .
// derive the class LoadNode from Node base class .
Code line 1400:       class CommentNode ( Node ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: token is an instance of Token class , created with 2 arguments: TOKEN_BLOCK and block_content .
// token is an instance of Token class , created with 2 arguments : TOKEN_BLOCK and block_content .
Code line 1401:   token = Token ( TOKEN_BLOCK , block_content )
BLEU = 76.25 (Bravity Penalty=1.000, Length ratio=1.062, Translated length=17, Reference length=16) 
(88.2 / 81.2 / 73.3 / 64.3)

Original comment: commands is an dictionary containing elements: string ' django . core ' for every name in the function find_commands return value , called with first element of __path__ as an argument .
// for every name in return value of the function _parse_date_fmt , called with an argument first element of renamed_method , for every name in sorted .
Code line 1402:  commands = { name : 'django.core' for name in find_commands ( __path__ [ 0 ] ) }
BLEU = 16.57 (Bravity Penalty=0.794, Length ratio=0.812, Translated length=26, Reference length=32) 
(65.4 / 40.0 / 16.7 / 4.3)

Original comment: import module calendar .
// import module calendar .
Code line 1403:  import calendar
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method queryset . none , substitute it for qs .
// call the method queryset . none , substitute the result for qs .
Code line 1404:               qs = queryset . none ( )
BLEU = 67.03 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=13, Reference length=12) 
(84.6 / 75.0 / 63.6 / 50.0)

Original comment: raise an ValidationError with 2 arguments: value under the ' invalid ' key of the self . error_messages dictionary and code set to ' invalid ' .
// raise an ValidationError with 2 arguments : value under the <unk> key of the self . error_messages dictionary and code set to <unk> .
Code line 1405:               raise ValidationError ( self . error_messages [ 'invalid' ] , code = 'invalid' )
BLEU = 56.08 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=24, Reference length=27) 
(83.3 / 69.6 / 59.1 / 47.6)

Original comment: if value under the ' feed_url ' key of the self . feed dictionary is not None ,
// if value under the <unk> key of the self . feed dictionary is not None ,
Code line 1406:  if self . feed [ 'feed_url' ] is not None :
BLEU = 71.95 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18) 
(93.8 / 86.7 / 78.6 / 69.2)

Original comment: if value is false ,
// if value is false ,
Code line 1407:           if not value :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if StandardError , renamed to e , exception is caught ,
// if StandardError , renamed to e , exception is caught ,
Code line 1408:   except StandardError as e :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute length of prefixed for pflen .
// calculate the length of plan_node .
Code line 1409:  pflen = len ( prefixed )
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7) 
(50.0 / 20.0 / 0.0 / 0.0)

Original comment: signal is a string ' signals '
// signals is an integer <unk> .
Code line 1410:  signals = 'signals'
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7) 
(33.3 / 0.0 / 0.0 / 0.0)

Original comment: call the method lookups . appendlist with 2 arguments: pattern . name and a tuple containing 3 elements: bits , p_pattern , and pattern . default_args .
// call the method lookups . appendlist with 3 arguments : pattern . name , tuple with 2 elements : bits and p_pattern , and pattern . default_args .
Code line 1411:                       lookups . appendlist ( pattern . name , ( bits , p_pattern , pattern . default_args ) )
BLEU = 49.86 (Bravity Penalty=1.000, Length ratio=1.037, Translated length=28, Reference length=27) 
(82.1 / 55.6 / 42.3 / 32.0)

Original comment: define the method __str__ with an argument self .
// define the method __str__ with an argument self .
Code line 1412:    def __str__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: register . tag decorator ,
// register . tag decorator ,
Code line 1413:     @ register . tag
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method write_message with arguments self and message .
// define the method write_message with arguments self and message .
Code line 1414:    def write_message ( self , message ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if smtplib . SMTPException exception is caught ,
// if smtplib . SMTPException exception is caught ,
Code line 1415:   except smtplib . SMTPException :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if resource_string is not None , is_usable is boolean True , otherwise is_usable is boolean False .
// is_usable is not None .
Code line 1416:       is_usable = resource_string is not None
BLEU = 0.00 (Bravity Penalty=0.091, Length ratio=0.294, Translated length=5, Reference length=17) 
(100.0 / 75.0 / 33.3 / 0.0)

Original comment: call the function custom_sql_for_model with 3 arguments: model , style and connection , extend the output with the result .
// call the function custom_sql_for_model with 3 arguments : model , style and connection , extend the output with the result .
Code line 1417:           output . extend ( custom_sql_for_model ( model , style , connection ) )
BLEU = 81.37 (Bravity Penalty=1.000, Length ratio=1.050, Translated length=21, Reference length=20) 
(90.5 / 85.0 / 78.9 / 72.2)

Original comment: substitute first 2 elements of bits for singular_suffix and plural_suffix , respectively .
// default_validators is an list with 2 elements : 2 elements : 2 elements : integer 2 and an empty list .
Code line 1418:   singular_suffix , plural_suffix = bits [ : 2 ]
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.615, Translated length=21, Reference length=13) 
(19.0 / 5.0 / 0.0 / 0.0)

Original comment: define the method getlist with 2 arguments: self and key .
// define the method getlist with 2 arguments : self and key .
Code line 1419:      def getlist ( self , key ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: define the method __iter__ with an argument self .
// define the method __iter__ with an argument self .
Code line 1420:  def __iter__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: deps is an empty list .
// deps is an empty list .
Code line 1421:                   deps = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if AttributeError exception is caught ,
// if AttributeError exception is caught ,
Code line 1422:   except AttributeError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 1423:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method self . clear_checkbox_name with an argument name , substitute the result for checkbox_name .
// call the method self . clear_checkbox_name with an argument name , substitute the result for default_translation .
Code line 1424:                   checkbox_name = self . clear_checkbox_name ( name )
BLEU = 88.44 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(94.1 / 87.5 / 86.7 / 85.7)

Original comment: raise an CommandError exception with an argument string " Multiple fixtures named ' %s ' in %s . Aborting . " , where ' %s ' is replaced with: fixture_name and result of the function humanize called with an argument fixture_dir .
// raise CommandError (
Code line 1425:                   raise CommandError (  "Multiple fixtures named '%s' in %s. Aborting." %  ( fixture_name , humanize ( fixture_dir ) ) )
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.071, Translated length=3, Reference length=42) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: if self . match is None or call to the method self . match_re . search with an argument f , evaluated to true ,
// if self . match is None or call to the method self . match_re . search with an argument f , evaluates to true ,
Code line 1426:   if self . match is None or self . match_re . search ( f ) :
BLEU = 88.95 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=25, Reference length=25) 
(96.0 / 91.7 / 87.0 / 81.8)

Original comment: from django . utils import six into default name space .
// from django . utils import six into default name space .
Code line 1427:  from django . utils import six
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if value under the ' comments ' key of the item dictionary is not None ,
// if value under the <unk> key of the item dictionary is not None ,
Code line 1428:   if item [ 'comments' ] is not None :
BLEU = 67.84 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16) 
(92.9 / 84.6 / 75.0 / 63.6)

Original comment: return endpos .
// return endpos .
Code line 1429:    return endpos
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the method __init__ with 4 arguments: self , template_string , origin set to None and name set to None .
// define the method __init__ with 4 arguments : self , template_string , origin set to None and name set to None .
Code line 1430:       def __init__ ( self , template_string , origin = None , name = None ) :
BLEU = 82.32 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21) 
(90.9 / 85.7 / 80.0 / 73.7)

Original comment: from django . core . serializers . python import Deserializer as PythonDeserializer into default name space .
// from django . core . serializers . python import Deserializer as trans into default name space .
Code line 1431:  from django . core . serializers . python import Deserializer as PythonDeserializer
BLEU = 82.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: substitute regex for self . regex .
// substitute regex for self . regex .
Code line 1432:               self . regex = regex
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method run_shell with an arguments self and shell set to None .
// define the method handle_noargs with 2 arguments : self and shell set to None .
Code line 1433:    def run_shell ( self , shell = None ) :
BLEU = 51.50 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14) 
(80.0 / 57.1 / 46.2 / 33.3)

Original comment: raise an NotImplementedError exception with argument string ' subclasses of Storage must provide a size ( ) method ' .
// raise an NotImplementedError with an argument string " subclasses of Storage must provide a <unk> ( ) method <unk> .
Code line 1434:  raise NotImplementedError ( 'subclasses of Storage must provide a size() method' )
BLEU = 39.67 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=20, Reference length=20) 
(80.0 / 52.6 / 33.3 / 17.6)

Original comment: if register_to is true ,
// if register_to is true ,
Code line 1435:                   if register_to :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method __init__ from the base class of the class TemplateIfParser , with 2 arguments: unpacked list args and unpacked dictionary .
// call the method __init__ from the base class of the class TemplateIfParser , with 2 arguments : unpacked list args , and unpacked dictionary kwargs .
Code line 1436:  super ( TemplateIfParser , self ) . __init__ ( * args , ** kwargs )
BLEU = 66.76 (Bravity Penalty=1.000, Length ratio=1.130, Translated length=26, Reference length=23) 
(84.6 / 72.0 / 62.5 / 52.2)

Original comment: define the method _get_closed with argument self .
// define the method writer_leaves with an argument self .
Code line 1437:   def _get_closed ( self ) :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(77.8 / 50.0 / 28.6 / 0.0)

Original comment: call the file . __enter__ method on self .
// call the method self . file . __enter__ .
Code line 1438:               self . file . __enter__ ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 50.0 / 14.3 / 0.0)

Original comment: syear is a string " %04d " formated with dt . year .
// calculate is a instance of a class <unk> , created with an argument dt . year .
Code line 1439:  syear = "%04d" % ( dt . year , )
BLEU = 17.69 (Bravity Penalty=1.000, Length ratio=1.308, Translated length=17, Reference length=13) 
(41.2 / 25.0 / 13.3 / 7.1)

Original comment: output is an empty list .
// output is an empty list .
Code line 1440:  output = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: convert path to a string , substitute the result for path .
// convert path into a string , substitute it for path .
Code line 1441:           path = str ( path )
BLEU = 34.53 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=11, Reference length=12) 
(81.8 / 60.0 / 33.3 / 12.5)

Original comment: call the method __init__ from the base class of the BaseTemporalField class , with arguments: unpacked list args and unpacked dictionary kwargs .
// call the method __init__ from the base class of the class BaseTemporalField , with 2 arguments : unpacked list args , and unpacked dictionary kwargs .
Code line 1442:           super ( BaseTemporalField , self ) . __init__ ( * args , ** kwargs )
BLEU = 57.05 (Bravity Penalty=1.000, Length ratio=1.130, Translated length=26, Reference length=23) 
(84.6 / 64.0 / 50.0 / 39.1)

Original comment: call the method handler . addQuickElement with 2 arguments: string ' description ' and value under the ' description ' key of the self . feed dictionary .
// call the method handler . addQuickElement with 2 arguments : <unk> and value under the <unk> key of the self . feed dictionary .
Code line 1443:  handler . addQuickElement ( "description" , self . feed [ 'description' ] )
BLEU = 56.98 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=24, Reference length=28) 
(83.3 / 73.9 / 63.6 / 52.4)

Original comment: raise an ValueError with an argument string " fk_name ' %s ' is not a ForeignKey to ' %s . % ' . " , where ' %s ' is replaced with , fk_name , parent_model . _meta . app_label and parent_model . _meta . object_name , respectively .
// raise an ValueError exception with an argument <unk> , for <unk> <unk> is a lambda function with 2 arguments : <unk> <unk> is not a ForeignKey <unk> . _meta . app_label and pkg_name , respectively .
Code line 1444:                   raise ValueError (  "fk_name '%s' is not a ForeignKey to '%s.%'."  % ( fk_name , parent_model . _meta . app_label , parent_model . _meta . object_name ) )
BLEU = 18.18 (Bravity Penalty=0.697, Length ratio=0.735, Translated length=36, Reference length=49) 
(58.3 / 37.1 / 23.5 / 9.1)

Original comment: try ,
// try ,
Code line 1445:    try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: if values under " author_name " and " author_email " keys of the item dictionary are both true ,
// if value under the <unk> key of the item dictionary is true and value under the <unk> key of the item dictionary is true ,
Code line 1446:     if item [ "author_name" ] and item [ "author_email" ] :
BLEU = 12.41 (Bravity Penalty=1.000, Length ratio=1.316, Translated length=25, Reference length=19) 
(36.0 / 16.7 / 8.7 / 4.5)

Original comment: call the function dropwhile with 2 arguments: function len and msgs spit into parts at newlines , join the result into a string , separated by newline , substitute it for msgs .
// call the method dot_re . split with 2 arguments : length of result of the method msgs . split , join the result into a string , substitute the result for msgs .
Code line 1447:            msgs = '\n' . join ( dropwhile ( len , msgs . split ( '\n' ) ) )
BLEU = 29.20 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=33, Reference length=33) 
(51.5 / 37.5 / 22.6 / 16.7)

Original comment: otherwise if first element of g equals a string " ' " ,
// otherwise if first element of g equals <unk> ,
Code line 1448:   elif g [ 0 ] == "'" :
BLEU = 48.13 (Bravity Penalty=0.641, Length ratio=0.692, Translated length=9, Reference length=13) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: call the method app . rpartition with an argument ' . ' , substitute last element of the result for app .
// call the method app . <unk> with an argument <unk> , substitute the result without the first element for app .
Code line 1449:                       app = app . rpartition ( '.' ) [ - 1 ]
BLEU = 30.98 (Bravity Penalty=0.953, Length ratio=0.955, Translated length=21, Reference length=22) 
(76.2 / 50.0 / 26.3 / 11.1)

Original comment: otherwise if tzinfo is not None ,
// otherwise if tzinfo is not None ,
Code line 1450:   elif tzinfo is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: needs_multipart_form is boolean False .
// needs_multipart_form is boolean False .
Code line 1451:       needs_multipart_form = False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: append node to nodelist .
// append node to nodelist .
Code line 1452:   nodelist . append ( node )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method value_from_datadict with 4 arguments: self , data , files and name .
// define the method value_from_datadict with 4 arguments : self , data , files and name .
Code line 1453:    def value_from_datadict ( self , data , files , name ) :
BLEU = 74.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 80.0 / 71.4 / 61.5)

Original comment: define the function ip_address_validators with arguments protocol and unpack_ipv4 .
// define the function _long_to_bin with 2 arguments : protocol and unpack_ipv4 .
Code line 1454:    def ip_address_validators ( protocol , unpack_ipv4 ) :
BLEU = 32.65 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(75.0 / 45.5 / 30.0 / 11.1)

Original comment: define the function humanize with an argument dirname .
// define the function make_middleware_decorator with an argument dirname .
Code line 1455:      def humanize ( dirname ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: substitute schemes for self . schemes .
// substitute schemes for self . schemes .
Code line 1456:               self . schemes = schemes
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . to_python with an argument value , strip the whitespaces from the result , substitute it for value .
// call the method self . to_python with an argument value , strip the result of whitespaces from both ends , substitute the result for value .
Code line 1457:           value = self . to_python ( value ) . strip ( )
BLEU = 59.47 (Bravity Penalty=1.000, Length ratio=1.130, Translated length=26, Reference length=23) 
(84.6 / 68.0 / 50.0 / 43.5)

Original comment: derive the class RegexURLResolver with LocaleRegexProvider as base class .
// derive the class RegexURLResolver from the MIMEMixin base class .
Code line 1458:      class RegexURLResolver ( LocaleRegexProvider ) :
BLEU = 37.99 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(70.0 / 55.6 / 37.5 / 14.3)

Original comment: define the method __init__ with 6 arguments self , parent_widget , name , value , attrs and choices .
// define the method __init__ with 4 arguments : self , _subtype , name , value , attrs and choices .
Code line 1459:  def __init__ ( self , parent_widget , name , value , attrs , choices ) :
BLEU = 62.44 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19) 
(85.0 / 68.4 / 55.6 / 47.1)

Original comment: otherwise if first element of second row of args equals a string ' 1 ' ,
// otherwise if first element of args equals to <unk> ,
Code line 1460:   elif args [ 1 ] [ 0 ] == '1' :
BLEU = 28.83 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=10, Reference length=16) 
(80.0 / 66.7 / 50.0 / 28.6)

Original comment: call the function os . stat with an argument path , perform bitwise and on 2 operands st_mode field of the result and stat . S_IREAD , if it is not equal to stat . S_IREAD ,
// call the function os . stat with an argument os . <unk> , if the result starts with <unk> ,
Code line 1461:    if ( ( os . stat ( path ) . st_mode & stat . S_IREAD ) != stat . S_IREAD ) :
BLEU = 20.62 (Bravity Penalty=0.427, Length ratio=0.541, Translated length=20, Reference length=37) 
(75.0 / 52.6 / 38.9 / 35.3)

Original comment: call the method self . add_library with an argument lib .
// call the method self . add_library with an argument lib .
Code line 1462:               self . add_library ( lib )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function dec with an argument func ,
// define the function dec with an argument func .
Code line 1463:                    def dec ( func ) :
BLEU = 86.33 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 87.5 / 85.7 / 83.3)

Original comment: if value under the ' feed_copyright ' key of the self . feed dictionary is not None ,
// if value under the <unk> key of the self . feed dictionary is not None ,
Code line 1464:   if self . feed [ 'feed_copyright' ] is not None :
BLEU = 71.95 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=16, Reference length=18) 
(93.8 / 86.7 / 78.6 / 69.2)

Original comment: append app_name to the invalid_apps .
// append app_name to invalid_apps .
Code line 1465:                       invalid_apps . append ( app_name )
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(100.0 / 75.0 / 33.3 / 0.0)

Original comment: call the function new_method_proxy with an argument operator . contains , substitute the result for __contains__ .
// call the function new_method_proxy with an argument operator . LANGUAGES , substitute the result for __contains__ .
Code line 1466:  __contains__ = new_method_proxy ( operator . contains )
BLEU = 82.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: define the functionbase36_to_int with an argument s .
// define the function <unk> with an argument s .
Code line 1467:        def base36_to_int ( s ) :
BLEU = 51.33 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(77.8 / 62.5 / 42.9 / 33.3)

Original comment: from django . db import models into default namespace .
// from django . db import models into default name space .
Code line 1468:  from django . db import models
BLEU = 69.89 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(81.8 / 70.0 / 66.7 / 62.5)

Original comment: reverse settings . LOCALE_PATHS element order , for every localedir in the result ,
// for every localedir in reversed list settings . LOCALE_PATHS ,
Code line 1469:  for localedir in reversed ( settings . LOCALE_PATHS ) :
BLEU = 26.33 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=10, Reference length=14) 
(80.0 / 55.6 / 37.5 / 14.3)

Original comment: call the form . is_valid method , if it evaluates to false ,
// call the method form . is_valid , if it evaluates to false ,
Code line 1470:  if not form . is_valid ( ) :
BLEU = 63.60 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 75.0 / 54.5 / 40.0)

Original comment: define the method __init__ with 6 arguments: self , regex , urlconf_name , default_kwargs set to None , app_name set to None and namespace set to None .
// define the method __init__ with 4 arguments : self , regex , urlconf_name , default_kwargs , default_kwargs , attrs set to None and namespace set to None .
Code line 1471:       def __init__ ( self , regex , urlconf_name , default_kwargs = None , app_name = None , namespace = None ) :
BLEU = 61.71 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=28, Reference length=28) 
(78.6 / 66.7 / 57.7 / 48.0)

Original comment: define the method model_installed with model as an argument .
// define the function parse_color_setting with an argument model .
Code line 1472:   def model_installed ( model ) :
BLEU = 0.00 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10) 
(77.8 / 25.0 / 0.0 / 0.0)

Original comment: substitute link for link_prev , link_next , key and result , respectively .
// substitute link for UnlockFileEx and var2 , result of the link function .
Code line 1473:  link_prev , link_next , key , result = link
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(53.8 / 16.7 / 9.1 / 0.0)

Original comment: if string ' ::: ' is contained in ip_str ,
// if <unk> is contained in ip_str ,
Code line 1474:     if ':::' in ip_str :
BLEU = 41.92 (Bravity Penalty=0.651, Length ratio=0.700, Translated length=7, Reference length=10) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: call the function m2m_value with the argument related , for every related in itterator object generated from the attribute field . name , of the obj object , append the results in a list , substitute it for value under the field . name key of the self . _current dictionary .
// get the value under the field . name key of the self . _current dictionary , call the iterator method on the result , substitute the resulting list for value under the field . name key of the self . _current dictionary .
Code line 1475:   self . _current [ field . name ] = [ m2m_value ( related )  for related in getattr ( obj , field . name ) . iterator ( ) ]
BLEU = 34.11 (Bravity Penalty=0.811, Length ratio=0.827, Translated length=43, Reference length=52) 
(67.4 / 45.2 / 34.1 / 30.0)

Original comment: unpack a dictionary with an entry id_for_label for ' for ' , map it through attrs mapping if attrs is true , and convert it again to the dictionary , if attrs is false , leave it alone , substitute the result for attrs .
// attrs is a dictionary created with 2 elements : attrs and unpacked dictionary <unk> , substitute the result for attrs .
Code line 1476:                   attrs = dict ( attrs or { } , ** { 'for' : id_for_label } )
BLEU = 11.47 (Bravity Penalty=0.319, Length ratio=0.467, Translated length=21, Reference length=45) 
(71.4 / 40.0 / 26.3 / 22.2)

Original comment: if dt is None is_dst is boolean False , otherwise call the method self . _isdst with an argument dt , substitute the result for is_dst .
// if dt is None , call the method dt . _isdst with an argument dt , substitute the result for is_dst .
Code line 1477:           is_dst = False if dt is None else self . _isdst ( dt )
BLEU = 59.60 (Bravity Penalty=0.797, Length ratio=0.815, Translated length=22, Reference length=27) 
(95.5 / 81.0 / 70.0 / 57.9)

Original comment: substitute negate for self . negate .
// substitute old_setting for self . negate .
Code line 1478:  self . negate = negate
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: call the function func with 2 arguments: unpacked list args and unpacked dictionary kwargs , return the result .
// call the function func with 2 arguments : unpacked list args and unpacked dictionary kwargs , return the result .
Code line 1479:    return func ( * args , ** kwargs )
BLEU = 80.32 (Bravity Penalty=1.000, Length ratio=1.053, Translated length=20, Reference length=19) 
(90.0 / 84.2 / 77.8 / 70.6)

Original comment: define the method __iter__ with an argument self .
// define the method __iter__ with an argument self .
Code line 1480:    def __iter__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . core . signals import request_finished into default name space .
// from django . core . signals import request_finished into default name space .
Code line 1481:  from django . core . signals import request_finished
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an Resolver404 exception with an argument dictionary containing 2 entries: new_path for ' path ' and tried for ' tried ' .
// raise an Resolver404 exception with an argument <unk> .
Code line 1482:    raise Resolver404 ( { 'tried' : tried , 'path' : new_path } )
BLEU = 15.84 (Bravity Penalty=0.211, Length ratio=0.391, Translated length=9, Reference length=23) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: if version is None ,
// if version is None ,
Code line 1483:  if version is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . _reverse_dict is an empty dictionary .
// substitute self . fixture_object_count for self . fixture_object_count .
Code line 1484:  self . _reverse_dict = { }
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(33.3 / 12.5 / 0.0 / 0.0)

Original comment: substitute silent for self . silent .
// substitute silent for self . silent .
Code line 1485:  self . silent = silent
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function new_method_proxy with an argument bool , substitute the result for __bool__ .
// call the function new_method_proxy with an argument bool , substitute the result for __bool__ .
Code line 1486:  __bool__ = new_method_proxy ( bool )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return an instance of the module . Command class .
// call the function module . Command , return the result .
Code line 1487:  return module . Command ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.100, Translated length=11, Reference length=10) 
(54.5 / 20.0 / 11.1 / 0.0)

Original comment: with lock ,
// with lock ,
Code line 1488:  with lock :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: substitute node for bit .
// substitute node for bit .
Code line 1489:                   bit = node
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: with self . mutex perform ,
// with self . mutex perform ,
Code line 1490:           with self . mutex :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if fift element of bits is not equal to a string ' as ' ,
// if second element of bits is None ,
Code line 1491:   if bits [ 4 ] != 'as' :
BLEU = 15.95 (Bravity Penalty=0.417, Length ratio=0.533, Translated length=8, Reference length=15) 
(75.0 / 42.9 / 33.3 / 20.0)

Original comment: raise an exception .
// raise an exception .
Code line 1492:                       raise
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if ' step ' key of the attrs dictionary doesnt exists assign it step as an value .
// call the method attrs . setdefault with 2 arguments : <unk> and step .
Code line 1493:   attrs . setdefault ( 'step' , step )
BLEU = 0.00 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=14, Reference length=18) 
(28.6 / 0.0 / 0.0 / 0.0)

Original comment: call the method self . extend_nodelist with 3 arguments: nodelist , instance of TextNode class , created with an argument token . contents , and token .
// call the method self . extend_nodelist with 3 arguments : nodelist , opname as an empty tuple , and token as an empty tuple .
Code line 1494:                   self . extend_nodelist ( nodelist , TextNode ( token . contents ) , token )
BLEU = 33.48 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27) 
(60.0 / 41.7 / 30.4 / 22.7)

Original comment: call the method sub_match_dict . update with an argument sub_match . kwargs .
// update zfile dictionary with sub_match . kwargs .
Code line 1495:  sub_match_dict . update ( sub_match . kwargs )
BLEU = 20.48 (Bravity Penalty=0.535, Length ratio=0.615, Translated length=8, Reference length=13) 
(75.0 / 42.9 / 33.3 / 20.0)

Original comment: raise an CommandError with an argument string " More than one migration matches ' %s ' in app ' %s ' . Please be more specific . " , where ' %s ' is replaced with migration_name and app_label .
// raise CommandError (
Code line 1496:               raise CommandError ( "More than one migration matches '%s' in app '%s'. Please be more specific." % ( migration_name , app_label ) )
BLEU = 0.00 (Bravity Penalty=0.000, Length ratio=0.075, Translated length=3, Reference length=40) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: define the initialization function with self class instance , digits and sign defaulting to ' - ' as arguments .
// define the method __init__ with 3 arguments : self , digits and sign set to <unk> .
Code line 1497:   def __init__ ( self , digits , sign = '-' ) :
BLEU = 16.61 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20) 
(64.7 / 25.0 / 13.3 / 7.1)

Original comment: get ' value ' attribute of the _active object , if it exists substitute it for t , if not t is None .
// get <unk> attribute of the _active object , if it exists substitute it for t , if not t is None .
Code line 1498:  t = getattr ( _active , "value" , None )
BLEU = 83.38 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24) 
(95.5 / 90.5 / 90.0 / 89.5)

Original comment: get the next element of the iterable pattern_iter , assign the result for ch2 and escaped , respectively .
// call the function next with an argument input_iter , assign the result to tmpdir and escaped , respectively .
Code line 1499:               ch2 , escaped = next ( input_iter )
BLEU = 33.38 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19) 
(57.9 / 38.9 / 29.4 / 18.8)

Original comment: if timeout is None ,
// if timeout is None ,
Code line 1500:  if timeout is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . utils . encoding import force_str into default name space .
// from django . utils . encoding import force_st into default name space .
Code line 1501:  from django . utils . encoding import force_str
BLEU = 76.12 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(92.3 / 83.3 / 72.7 / 60.0)

Original comment: call the function settings . is_overridden with argument string ' MIDDLEWARE_CLASSES ' , if the result is boolean False ,
// call the method settings . is_overridden with an argument <unk> , if it evaluates to false ,
Code line 1502:     if not settings . is_overridden ( 'MIDDLEWARE_CLASSES' ) :
BLEU = 17.15 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20) 
(58.8 / 31.2 / 13.3 / 7.1)

Original comment: join elements of self . vals into a bytes string , substitute the result for ret .
// join elements of self . vals into a <unk> , substitute it for ret .
Code line 1503:           ret = b'' . join ( self . vals )
BLEU = 53.43 (Bravity Penalty=0.875, Length ratio=0.882, Translated length=15, Reference length=17) 
(86.7 / 71.4 / 53.8 / 41.7)

Original comment: call the method handler . addQuickElement with 2 arguments: string " category " and cat .
// call the method handler . addQuickElement with 2 arguments : <unk> and cat .
Code line 1504:               handler . addQuickElement ( "category" , cat )
BLEU = 53.42 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=14, Reference length=16) 
(78.6 / 69.2 / 58.3 / 45.5)

Original comment: from __future__ import unicode_literals into default name space .
// from __future__ import unicode_literals into default name space .
Code line 1505: from __future__ import unicode_literals
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: help is a string " Prints the CREATE INDEX SQL statements for the given model module name ( s ) . " .
// help is a tuple containing 2 elements : _subtype and help for ' model ' .
Code line 1506:       help = "Prints the CREATE INDEX SQL statements for the given model module name(s)."
BLEU = 0.00 (Bravity Penalty=0.646, Length ratio=0.696, Translated length=16, Reference length=23) 
(37.5 / 13.3 / 7.1 / 0.0)

Original comment: raise an exception of class NotImplementedError , with string ' subclasses of BaseCache must provide a delete ( ) method ' as argument .
// raise an NotImplementedError with an argument string " <unk> of BaseCache must provide a <unk> <unk> " .
Code line 1507:  raise NotImplementedError ( 'subclasses of BaseCache must provide a delete() method' )
BLEU = 18.96 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=18, Reference length=24) 
(66.7 / 29.4 / 18.8 / 13.3)

Original comment: raise an ValidationError with 2 arguments: value under the ' invalid ' key of the self . error_messages dictionary and code set to ' invalid ' .
// raise an ValidationError with 2 arguments : value under the <unk> key of the self . error_messages dictionary and code set to <unk> .
Code line 1508:               raise ValidationError ( self . error_messages [ 'invalid' ] , code = 'invalid' )
BLEU = 56.08 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=24, Reference length=27) 
(83.3 / 69.6 / 59.1 / 47.6)

Original comment: derive the class TarArchive from the BaseArchive base class .
// derive the class JsLexer from the BaseArchive base class .
Code line 1509:      class TarArchive ( BaseArchive ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: substitute connection_reset for self . connection_reset .
// substitute connection_reset for self . connection_reset .
Code line 1510:  self . connection_reset = connection_reset
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every namespace and tuple containing: prefix and sub_pattern , in return value of the method pattern . namespace_dict . items ,
// for every namespace and tempdir in pattern . <unk> method return value , for every namespace and tb in the result ,
Code line 1511:    for namespace , ( prefix , sub_pattern ) in pattern . namespace_dict . items ( ) :
BLEU = 16.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=22, Reference length=22) 
(63.6 / 23.8 / 10.0 / 5.3)

Original comment: call the method callback . rindex with an argument character ' . ' , substitute the result for dot .
// call the method callback . rindex with an argument <unk> , substitute the result for dot .
Code line 1512:           dot = callback . rindex ( '.' )
BLEU = 69.43 (Bravity Penalty=0.838, Length ratio=0.850, Translated length=17, Reference length=20) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: url_markup_template is a string ' <a href= " { 0 } " > { 1 } </a> ' .
// _meth_self is a <unk> .
Code line 1513:   url_markup_template = '<a href="{0}">{1}</a>'
BLEU = 0.00 (Bravity Penalty=0.061, Length ratio=0.263, Translated length=5, Reference length=19) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: raise an TemplateEncodingError exception with an argument " Templates can only be constructed from unicode or UTF-8 strings . " .
// raise an DisallowedHost exception with an argument <unk> set to string " <unk> only be <unk> <unk> " .
Code line 1514:               raise TemplateEncodingError ( "Templates can only be constructed "  "from unicode or UTF-8 strings." )
BLEU = 17.47 (Bravity Penalty=0.900, Length ratio=0.905, Translated length=19, Reference length=21) 
(57.9 / 33.3 / 11.8 / 6.2)

Original comment: define the method negate with an argument self .
// define the method as_ul with an argument self .
Code line 1515:     def negate ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: self . bad_cookies is an empty set .
// self . bad_cookies is an empty set .
Code line 1516:                           self . bad_cookies = set ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 1517:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: from django . core . serializers import base into default name space .
// from django . core . serializers import base into default name space .
Code line 1518:  from django . core . serializers import base
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the cursor . close method .
// call the method cursor . close .
Code line 1519:               cursor . close ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 50.0 / 20.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 1520:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: raise an InvalidTemplateLibrary exception with an argument string " ImportError raised loading %s: %s " , where ' %s ' is replaced with taglib_module and e .
// raise an InvalidTemplateLibrary exception with an argument <unk> , <unk> <unk> <unk> <unk> % ( taglib_module ) " .
Code line 1521:               raise InvalidTemplateLibrary ( "ImportError raised loading %s: %s" %  ( taglib_module , e ) )
BLEU = 22.65 (Bravity Penalty=0.656, Length ratio=0.704, Translated length=19, Reference length=27) 
(57.9 / 33.3 / 29.4 / 25.0)

Original comment: if not ,
// if not ,
Code line 1522:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the method __init__ with 5 arguments: self , location set to None , base_url set to None , file_permissions_mode set to None , and directory_permissions_mode set to None .
// define the method __init__ with 4 arguments : self , location set to None , base_url set to None , ipv6 set to None and directory_permissions_mode set to None .
Code line 1523:   def __init__ ( self , location = None , base_url = None , file_permissions_mode = None ,  directory_permissions_mode = None ) :
BLEU = 68.42 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=30, Reference length=30) 
(86.7 / 75.9 / 64.3 / 51.9)

Original comment: try ,
// try ,
Code line 1524:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: decorator stringfilter ,
// decorator stringfilter ,
Code line 1525:  @ stringfilter
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: try ,
// try ,
Code line 1526:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: for every e in self , append convert e to an string and append it to string ' * ' , join all of the results into a string separated by newline character , return the result .
// for every e in self call the method self . join , join the results in a string , return the result .
Code line 1527:           return '\n' . join ( '* %s' % e for e in self )
BLEU = 19.56 (Bravity Penalty=0.521, Length ratio=0.605, Translated length=23, Reference length=38) 
(69.6 / 50.0 / 28.6 / 20.0)

Original comment: add state element to self . __dict__ dictionary .
// update self . __dict__ dictionary with state .
Code line 1528:           self . __dict__ . update ( state )
BLEU = 33.76 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9) 
(75.0 / 42.9 / 33.3 / 20.0)

Original comment: call the method initial_form_count from the base class of the class BaseModelFormSet , return the result .
// call the method initial_form_count from the base class of the class BaseModelFormSet , return the result .
Code line 1529:   return super ( BaseModelFormSet , self ) . initial_form_count ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute settings . MEDIA_URL for base_url .
// substitute settings . MEDIA_URL for base_url .
Code line 1530:               base_url = settings . MEDIA_URL
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: self . pointer is integer 0 .
// self . pointer is an integer 0 .
Code line 1531:  self . pointer = 0
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7) 
(87.5 / 71.4 / 50.0 / 20.0)

Original comment: define the function wrapper with 2 arguments: unpacked list args and unpacked dictionary kwds .
// define the function wrapper with 2 arguments : unpacked list args and unpacked dictionary kwds .
Code line 1532:                    def wrapper ( * args , ** kwds ) :
BLEU = 74.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 80.0 / 71.4 / 61.5)

Original comment: return boolean False .
// return boolean False .
Code line 1533:    return False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute ' n ' for answer .
// answer is integer <unk> .
Code line 1534:                           answer = "n"
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=5, Reference length=7) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: try ,
// try ,
Code line 1535:                    try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: if ImportError exception is caught ,
// if ImportError exception is caught ,
Code line 1536:   except ImportError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every char in key ,
// for every char in key ,
Code line 1537:   for char in key :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: ns_pattern is an empty string .
// ns_pattern is a integer <unk> .
Code line 1538:  ns_pattern = ''
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(50.0 / 20.0 / 0.0 / 0.0)

Original comment: define the method __repr__ with an argument self .
// define the method __repr__ with an argument self .
Code line 1539:     def __repr__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the get_bytes_from_wsgi function with environ , string ' REDIRECT_URL ' and empty strings as arguments , substitute the result for script_url .
// call the function get_bytes_from_wsgi with environ , <unk> and <unk> as arguments , substitute the result for script_url .
Code line 1540:           script_url = get_bytes_from_wsgi ( environ , 'REDIRECT_URL' , '' )
BLEU = 45.15 (Bravity Penalty=0.810, Length ratio=0.826, Translated length=19, Reference length=23) 
(89.5 / 61.1 / 47.1 / 37.5)

Original comment: call the method content . encode with an argument string ' utf-8 ' , substitute it for content .
// call the method content . encode with an argument <unk> , substitute the result for content .
Code line 1541:  content = content . encode ( 'utf-8' )
BLEU = 53.32 (Bravity Penalty=0.889, Length ratio=0.895, Translated length=17, Reference length=19) 
(82.4 / 68.8 / 53.3 / 42.9)

Original comment: define the method media with an argument self .
// define the method media with an argument self .
Code line 1542:  def media ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class Error from base class CheckMessage .
// derive the class Error from base class CheckMessage .
Code line 1543:      class Error ( CheckMessage ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if jan1_weekday equals integer 5 , or if jan1_weekday equals integer 6 and call to the function calendar . isleap , with an argument self . data . year decremented by 1 , evaluates to true ,
// if greater is greater than or equal to integer 6 and return value of the method calendar . isleap called with an argument self . data . year , evaluates to true ,
Code line 1544:               if jan1_weekday == 5 or ( jan1_weekday == 6 and calendar . isleap ( self . data . year - 1 ) ) :
BLEU = 35.93 (Bravity Penalty=0.886, Length ratio=0.892, Translated length=33, Reference length=37) 
(69.7 / 46.9 / 35.5 / 23.3)

Original comment: if _win is true ,
// if pofile is true ,
Code line 1545:  if _win :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: break loop execution .
// break from the loop execution .
Code line 1546:  break
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.500, Translated length=6, Reference length=4) 
(66.7 / 40.0 / 25.0 / 0.0)

Original comment: call the function user_function with 2 arguments: unpacked list args and unpacked dictionary kwds , substitute the result for result .
// call the function user_function with 2 arguments : unpacked list args and unpacked dictionary kwds , substitute the result for result .
Code line 1547:    result = user_function ( * args , ** kwds )
BLEU = 82.32 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21) 
(90.9 / 85.7 / 80.0 / 73.7)

Original comment: substitute file . mode for self . mode .
// substitute file . mode for self . mode .
Code line 1548:               self . mode = file . mode
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method delete_many with arguments self , keys and version defaulting to None .
// define the method delete_many with 3 arguments : self , keys , and version set to None .
Code line 1549:     def delete_many ( self , keys , version = None ) :
BLEU = 36.19 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=18, Reference length=15) 
(77.8 / 52.9 / 31.2 / 13.3)

Original comment: call the method e . encode with an argument string " latin-1 " .
// call the method s . encode with an argument <unk> , return the result .
Code line 1550:           return s . encode ( "latin-1" )
BLEU = 33.89 (Bravity Penalty=1.000, Length ratio=1.071, Translated length=15, Reference length=14) 
(60.0 / 42.9 / 30.8 / 16.7)

Original comment: define the method add_fields with 3 arguments: self , form and index .
// define the method add_fields with arguments self , form and index .
Code line 1551:    def add_fields ( self , form , index ) :
BLEU = 67.61 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=12, Reference length=13) 
(91.7 / 81.8 / 70.0 / 55.6)

Original comment: get the type of self object , call its method __bool__ with an argument self , return the result .
// get the type of the self object , call the __bool__ method on the result with an argument self , return the result .
Code line 1552:           return type ( self ) . __bool__ ( self )
BLEU = 55.04 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=24, Reference length=20) 
(79.2 / 60.9 / 50.0 / 38.1)

Original comment: child_nodelists is an tuple with 2 elements: strings ' nodelist_loop ' and ' nodelist_empty ' .
// child_nodelists is a tuple with 2 elements : <unk> and <unk> .
Code line 1553:       child_nodelists = ( 'nodelist_loop' , 'nodelist_empty' )
BLEU = 0.00 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=12, Reference length=16) 
(58.3 / 27.3 / 10.0 / 0.0)

Original comment: get attr attribute of self object , if it exists substitute it for nodelist , if not nodelist is None .
// get attr attribute from the self object , if it exists substitute it for nodelist , if not nodelist is None .
Code line 1554:               nodelist = getattr ( self , attr , None )
BLEU = 82.32 (Bravity Penalty=1.000, Length ratio=1.048, Translated length=22, Reference length=21) 
(90.9 / 85.7 / 80.0 / 73.7)

Original comment: derive the class DeserializationError from the Exception base class .
// derive the class DeserializationError from the Exception base class .
Code line 1555:     class DeserializationError ( Exception ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: get the value under the key of the dictionary self , if key does not exists return evaluated result of the function Morsel , substitute it for M .
// call the method self . get with key and newretval as arguments , use the result as an argument for the call to the self . get method .
Code line 1556:                       M = self . get ( key , Morsel ( ) )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=29, Reference length=29) 
(37.9 / 0.0 / 0.0 / 0.0)

Original comment: from django . utils import six into default name space .
// from django . utils import six into default name space .
Code line 1557:   from django . utils import six
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __call__ with arguments self and value .
// define the method __call__ with arguments self and value .
Code line 1558:     def __call__ ( self , value ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return plural_suffix .
// return plural_suffix .
Code line 1559:                   return plural_suffix
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: while self . tokens is true ,
// while self . tokens is true ,
Code line 1560:  while self . tokens :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the __init__ method from the base class of the EmailBackend class , with arguments: unpacked list args and unpacked dictionary kwargs .
// call the method __init__ from the base class of the EmailBackend class with arguments : unpacked list args , and unpacked dictionary kwargs .
Code line 1561:  super ( EmailBackend , self ) . __init__ ( * args , ** kwargs )
BLEU = 53.92 (Bravity Penalty=1.000, Length ratio=1.043, Translated length=24, Reference length=23) 
(91.7 / 60.9 / 45.5 / 33.3)

Original comment: call the method handler . addQuickElement with 2 arguments: string ' rights ' and value under the ' feed_copyright ' key of the self . feed dictionary .
// call the method handler . addQuickElement with 2 arguments : <unk> and value under the <unk> key of the self . feed dictionary .
Code line 1562:               handler . addQuickElement ( "rights" , self . feed [ 'feed_copyright' ] )
BLEU = 56.98 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=24, Reference length=28) 
(83.3 / 73.9 / 63.6 / 52.4)

Original comment: and errors set to the result of self . default_error_messages . copy .
// call the method self . requires_system_checks . copy , substitute the result for errors .
Code line 1563:           errors = self . default_error_messages . copy ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.154, Translated length=15, Reference length=13) 
(53.3 / 21.4 / 0.0 / 0.0)

Original comment: define the method __init__ with 2 arguments: self and source .
// define the method __init__ with 2 arguments : self and source .
Code line 1564:       def __init__ ( self , source ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: write errors to self . stdout .
// write errors to self . stdout stream .
Code line 1565:                       self . stdout . write ( errors )
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7) 
(87.5 / 71.4 / 66.7 / 60.0)

Original comment: otherwise if item_type equals FILE ,
// otherwise if item_type equals all_unique_checks ,
Code line 1566:   elif item_type == FILE :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: derive the class RendererMixin from the object base class .
// derive the class RendererMixin from the object base class .
Code line 1567:     class RendererMixin ( object ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method date with an argument self .
// define the method date with an argument self .
Code line 1568:    def date ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if app_config is None ,
// if app_config is None ,
Code line 1569:   if app_config is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 1570:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: format self . month_field string with name , use it as the key for the data dictionary , substitute the result for m .
// call the method data . get with an argument self . _iterator , substitute the result for m .
Code line 1571:  m = data . get ( self . month_field % name )
BLEU = 28.18 (Bravity Penalty=0.769, Length ratio=0.792, Translated length=19, Reference length=24) 
(63.2 / 38.9 / 29.4 / 25.0)

Original comment: substitute settings . ROOT_URLCONF for urlconf .
// substitute settings . ROOT_URLCONF for urlconf .
Code line 1572:  urlconf = settings . ROOT_URLCONF
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method smart_split_re . finditer with an argument text , for every bit in result ,
// call the method <unk> . finditer with an argument text , for every bit in result ,
Code line 1573:  for bit in smart_split_re . finditer ( text ) :
BLEU = 82.82 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(94.1 / 87.5 / 80.0 / 71.4)

Original comment: value under the " RUN_MAIN " key of new_environ dictionary is a string ' true ' .
// substitute <unk> for value under the <unk> key of the _format_cache dictionary .
Code line 1574:  new_environ [ "RUN_MAIN" ] = 'true'
BLEU = 0.00 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17) 
(53.8 / 25.0 / 9.1 / 0.0)

Original comment: encoding . setter decorator ,
// settings . setter decorator ,
Code line 1575:    @ encoding . setter
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 75.0 / 66.7 / 50.0)

Original comment: increment i by one .
// increment i by integer 1 .
Code line 1576:                           i += 1
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5) 
(66.7 / 40.0 / 25.0 / 0.0)

Original comment: call the method HTMLParser . __init__ with an argument self .
// call the method HTMLParser . __init__ with an argument self .
Code line 1577:               HTMLParser . __init__ ( self )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . db import models and DEFAULT_DB_ALIAS into default name space .
// from django . db import models and DEFAULT_DB_ALIAS into default name space .
Code line 1578:  from django . db import models , DEFAULT_DB_ALIAS
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if length of bits is greater than integer 2 ,
// if length of bits is greater than integer 2 ,
Code line 1579:  if len ( bits ) > 2 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every value in data call the function force_text with an argument value , add the results into a set , substitute the resulting set for data_set .
// data_set is a set created with return value of the function force_text called with an argument value , for every value in data .
Code line 1580:  data_set = set ( force_text ( value ) for value in data )
BLEU = 32.04 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=24, Reference length=28) 
(70.8 / 47.8 / 31.8 / 19.0)

Original comment: yield representative and boolean True .
// yield it and boolean True .
Code line 1581:   yield representative , True
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: define the method __getstate__ with an argument self .
// define the method __getstate__ with an argument self .
Code line 1582:         def __getstate__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function _explode_shorthand_ip_string with an argument ip_str , substitute the result for ip_str .
// call the function <unk> with an argument ip_str , substitute the result for ip_str .
Code line 1583:   ip_str = _sanitize_ipv4_mapping ( ip_str )
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(93.3 / 85.7 / 76.9 / 66.7)

Original comment: substitute DebugLexer and DebugParser for lexer_class and parser_class .
// substitute collect and DebugParser for lexer_class and parser_class , respectively .
Code line 1584:  lexer_class , parser_class = DebugLexer , DebugParser
BLEU = 49.62 (Bravity Penalty=1.000, Length ratio=1.222, Translated length=11, Reference length=9) 
(72.7 / 50.0 / 44.4 / 37.5)

Original comment: if six . PY3 is true ,
// if six . PY3 is true ,
Code line 1585:    if six . PY3 :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an exception .
// raise an exception .
Code line 1586:           raise
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method command . stdout . write with an argument errors .
// write errors to command . stdout .
Code line 1587:                    command . stdout . write ( errors )
BLEU = 19.31 (Bravity Penalty=0.424, Length ratio=0.538, Translated length=7, Reference length=13) 
(85.7 / 50.0 / 40.0 / 25.0)

Original comment: define the method prepare_value with 2 arguments: self and value .
// define the method prepare_value with 2 arguments : self and value .
Code line 1588:    def prepare_value ( self , value ) :
BLEU = 63.40 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(83.3 / 72.7 / 60.0 / 44.4)

Original comment: name is an empty list .
// name is an empty list .
Code line 1589:   name = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if format_module_path is true ,
// if format_module_path is true ,
Code line 1590:  if format_module_path :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method readline . parse_and_bind with an argument string " tab:complete " .
// call the method readline . <unk> with an argument <unk> .
Code line 1591:  readline . parse_and_bind ( "tab:complete" )
BLEU = 36.79 (Bravity Penalty=0.761, Length ratio=0.786, Translated length=11, Reference length=14) 
(81.8 / 60.0 / 44.4 / 25.0)

Original comment: remove config dictionary element under ' name ' key , if it exists substitute it for name , if not , name is an empty string .
// get config dictionary element under <unk> key , if it exists substitute it for name , if not , name is an empty string .
Code line 1592:               name = config . get ( 'name' , '' )
BLEU = 78.16 (Bravity Penalty=0.923, Length ratio=0.926, Translated length=25, Reference length=27) 
(92.0 / 87.5 / 82.6 / 77.3)

Original comment: define the method __str__ with an argument self .
// define the method __str__ with an argument self .
Code line 1593:      def __str__ ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class Command from the AppCommand base class .
// derive the class Command from the AppCommand base class .
Code line 1594:    class Command ( AppCommand ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method is_secure with an argument self .
// define the method _add_installed_apps_translations with an argument self .
Code line 1595:    def is_secure ( self ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: for every app_label in app_labels ,
// for every app_label in app_labels ,
Code line 1596:               for app_label in app_labels :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if settings . FORCE_SCRIPT_NAME is not None ,
// if settings . USE_TZ is not None ,
Code line 1597:  if settings . FORCE_SCRIPT_NAME is not None :
BLEU = 50.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 71.4 / 50.0 / 20.0)

Original comment: increment the offset by the length of self . __starttag_text .
// sum offset and length of self . __starttag_text , substitute the result for offset .
Code line 1598:                       offset = offset + len ( self . __starttag_text )
BLEU = 27.67 (Bravity Penalty=1.000, Length ratio=1.364, Translated length=15, Reference length=11) 
(53.3 / 28.6 / 23.1 / 16.7)

Original comment: if KeyError exception is caught .
// if KeyError exception is caught ,
Code line 1599:   except KeyError :
BLEU = 75.98 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 80.0 / 75.0 / 66.7)

Original comment: append ' = ' to opt_label .
// increment nesting by one .
Code line 1600:                       opt_label += '='
BLEU = 0.00 (Bravity Penalty=0.670, Length ratio=0.714, Translated length=5, Reference length=7) 
(20.0 / 0.0 / 0.0 / 0.0)

Original comment: if name is not contained in parser . _namedCycleNodes ,
// if name is not contained in parser . _namedCycleNodes ,
Code line 1601:   if name not in parser . _namedCycleNodes :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method self . main_help_text append new line to it , write it to sys . stdout .
// call the method self . main_help_text . write , use the result as an argument for the call to the function sys . stdout . write .
Code line 1602:                   sys . stdout . write ( self . main_help_text ( ) + '\n' )
BLEU = 27.75 (Bravity Penalty=1.000, Length ratio=1.421, Translated length=27, Reference length=19) 
(48.1 / 30.8 / 24.0 / 16.7)

Original comment: define the method start_object with arguments self and obj .
// define the method start_object with arguments self and obj .
Code line 1603:    def start_object ( self , obj ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: extension_map is a dictioanry with 6 initial elntries: TarArchive for ' . tar ' , TarArchive for ' . tar . bz2 ' , TarArchive for ' . tar . gz ' ,
// compare is a <unk> function with 4 elements : <unk> , <unk> , <unk> , <unk> , <unk> , <unk> , <unk> , <unk> , <unk> and <unk> .
Code line 1604:     extension_map = {  '.tar' : TarArchive ,  '.tar.bz2' : TarArchive ,  '.tar.gz' : TarArchive ,  '.tgz' : TarArchive ,  '.tz2' : TarArchive ,  '.zip' : ZipArchive ,  }
BLEU = 0.00 (Bravity Penalty=0.871, Length ratio=0.879, Translated length=29, Reference length=33) 
(24.1 / 3.6 / 0.0 / 0.0)

Original comment: return data .
// return data .
Code line 1605:   return data
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: left justify string s in a field of width equal to the sum of length of s and reminder of the division of length of s by integer 4 , pad the rest of the field with bytes string ' = ' , use the result as an argument for the call to the method base64 . urlsafe_b64decode , return the result .
// call the method base64 . <unk> with length of s as an argument , use the result as an argument for the call to the method base64 . <unk> , return the length of the result .
Code line 1606:           return base64 . urlsafe_b64decode ( s . ljust ( len ( s ) + len ( s ) % 4 , b'=' ) )
BLEU = 25.88 (Bravity Penalty=0.495, Length ratio=0.587, Translated length=37, Reference length=63) 
(75.7 / 61.1 / 45.7 / 35.3)

Original comment: call the function allow_lazy with an argument unescape_string_literal , substitute the result for unescape_string_literal .
// call the function allow_lazy with an argument mod_name , substitute the result for mod_name .
Code line 1607:   unescape_string_literal = allow_lazy ( unescape_string_literal )
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(86.7 / 71.4 / 61.5 / 50.0)

Original comment: if tok starts with " ' " ,
// if tok starts with <unk> ,
Code line 1608:                 if tok . startswith ( "'" ) :
BLEU = 38.50 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=6, Reference length=8) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: for every program in programs ,
// for every program in template_name_list ,
Code line 1609:       for program in programs :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: if f . db_index is true ,
// if f . <unk> is true ,
Code line 1610:   if f . db_index :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 40.0 / 0.0)

Original comment: return value under the key key of dictionary in last element of self . dicts .
// return last element of self . dicts .
Code line 1611:           return self . dicts [ - 1 ] [ key ]
BLEU = 31.98 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=8, Reference length=16) 
(100.0 / 85.7 / 83.3 / 80.0)

Original comment: define the function get_unbound_function with an argument unbound .
// define the function get_unbound_function with an argument unbound .
Code line 1612:       def get_unbound_function ( unbound ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute the value under the ' app_label ' key of options dictionary for app_label .
// substitute value under the <unk> key of the options dictionary for app_label .
Code line 1613:               app_label = options [ 'app_label' ]
BLEU = 38.14 (Bravity Penalty=0.857, Length ratio=0.867, Translated length=13, Reference length=15) 
(92.3 / 58.3 / 36.4 / 20.0)

Original comment: if self . domain equals a string ' djangojs ' ,
// if self . domain equals integer <unk> ,
Code line 1614:  if self . domain == 'djangojs' :
BLEU = 37.19 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11) 
(75.0 / 57.1 / 50.0 / 40.0)

Original comment: if imatch is true ,
// if imatch is true ,
Code line 1615:  if imatch :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return reversed list output .
// return last last elements of output .
Code line 1616:     return output [ : : - 1 ]
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=7, Reference length=5) 
(42.9 / 16.7 / 0.0 / 0.0)

Original comment: call the function shutil . move with arguments the_path and guessed_path .
// call the method shutil . unget with 2 arguments : the_path and ignore_failures .
Code line 1617:  shutil . move ( the_path , guessed_path )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12) 
(64.3 / 23.1 / 0.0 / 0.0)

Original comment: if self . show_traceback is true ,
// if self . _num_pages is true ,
Code line 1618:  if self . show_traceback :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 40.0 / 0.0)

Original comment: if target_dir path doesnt exists ,
// if file path doesnt exists ,
Code line 1619:  if not path . exists ( target_dir ) :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: evaluate pickle . loads with argument pickled , return the result .
// call the function pickle . loads with argument pickled , return the result .
Code line 1620:                   return pickle . loads ( pickled )
BLEU = 75.77 (Bravity Penalty=1.000, Length ratio=1.167, Translated length=14, Reference length=12) 
(78.6 / 76.9 / 75.0 / 72.7)

Original comment: return s .
// return s .
Code line 1621:            return s
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: substitute str for text_type .
// text_type is a string .
Code line 1622:  text_type = str
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(40.0 / 0.0 / 0.0 / 0.0)

Original comment: format string ' \x1b [ %sm ' with RESET , return the result .
// return <unk>
Code line 1623:           return '\x1b[%sm' % RESET
BLEU = 0.00 (Bravity Penalty=0.002, Length ratio=0.143, Translated length=2, Reference length=14) 
(50.0 / 0.0 / 0.0 / 0.0)

Original comment: try ,
// try ,
Code line 1624:  try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: do nothing .
// do nothing .
Code line 1625:           pass
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: return data .
// return data .
Code line 1626:  return data
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: map elements of value through mapping function force_text , substitute the result for value .
// call the function conditional_escape with 2 arguments : force_text and value , substitute the result for value .
Code line 1627:  value = map ( force_text , value )
BLEU = 35.75 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=18, Reference length=15) 
(55.6 / 35.3 / 31.2 / 26.7)

Original comment: server_address is a tuple containing 2 initial elements: addr and port .
// buffer_types is a tuple with 2 elements : addr and port .
Code line 1628:       server_address = ( addr , port )
BLEU = 31.70 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(66.7 / 45.5 / 30.0 / 11.1)

Original comment: if not ,
// if not ,
Code line 1629:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: raise an InputStreamExhausted exception ,
// raise an StopIteration exception .
Code line 1630:               raise InputStreamExhausted ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: if settings . configured ,
// if settings . configured is true ,
Code line 1631:  if settings . configured :
BLEU = 43.47 (Bravity Penalty=1.000, Length ratio=1.400, Translated length=7, Reference length=5) 
(71.4 / 50.0 / 40.0 / 25.0)

Original comment: call the run_from_argv function from the base class of the Command class with argv as a argument , .
// call the method run_from_argv from the base class of the class Command , with an argument argv .
Code line 1632:    super ( Command , self ) . run_from_argv ( argv )
BLEU = 33.48 (Bravity Penalty=0.946, Length ratio=0.947, Translated length=18, Reference length=19) 
(88.9 / 35.3 / 25.0 / 20.0)

Original comment: call the function _trans . get_language , return the result .
// call the function _trans . get_language , return the result .
Code line 1633:       return _trans . get_language ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the the method __copy__ from the base class of the class Context , substitute the result for duplicate .
// call the method __copy__ from the base class of the class Context , substitute the result for duplicate .
Code line 1634:           duplicate = super ( Context , self ) . __copy__ ( )
BLEU = 91.95 (Bravity Penalty=0.949, Length ratio=0.950, Translated length=19, Reference length=20) 
(100.0 / 100.0 / 94.1 / 93.8)

Original comment: for every handler in handlers ,
// for every handler in handlers ,
Code line 1635:     for handler in handlers :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return an dictionary containing 1 entry: return value of the function timezone . get_current_timezone_name for ' TIME_ZONE ' .
// return an instance of <unk> class , created with an argument timezone .
Code line 1636:   return { 'TIME_ZONE' : timezone . get_current_timezone_name ( ) }
BLEU = 0.00 (Bravity Penalty=0.630, Length ratio=0.684, Translated length=13, Reference length=19) 
(38.5 / 16.7 / 0.0 / 0.0)

Original comment: call the self . get method with key and version set to version as arguments , return it if it is not None .
// if key and version are not None , return boolean True , otherwise return boolean False .
Code line 1637:  return self . get ( key , version = version ) is not None
BLEU = 0.00 (Bravity Penalty=0.662, Length ratio=0.708, Translated length=17, Reference length=24) 
(52.9 / 25.0 / 6.7 / 0.0)

Original comment: if can_fail is true ,
// if can_fail is true ,
Code line 1638:           if can_fail :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method valid_value with arguments self and value .
// define the method strptime with arguments self and value .
Code line 1639:     def valid_value ( self , value ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: from django . apps import apps into default name space .
// from django . apps import apps into default name space .
Code line 1640:   from django . apps import apps
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call a function _ with a string ' Enter a valid value . ' as an argument , substitute the result for message .
// call the function _ with an argument <unk> set to a string , substitute the result for message .
Code line 1641:  message = _ ( 'Enter a valid URL.' )
BLEU = 34.09 (Bravity Penalty=0.769, Length ratio=0.792, Translated length=19, Reference length=24) 
(78.9 / 55.6 / 35.3 / 25.0)

Original comment: from django . utils . safestring import mark_safe and SafeData into default name space .
// from django . utils . safestring import mark_safe and SafeData into default name space .
Code line 1642:  from django . utils . safestring import mark_safe , SafeData
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function ip .
// call the function validate_ipv46_address .
Code line 1643:                   ip ( )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: _BROWSERS_DEPRECATED_LOCALES is an dictionary with 2 initial entries: ' zh-hans ' for ' zh-cn ' and ' zh-hant ' for ' zh-tw ' .
// multiply is a <unk> object with <unk> , <unk> and <unk> .
Code line 1644:    _BROWSERS_DEPRECATED_LOCALES = {  'zh-cn' : 'zh-hans' ,  'zh-tw' : 'zh-hant' ,  }
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=12, Reference length=24) 
(33.3 / 0.0 / 0.0 / 0.0)

Original comment: from django . utils import six into default name space .
// from django . utils import six into default name space .
Code line 1645:  from django . utils import six
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 1646:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the function modelform_factory with 10 arguments: model , form set to ModelForm , fields set to None , exclude set to None ,
// define the function python_reloader with 3 arguments : model , form , fields set to create_models , exclude set to None ,
Code line 1647:     def modelform_factory ( model , form = ModelForm , fields = None , exclude = None ,  formfield_callback = None , widgets = None , localized_fields = None ,  labels = None , help_texts = None , error_messages = None ) :
BLEU = 40.10 (Bravity Penalty=0.913, Length ratio=0.917, Translated length=22, Reference length=24) 
(77.3 / 57.1 / 40.0 / 21.1)

Original comment: call the function _strip_once with an argument value , substitute the result for new_value .
// call the function _slugify with an argument value , substitute the result for new_value .
Code line 1648:           new_value = _strip_once ( value )
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(93.3 / 85.7 / 76.9 / 66.7)

Original comment: call the function _unpack_ipv4 with an argument ip_str , substitute the result for ipv4_unpacked .
// call the function get_exception_reporter_filter with an argument ip_str , substitute the result for step .
Code line 1649:           ipv4_unpacked = _unpack_ipv4 ( ip_str )
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(86.7 / 71.4 / 61.5 / 50.0)

Original comment: if self . asvar is true ,
// if self . asvar is true ,
Code line 1650:    if self . asvar :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: remove entry at the attr key of the declared_fields dictionary .
// remove attr dictionary entry under the attr key .
Code line 1651:                       declared_fields . pop ( attr )
BLEU = 0.00 (Bravity Penalty=0.801, Length ratio=0.818, Translated length=9, Reference length=11) 
(77.8 / 25.0 / 14.3 / 0.0)

Original comment: allow_multiple_selected is boolean False .
// allow_multiple_selected is boolean False .
Code line 1652:       allow_multiple_selected = False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: import module tempfile .
// import module tempfile .
Code line 1653:  import tempfile
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method __init__ with 2 arguments: unpacked list args and unpacked dictionary kwargs , from the base class of the class ComboField .
// call the method __init__ from the base class of the class ComboField , with 2 arguments : unpacked list args , and unpacked dictionary kwargs .
Code line 1654:           super ( ComboField , self ) . __init__ ( * args , ** kwargs )
BLEU = 53.01 (Bravity Penalty=1.000, Length ratio=1.083, Translated length=26, Reference length=24) 
(88.5 / 64.0 / 45.8 / 30.4)

Original comment: call the function processor with an argument request , update updates dictionary with the result .
// call the function trim_whitespace with an argument request , use the result as an argument for the call to the method to_delete . update .
Code line 1655:               updates . update ( processor ( request ) )
BLEU = 21.69 (Bravity Penalty=1.000, Length ratio=1.562, Translated length=25, Reference length=16) 
(48.0 / 29.2 / 17.4 / 9.1)

Original comment: call the method token . split_contents , substitute the result for bits .
// call the method token . split_contents , substitute the result for bits .
Code line 1656:  bits = token . split_contents ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call os . makedirs function with self . _dir and hexadecimal 0o700 as arguments .
// call the os . makedirs function with self . _dir and <unk> as arguments .
Code line 1657:                   os . makedirs ( self . _dir , 0o700 )
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(86.7 / 71.4 / 61.5 / 50.0)

Original comment: derive Serializer from the base . Serializer base class .
// derive the class Serializer from the base . Serializer base class .
Code line 1658:    class Serializer ( base . Serializer ) :
BLEU = 72.93 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=12, Reference length=10) 
(83.3 / 72.7 / 70.0 / 66.7)

Original comment: if not ,
// if not ,
Code line 1659:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: substitute save_m2m for self . save_m2m .
// substitute save_m2m for self . test_runner .
Code line 1660:    self . save_m2m = save_m2m
BLEU = 64.35 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: call the method self . _cache . decr with key and delta as arguments , substitute the result for val .
// call the method self . _cache . decr with key and delta as arguments , substitute the result for val .
Code line 1661:               val = self . _cache . decr ( key , delta )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class HttpResponseRedirectBase from the HttpResponse base class .
// derive the class HttpResponseRedirectBase from the HttpResponse base class .
Code line 1662:      class HttpResponseRedirectBase ( HttpResponse ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return ret .
// return ret .
Code line 1663:  return ret
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: write data to fp .
// call the method fp . write with an argument data .
Code line 1664:   fp . write ( data )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=2.200, Translated length=11, Reference length=5) 
(36.4 / 10.0 / 0.0 / 0.0)

Original comment: call the function new_method_proxy with an argument str , substitute the result for __str__ .
// call the function new_method_proxy with an argument str , substitute the result for __str__ .
Code line 1665:           __str__ = new_method_proxy ( str )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: sum best_doublecolon_start and best_doublecolon_len , substitute the result for best_doublecolon_end ,
// call the function convert_old_style_list with an argument best_doublecolon_len , substitute the result for forms_valid .
Code line 1666:           best_doublecolon_end = ( best_doublecolon_start +  best_doublecolon_len )
BLEU = 32.38 (Bravity Penalty=1.000, Length ratio=1.364, Translated length=15, Reference length=11) 
(40.0 / 35.7 / 30.8 / 25.0)

Original comment: _fields_ is a list containing 4 tuples: first tuple contains: string ' Internal ' and ULONG_PTR , second contains: string ' InternalHigh and ULONG_PTR , third: ' _offset_union ' and _OFFSET_UNION , forth ' hEvent ' and HANDLE .
// to_unicode is a list containing tuple with 2 elements : <unk> and <unk> .
Code line 1667:  _fields_ = [  ( 'Internal' , ULONG_PTR ) ,  ( 'InternalHigh' , ULONG_PTR ) ,  ( '_offset_union' , _OFFSET_UNION ) ,  ( 'hEvent' , HANDLE ) ]
BLEU = 3.43 (Bravity Penalty=0.168, Length ratio=0.359, Translated length=14, Reference length=39) 
(50.0 / 23.1 / 16.7 / 9.1)

Original comment: call the method call_command with string ' loaddata ' , string ' initial_data ' , verbosity set to self . verbosity , database set to connection . alias , skip_validation set to boolean True , app_label set to app_label and hide_empty set to boolean True .
// call the function call_command with 4 arguments : <unk> , <unk> , verbosity set to self . verbosity , connection set to boolean True ,
Code line 1668:                   call_command ( 'loaddata' , 'initial_data' , verbosity = self . verbosity , database = connection . alias , skip_validation = True , app_label = app_label , hide_empty = True )
BLEU = 20.54 (Bravity Penalty=0.432, Length ratio=0.543, Translated length=25, Reference length=46) 
(76.0 / 54.2 / 39.1 / 31.8)

Original comment: call the method self . loaddata with an argument fixture_labels .
// call the method self . add_error with an argument fixture_labels .
Code line 1669:               self . loaddata ( fixture_labels )
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: call the function check_programs with 3 arguments: strings ' msguniq ' , ' msgmerge ' and ' msgattrib ' .
// call the function _add_doc with 2 arguments : <unk> and <unk> .
Code line 1670:               check_programs ( 'msguniq' , 'msgmerge' , 'msgattrib' )
BLEU = 0.00 (Bravity Penalty=0.513, Length ratio=0.600, Translated length=12, Reference length=20) 
(50.0 / 18.2 / 10.0 / 0.0)

Original comment: validate_email is an instance of EmailValidator class .
// vary_headers is an instance of the class OrderedDict .
Code line 1671:     validate_email = EmailValidator ( )
BLEU = 33.03 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(66.7 / 37.5 / 28.6 / 16.7)

Original comment: return value .
// return value .
Code line 1672:     return value
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if callback is an instance of functools . partial object ,
// if callback is an instance of BaseEmailBackend ,
Code line 1673:  if isinstance ( callback , functools . partial ) :
BLEU = 48.60 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11) 
(87.5 / 71.4 / 66.7 / 60.0)

Original comment: if widget is an instance of the NumberInput class , and string ' step ' is not contained in widget . attrs ,
// if widget is an instance of NumberInput and <unk> is not contained in widget . attrs ,
Code line 1674:  if isinstance ( widget , NumberInput ) and 'step' not in widget . attrs :
BLEU = 50.60 (Bravity Penalty=0.703, Length ratio=0.739, Translated length=17, Reference length=23) 
(94.1 / 75.0 / 66.7 / 57.1)

Original comment: define the protected method _cull with self class instance , db , cursor and now as arguments .
// define the method _cull with self , db , cursor and now as arguments .
Code line 1675:     def _cull ( self , db , cursor , now ) :
BLEU = 62.80 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=15, Reference length=18) 
(100.0 / 85.7 / 69.2 / 58.3)

Original comment: call the method pattern . resolve with an argument new_path , substitute the result for sub_match .
// call the method pattern . resolve with an argument new_path , substitute the result for filter_name .
Code line 1676:                       sub_match = pattern . resolve ( new_path )
BLEU = 88.44 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(94.1 / 87.5 / 86.7 / 85.7)

Original comment: get value under the ' propagate ' key of the config dictioanry , if it exists substitute it for propagate , if not propagate is None .
// get config dictionary element under the <unk> key , substitute it for propagate .
Code line 1677:  propagate = config . get ( 'propagate' , None )
BLEU = 9.72 (Bravity Penalty=0.395, Length ratio=0.519, Translated length=14, Reference length=27) 
(78.6 / 30.8 / 16.7 / 9.1)

Original comment: call the method sys . stderr . write with an argument string " fork #2 failed: ( %d ) %s\n " , formated with e . errno and e . strerror .
// call the method sys . stderr . write with an argument <unk> , use the result as an argument for the call to the function sys . stderr . write , write the result to sys . stderr .
Code line 1678:               sys . stderr . write ( "fork #2 failed: (%d) %s\n" % ( e . errno , e . strerror ) )
BLEU = 27.20 (Bravity Penalty=1.000, Length ratio=1.219, Translated length=39, Reference length=32) 
(38.5 / 26.3 / 24.3 / 22.2)

Original comment: derive the class CacheClass from the DatabaseCache base class .
// derive the class CacheClass from the Origin base class .
Code line 1679:       class CacheClass ( DatabaseCache ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: skip this loop iteration .
// skip this loop iteration .
Code line 1680:                       continue
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: _called_from_command_line is boolean False .
// has_bz2 is boolean False .
Code line 1681:    _called_from_command_line = False
BLEU = 66.87 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 75.0 / 66.7 / 50.0)

Original comment: value under the self . _pk_field . name key of form . fields dictionary is an instance of ModelChoiceField class , created with 4 arguments: qs , initial as pk_value , required as boolean False and widget as widget .
// value under the self . _pk_field key of the form . fields is an instance of ModelChoiceField class , created with 2 arguments : qs , initial set to unpack_ipv4 , required set to function_name and widget set to widget .
Code line 1682:   form . fields [ self . _pk_field . name ] = ModelChoiceField ( qs , initial = pk_value , required = False , widget = widget )
BLEU = 41.38 (Bravity Penalty=1.000, Length ratio=1.025, Translated length=41, Reference length=40) 
(70.7 / 52.5 / 33.3 / 23.7)

Original comment: call the self . make_bytes method with an argument chunk , for every chunk in value join the result to a bytes string , substitute the result for value .
// call the method <unk> . join with an argument chunk , for every chunk in value , join the results into a string , substitute the result for value .
Code line 1683:   value = b'' . join ( self . make_bytes ( chunk ) for chunk in value )
BLEU = 58.23 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=30, Reference length=30) 
(83.3 / 62.1 / 50.0 / 44.4)

Original comment: if Exception exception is caught ,
// if Exception exception is caught ,
Code line 1684:   except Exception :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: find the ending position of the regular expression match of the object match , substitute the result for k .
// call the method m . end , substitute the result for k .
Code line 1685:  k = m . end ( )
BLEU = 28.38 (Bravity Penalty=0.584, Length ratio=0.650, Translated length=13, Reference length=20) 
(61.5 / 50.0 / 45.5 / 40.0)

Original comment: if TYPE equals to RAW ,
// if column_name equals TOKEN_COMMENT ,
Code line 1686:    if TYPE == RAW :
BLEU = 0.00 (Bravity Penalty=0.819, Length ratio=0.833, Translated length=5, Reference length=6) 
(60.0 / 0.0 / 0.0 / 0.0)

Original comment: define the method normalize_col_name with 4 arguments: self , col_name , used_column_names and is_relation .
// define the method handle_merge with 3 arguments : self , col_name , used_column_names and is_relation .
Code line 1687:       def normalize_col_name ( self , col_name , used_column_names , is_relation ) :
BLEU = 54.24 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(75.0 / 60.0 / 50.0 / 38.5)

Original comment: property decorator ,
// property decorator ,
Code line 1688:    @ property
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: self . _app_dict is an empty dictionary .
// substitute self . _app_dict for self . _app_dict .
Code line 1689:  self . _app_dict = { }
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.125, Translated length=9, Reference length=8) 
(44.4 / 25.0 / 14.3 / 0.0)

Original comment: define the method modified_time with arguments self and name .
// define the method modified_time with arguments self and name .
Code line 1690:    def modified_time ( self , name ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: for every i and choice in enumerated iterable self . choices ,
// for every i and choice in enumerated iterable self . choices ,
Code line 1691:  for i , choice in enumerate ( self . choices ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function truncatechars_html with 2 arguments value and arg .
// define the function <unk> with 2 arguments value and arg .
Code line 1692:  def truncatechars_html ( value , arg ) :
BLEU = 70.17 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(90.9 / 80.0 / 66.7 / 50.0)

Original comment: split arg by ' , ' , substitute the result for bits . s
// call the method arg . split with an argument <unk> , substitute the result for bits .
Code line 1693:   bits = arg . split ( ',' )
BLEU = 37.08 (Bravity Penalty=1.000, Length ratio=1.214, Translated length=17, Reference length=14) 
(52.9 / 37.5 / 33.3 / 28.6)

Original comment: template_with_clear is a string ' % ( clear ) s <label for= " % ( clear_checkbox_id ) s " >% ( clear_checkbox_label ) s</label> ' .
// bring is a <unk> <unk> integer <unk> .
Code line 1694:   template_with_clear = '%(clear)s <label for="%(clear_checkbox_id)s">%(clear_checkbox_label)s</label>'
BLEU = 0.00 (Bravity Penalty=0.105, Length ratio=0.308, Translated length=8, Reference length=26) 
(37.5 / 14.3 / 0.0 / 0.0)

Original comment: define the function write with an argument data .
// define the method write with an argument data .
Code line 1695:   def write ( data ) :
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 50.0)

Original comment: call the method self . configure_handler with an argument value under name key of handlers dictionary , substitute the result for handler .
// call the method self . render_options with an argument : value under name key of handlers dictionary , substitute the result for handler .
Code line 1696:                           handler = self . configure_handler ( handlers [ name ] )
BLEU = 76.41 (Bravity Penalty=1.000, Length ratio=1.043, Translated length=24, Reference length=23) 
(91.7 / 82.6 / 72.7 / 61.9)

Original comment: define the method _render with 2 arguments self and context .
// define the method _render with 2 arguments : self and context .
Code line 1697:      def _render ( self , context ) :
BLEU = 73.49 (Bravity Penalty=1.000, Length ratio=1.091, Translated length=12, Reference length=11) 
(91.7 / 81.8 / 70.0 / 55.6)

Original comment: define the method _wrapper with 3 arguments: self , unpacked list args and unpacked dictionary kwargs .
// define the method compile_function_error with 3 arguments : self , unpacked list args and unpacked dictionary kwargs .
Code line 1698:           def _wrapper ( self , * args , ** kwargs ) :
BLEU = 62.69 (Bravity Penalty=1.000, Length ratio=1.059, Translated length=18, Reference length=17) 
(83.3 / 70.6 / 56.2 / 46.7)

Original comment: call the function digest with an argument password , call the method digest on the result , substitute the result or password .
// call the function digest with an argument password , substitute the result for password .
Code line 1699:               password = digest ( password ) . digest ( )
BLEU = 44.23 (Bravity Penalty=0.587, Length ratio=0.652, Translated length=15, Reference length=23) 
(93.3 / 85.7 / 69.2 / 58.3)

Original comment: defaults is an dictionary with 3 initial entries: self . auto_id for ' auto_id ' , result of the call to the method self . add_prefix , with an argument i , for ' prefix ' and self . error_class for ' error_class ' .
// substitute <unk> and <unk> for defaults .
Code line 1700:  defaults = {  'auto_id' : self . auto_id ,  'prefix' : self . add_prefix ( i ) ,  'error_class' : self . error_class ,  }
BLEU = 0.00 (Bravity Penalty=0.004, Length ratio=0.156, Translated length=7, Reference length=45) 
(57.1 / 0.0 / 0.0 / 0.0)

Original comment: call the function new_method_proxy with an argument len , substitute the result for __len__ .
// call the function new_method_proxy with an argument length , substitute the result for __len__ .
Code line 1701:   __len__ = new_method_proxy ( len )
BLEU = 80.03 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(93.3 / 85.7 / 76.9 / 66.7)

Original comment: substitute i for end_index .
// substitute i for end_index .
Code line 1702:                   end_index = i
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: except if AttributeError is caught ,
// if AttributeError exception is caught ,
Code line 1703:   except AttributeError :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 25.0 / 0.0)

Original comment: if ValueError exception is caught ,
// if ValueError exception is caught ,
Code line 1704:   except ValueError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: raise an ValueError exception with an argument string " Unable to convert %r " formated with value .
// raise an ValueError exception with an argument <unk> .
Code line 1705:               raise ValueError ( "Unable to convert %r" % value )
BLEU = 27.61 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=9, Reference length=18) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: from django . utils . module_loading import import_string into default name space .
// from django . utils . module_loading import import_string into default name space .
Code line 1706:  from django . utils . module_loading import import_string
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function formats . localize_input with 2 arguments: value and self . format if true , if not , then the first element of the result of the function formats . get_format called with an argument self . format_key , return the result .
// call the method formats . localize_input with 3 arguments : value , self . format , if the result is true , and first element of result of the method self . format , return the first element of the result .
Code line 1707:           return formats . localize_input ( value ,  self . format or formats . get_format ( self . format_key ) [ 0 ] )
BLEU = 28.62 (Bravity Penalty=0.931, Length ratio=0.933, Translated length=42, Reference length=45) 
(71.4 / 48.8 / 25.0 / 10.3)

Original comment: derive the class Enclosure from the object base class .
// derive the class <unk> from the object base class .
Code line 1708:      class Enclosure ( object ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: define the function _strip_once with an argument value .
// define the function get_major_version with an argument value .
Code line 1709:      def _strip_once ( value ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: substitute NumberInput for widget .
// substitute NullBooleanSelect for widget .
Code line 1710:       widget = NumberInput
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: code is a string ' min_length '
// code is an integer <unk> .
Code line 1711:  code = 'min_length'
BLEU = 0.00 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=6, Reference length=7) 
(33.3 / 20.0 / 0.0 / 0.0)

Original comment: terminal_char is an string ' > ' .
// terminal_char is integer <unk> .
Code line 1712:                               terminal_char = '>'
BLEU = 0.00 (Bravity Penalty=0.549, Length ratio=0.625, Translated length=5, Reference length=8) 
(60.0 / 25.0 / 0.0 / 0.0)

Original comment: load_template_source . is_usable is boolean True .
// load_template_source . is_usable is boolean True .
Code line 1713:   load_template_source . is_usable = True
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: import module shutil .
// import module shutil .
Code line 1714:  import shutil
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: strip message_context of ' " ' characters from both ends , substitute the result for message_context .
// strip message_context of <unk> from <unk> ends , substitute it for message_context .
Code line 1715:                               message_context = message_context . strip ( '"' )
BLEU = 0.00 (Bravity Penalty=0.735, Length ratio=0.765, Translated length=13, Reference length=17) 
(76.9 / 50.0 / 27.3 / 0.0)

Original comment: substitute token . source for e . django_template_source .
// substitute token . source for e . django_template_source .
Code line 1716:               e . django_template_source = token . source
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute the first 255 elements of ext for ext .
// substitute first 12 elements of ext for ext .
Code line 1717:  ext = ext [ : 255 ]
BLEU = 56.48 (Bravity Penalty=0.895, Length ratio=0.900, Translated length=9, Reference length=10) 
(88.9 / 62.5 / 57.1 / 50.0)

Original comment: call the method self . full_clean .
// call the method self . full_clean .
Code line 1718:               self . full_clean ( )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: append self to nodes .
// append self to nodes .
Code line 1719:               nodes . append ( self )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute the value under the entry key of the sys . path_importer_cache dictionary for finder .
// substitute value under the entry key of the sys . <unk> dictionary for finder .
Code line 1720:                    finder = sys . path_importer_cache [ entry ]
BLEU = 69.01 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16) 
(93.3 / 78.6 / 69.2 / 58.3)

Original comment: if value is true ,
// if value is true ,
Code line 1721:  if value :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method formfield . queryset . complex_filter with an argument limit_choices_to , substitute the result for formfield . queryset .
// call the method formfield . queryset . <unk> with an argument limit_choices_to , substitute the result for formfield . queryset .
Code line 1722:   formfield . queryset = formfield . queryset . complex_filter ( limit_choices_to )
BLEU = 86.56 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=21, Reference length=21) 
(95.2 / 90.0 / 84.2 / 77.8)

Original comment: if not ,
// if not ,
Code line 1723:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if base has an attribute ' declared_fields ' ,
// if base has an attribute <unk> ,
Code line 1724:                if hasattr ( base , 'declared_fields' ) :
BLEU = 48.35 (Bravity Penalty=0.751, Length ratio=0.778, Translated length=7, Reference length=9) 
(85.7 / 66.7 / 60.0 / 50.0)

Original comment: renamed is boolean True .
// renamed is boolean True .
Code line 1725:  renamed = True
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return value converted into a boolean .
// convert value into boolean and return it .
Code line 1726:   return bool ( value )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7) 
(62.5 / 0.0 / 0.0 / 0.0)

Original comment: call the force_text with an argument message , yield the result .
// call the function force_text with an argument message .
Code line 1727:   yield force_text ( message )
BLEU = 38.03 (Bravity Penalty=0.717, Length ratio=0.750, Translated length=9, Reference length=12) 
(88.9 / 62.5 / 42.9 / 33.3)

Original comment: return result .
// return result .
Code line 1728:   return result
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if self . _callback is not None ,
// if self . _callback is not None ,
Code line 1729:           if self . _callback is not None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: append work_file to args .
// append work_file to args .
Code line 1730:  args . append ( work_file )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . core . management . base import BaseCommand into default name space .
// from django . core . management . base import BaseCommand into default name space .
Code line 1731:   from django . core . management . base import BaseCommand
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if not ,
// if not ,
Code line 1732:    else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: return string ' NOTPROVIDED ' .
// return <unk> .
Code line 1733:                  return 'NOTPROVIDED'
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=3, Reference length=6) 
(66.7 / 0.0 / 0.0 / 0.0)

Original comment: if ' :: ' is not contained in ip_str and number of occurrences of ' : ' in ip_str is not equal to integer 7 ,
// if <unk> is not equal to ip_str and call to the method ip_str . count with an argument <unk> , evaluates to true ,
Code line 1734:     if '::' not in ip_str and ip_str . count ( ':' ) != 7 :
BLEU = 11.93 (Bravity Penalty=0.920, Length ratio=0.923, Translated length=24, Reference length=26) 
(37.5 / 17.4 / 9.1 / 4.8)

Original comment: convert settings . LOCALE_PATHS into a list and extend list self . locale_paths with it .
// append settings . LOCALE_PATHS to a list .
Code line 1735:               self . locale_paths . extend ( list ( settings . LOCALE_PATHS ) )
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=8, Reference length=16) 
(75.0 / 42.9 / 16.7 / 0.0)

Original comment: call the method self . make_bytes with an argument value , substitute the result for value .
// call the method self . make_bytes with an argument value , substitute the result for value .
Code line 1736:               value = self . make_bytes ( value )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=17, Reference length=17) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . utils . crypto import constant_time_compare and salted_hmac into default name space .
// from django . utils . crypto import clean_ipv6_address and get_exception_reporter_filter into default name space .
Code line 1737:  from django . utils . crypto import constant_time_compare , salted_hmac
BLEU = 66.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=15, Reference length=15) 
(86.7 / 71.4 / 61.5 / 50.0)

Original comment: if self . m2m . data and save_m2m are true ,
// if self . m2m_data is true and bf_errors is true ,
Code line 1738:  if self . m2m_data and save_m2m :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(54.5 / 30.0 / 11.1 / 0.0)

Original comment: decorator stringfilter ,
// decorator stringfilter ,
Code line 1739:  @ stringfilter
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the method self . error_class with an argument list with one element , return value of the method self . get_form_error , substitute the result for the value under the NON_FIELD_ERRORS key of form . _errors dictionary .
// call the method self . error_class with an argument list with an element self . base_location , substitute the result for value under the NON_FIELD_ERRORS key of the form . _errors dictionary .
Code line 1740:  form . _errors [ NON_FIELD_ERRORS ] = self . error_class ( [ self . get_form_error ( ) ] )
BLEU = 57.42 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=33, Reference length=39) 
(93.9 / 78.1 / 61.3 / 50.0)

Original comment: try ,
// try ,
Code line 1741:                   try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: call the function force_text with 2 arguments: value under the is_dst key of the time . tzname and DEFAULT_LOCALE_ENCODING , return the result .
// call the function time . tzname with 2 arguments : return value of the function time . tzname and DEFAULT_LOCALE_ENCODING , return the result .
Code line 1742:               return force_text ( time . tzname [ is_dst ] , DEFAULT_LOCALE_ENCODING )
BLEU = 46.94 (Bravity Penalty=1.000, Length ratio=1.042, Translated length=25, Reference length=24) 
(72.0 / 54.2 / 39.1 / 31.8)

Original comment: define the function check_all_models with app_configs defaulting to None and unpacked dictionary kwargs as arguments .
// define the function <unk> with app_config set to None and kwargs dictionary as arguments .
Code line 1743:  def check_all_models ( app_configs = None , ** kwargs ) :
BLEU = 0.00 (Bravity Penalty=0.936, Length ratio=0.938, Translated length=15, Reference length=16) 
(80.0 / 42.9 / 23.1 / 0.0)

Original comment: create list out of last_row elements from the start to the last length of row_ender element , append str_hidden and row_ender to it , substitute the result for last element of output .
// slice the last element of the return value of the function get_format called with an argument domain_part , increment the last element of the result to the last element .
Code line 1744:   output [ - 1 ] = last_row [ : - len ( row_ender ) ] + str_hidden + row_ender
BLEU = 0.00 (Bravity Penalty=0.905, Length ratio=0.909, Translated length=30, Reference length=33) 
(46.7 / 17.2 / 7.1 / 0.0)

Original comment: if not ,
// if not ,
Code line 1745:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: append resolved_args to a list containing context element , substitute it for resolved_args .
// create the values of the function context .
Code line 1746:               resolved_args = [ context ] + resolved_args
BLEU = 0.00 (Bravity Penalty=0.472, Length ratio=0.571, Translated length=8, Reference length=14) 
(25.0 / 0.0 / 0.0 / 0.0)

Original comment: call the method filed . clean with arguments value and initial , substitute the result for value .
// call the method field . clean with 2 arguments : value and initial , substitute the result for value .
Code line 1747:  value = field . clean ( value , initial )
BLEU = 60.39 (Bravity Penalty=1.000, Length ratio=1.111, Translated length=20, Reference length=18) 
(85.0 / 68.4 / 55.6 / 41.2)

Original comment: write errors to self . stdout .
// write errors to self . stdout stream .
Code line 1748:                       self . stdout . write ( errors )
BLEU = 70.71 (Bravity Penalty=1.000, Length ratio=1.143, Translated length=8, Reference length=7) 
(87.5 / 71.4 / 66.7 / 60.0)

Original comment: if arg is not string ' on ' or ' off ' ,
// if arg is not an instance of <unk> or <unk> ,
Code line 1749:  if arg not in ( 'on' , 'off' ) :
BLEU = 21.65 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13) 
(54.5 / 30.0 / 22.2 / 12.5)

Original comment: call the method mail . outbox . extend with messages .
// extend mail . outbox list with messages .
Code line 1750:   mail . outbox . extend ( messages )
BLEU = 0.00 (Bravity Penalty=0.687, Length ratio=0.727, Translated length=8, Reference length=11) 
(87.5 / 57.1 / 33.3 / 0.0)

Original comment: call the method parser . parse with an argument tuple with an element end_tag , substitute the result for nodelist_false .
// call the method parser . parse with an argument tuple , use the result as an argument for the call to the method parser . parse , substitute the result for nodelist_false .
Code line 1751:           nodelist_false = parser . parse ( ( end_tag , ) )
BLEU = 44.53 (Bravity Penalty=1.000, Length ratio=1.571, Translated length=33, Reference length=21) 
(54.5 / 46.9 / 41.9 / 36.7)

Original comment: if safe is true ,
// if safe is true ,
Code line 1752:  if safe :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if self . verbosity is greater or equal to 3 , call the self . stdout . write method with string "
// if self . verbosity is greater or equal to integer 3 ,
Code line 1753:                            if self . verbosity >= 3 :
BLEU = 33.43 (Bravity Penalty=0.435, Length ratio=0.545, Translated length=12, Reference length=22) 
(91.7 / 81.8 / 70.0 / 66.7)

Original comment: join dirpath and filename into path , use it as an argument for the call to the function os . path . normpath , substitute it for file_path .
// join dirpath and filename into a file path , use it as an argument for the call to the os . path . normpath function , substitute the result for file_path .
Code line 1754:                   file_path = os . path . normpath ( os . path . join ( dirpath , filename ) )
BLEU = 63.02 (Bravity Penalty=1.000, Length ratio=1.103, Translated length=32, Reference length=29) 
(87.5 / 71.0 / 56.7 / 44.8)

Original comment: if not ,
// if not ,
Code line 1755:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the function copy with an argument self . render_context , substitute the result for duplicate . render_context .
// call the function copy with an argument self . render_context , substitute the result for duplicate . render_context .
Code line 1756:  duplicate . render_context = copy ( self . render_context )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=19, Reference length=19) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if plan_node is contained in loader . applied_migrations ,
// if plan_node is contained in loader . <unk> ,
Code line 1757:    if plan_node in loader . applied_migrations :
BLEU = 75.06 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 71.4 / 66.7)

Original comment: convert string header to uppercase and replace all occurrences of ' - ' with ' _ ' , substitute it for header .
// call the method header . <unk> with 2 arguments : <unk> and <unk> , substitute the result for header and <unk> , respectively .
Code line 1758:               header = header . upper ( ) . replace ( '-' , '_' )
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.043, Translated length=24, Reference length=23) 
(33.3 / 13.0 / 0.0 / 0.0)

Original comment: if ImportError exception is caught ,
// if ImportError exception is caught ,
Code line 1759:   except ImportError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function bytes with an argument value , return the result .
// call the function bytes with an argument value , return the result .
Code line 1760:               return bytes ( value )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: intrans is boolean True .
// intrans is boolean True .
Code line 1761:    intrans = True
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the method apps . get_app_config with an argument model . _met . app_label , substitute path field of the result for app_dir .
// call the method apps . get_app_config with an argument model . _meta . app_label , append the result to app_dir .
Code line 1762:  app_dir = apps . get_app_config ( model . _meta . app_label ) . path
BLEU = 53.06 (Bravity Penalty=0.867, Length ratio=0.875, Translated length=21, Reference length=24) 
(85.7 / 70.0 / 52.6 / 44.4)

Original comment: return the element at the index index of the tuple containing 3 elements: self . func , self . args and self . kwargs .
// return a tuple with 3 elements : self . func , self . args and self . kwargs , respectively .
Code line 1763:           return ( self . func , self . args , self . kwargs ) [ index ]
BLEU = 43.28 (Bravity Penalty=0.827, Length ratio=0.840, Translated length=21, Reference length=25) 
(71.4 / 50.0 / 47.4 / 44.4)

Original comment: try ,
// try ,
Code line 1764:    try :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=2, Reference length=2) 
(100.0 / 100.0 / 0.0 / 0.0)

Original comment: if _file is None ,
// if _file is None ,
Code line 1765:                               if _file is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method close with an argument self .
// define the method close with argument self .
Code line 1766:         def close ( self ) :
BLEU = 61.02 (Bravity Penalty=0.882, Length ratio=0.889, Translated length=8, Reference length=9) 
(100.0 / 85.7 / 66.7 / 40.0)

Original comment: from datetime import datetime into default name space .
// from datetime import datetime into default name space .
Code line 1767:  from datetime import datetime
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from django . core . serializers import base into default name space .
// from django . core . serializers import base into default name space .
Code line 1768:  from django . core . serializers import base
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=13, Reference length=13) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function to_locale with an argument language .
// define the function to_locale with an argument language .
Code line 1769:    def to_locale ( language ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: from optparse import OptionParser into default name space .
// from <unk> import baseconv into default name space .
Code line 1770:  from optparse import OptionParser
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(77.8 / 50.0 / 42.9 / 33.3)

Original comment: if ValueError exception is caught ,
// if ValueError exception is caught ,
Code line 1771:   except ValueError :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: model_dependencies is an empty list .
// model_dependencies is an empty list .
Code line 1772:   model_dependencies = [ ]
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if content is not None raise an error .
// if content is not None raise an error .
Code line 1773:               assert content is not None
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: call the function reverse with 4 arguments: concatenated project_name , character ' . ' and view_name , args as args , kwargs as kwargs , current_app as context . current_app , substitute the result for url .
// call the function reverse with 6 arguments : project_name , <unk> args , args , kwargs set to args , and current_app set to context . current_app , substitute the result for url .
Code line 1774:                       url = reverse ( project_name + '.' + view_name ,  args = args , kwargs = kwargs ,  current_app = context . current_app )
BLEU = 41.26 (Bravity Penalty=0.916, Length ratio=0.919, Translated length=34, Reference length=37) 
(73.5 / 51.5 / 37.5 / 29.0)

Original comment: endless loop ,
// endless loop ,
Code line 1775:           while True :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: if not ,
// if not ,
Code line 1776:   else :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: call the function mark_safe with an argument word , substitute the result for i-th element of words .
// call the function mark_safe with an argument word , substitute the result for i-th element of words .
Code line 1777:               words [ i ] = mark_safe ( word )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=18, Reference length=18) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: sum _cached_filenames , new_filenames and _error_files , store the result in filelist .
// sum filelist and closing , substitute the result for filelist .
Code line 1778:           filelist = _cached_filenames + new_filenames + _error_files
BLEU = 0.00 (Bravity Penalty=0.834, Length ratio=0.846, Translated length=11, Reference length=13) 
(63.6 / 20.0 / 0.0 / 0.0)

Original comment: for every message in email_messages:
// for every message in email_messages ,
Code line 1779:  for message in email_messages :
BLEU = 50.81 (Bravity Penalty=1.000, Length ratio=1.200, Translated length=6, Reference length=5) 
(66.7 / 60.0 / 50.0 / 33.3)

Original comment: convert name to lower case , if it is contained in ADDRESS_HEADERS , s
// convert name to lowercase , if it is contained in <unk> ,
Code line 1780:           if name . lower ( ) in ADDRESS_HEADERS :
BLEU = 46.15 (Bravity Penalty=0.846, Length ratio=0.857, Translated length=12, Reference length=14) 
(83.3 / 63.6 / 50.0 / 33.3)

Original comment: status_code is an integer 301 .
// status_code is an integer <unk> .
Code line 1781:       status_code = 301
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(83.3 / 60.0 / 50.0 / 33.3)

Original comment: if data is an instance of bytes .
// if data is an instance of bytes ,
Code line 1782:  if isinstance ( data , bytes ) :
BLEU = 84.09 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=8, Reference length=8) 
(87.5 / 85.7 / 83.3 / 80.0)

Original comment: for every p in path ,
// for every p in path ,
Code line 1783:     for p in path :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=6, Reference length=6) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the function gettext_noop with an argument message .
// define the function gettext_noop with an argument message .
Code line 1784:    def gettext_noop ( message ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: decorator deconstructible ,
// decorator deconstructible ,
Code line 1785:     @ deconstructible
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=3, Reference length=3) 
(100.0 / 100.0 / 100.0 / 0.0)

Original comment: define the method bound_data with arguments self , data and initial .
// define the method bound_data with arguments self , data and initial .
Code line 1786:    def bound_data ( self , data , initial ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=12, Reference length=12) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: if name is contained in existing ,
// if name is contained in existing ,
Code line 1787:                       if name in existing :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method __new__ with 4 arguments: cls , name , this_bases and d .
// define the method __new__ with 4 arguments : cls , name , real_value and d .
Code line 1788:  def __new__ ( cls , name , this_bases , d ) :
BLEU = 53.73 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(81.2 / 66.7 / 50.0 / 30.8)

Original comment: define the function get_language_from_request with 2 arguments: request and check_path set to boolean False .
// define the function get_language_from_request with 2 arguments : request and check_path set to boolean False .
Code line 1789:     def get_language_from_request ( request , check_path = False ) :
BLEU = 74.48 (Bravity Penalty=1.000, Length ratio=1.067, Translated length=16, Reference length=15) 
(87.5 / 80.0 / 71.4 / 61.5)

Original comment: if field_type equals a string ' AutoField ( ' ,
// if field_type equals <unk> ,
Code line 1790:                           if field_type == 'AutoField(' :
BLEU = 0.00 (Bravity Penalty=0.368, Length ratio=0.500, Translated length=5, Reference length=10) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: if path_info is empty ,
// if path_info is false ,
Code line 1791:  if not path_info :
BLEU = 0.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(80.0 / 50.0 / 33.3 / 0.0)

Original comment: define the function deconstruct with an argument obj .
// define the function urlunquote with an argument obj .
Code line 1792:    def deconstruct ( obj ) :
BLEU = 59.69 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(88.9 / 75.0 / 57.1 / 33.3)

Original comment: call the method _trans . gettext_noop with an argument message .
// call the function _trans . gettext_noop with an argument message , return the result .
Code line 1793:       return _trans . gettext_noop ( message )
BLEU = 45.47 (Bravity Penalty=1.000, Length ratio=1.364, Translated length=15, Reference length=11) 
(66.7 / 50.0 / 38.5 / 33.3)

Original comment: substitute content_type for value under the ' Content-Type ' key of the self dictionary .
// substitute content_type for value under the <unk> key of self dictionary .
Code line 1794:   self [ 'Content-Type' ] = content_type
BLEU = 44.96 (Bravity Penalty=0.779, Length ratio=0.800, Translated length=12, Reference length=15) 
(91.7 / 72.7 / 50.0 / 33.3)

Original comment: call the method connection . client . runshell .
// call the method connection . RLock . <unk> .
Code line 1795:               connection . client . runshell ( )
BLEU = 48.55 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(77.8 / 50.0 / 42.9 / 33.3)

Original comment: define the function dec with an argument func .
// define the function dec with an argument func .
Code line 1796:           def dec ( func ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: __version__ is a string " 1 . 6 . 1 " .
// substitute <unk> for max_width .
Code line 1797:  __version__ = "1.6.1"
BLEU = 0.00 (Bravity Penalty=0.247, Length ratio=0.417, Translated length=5, Reference length=12) 
(20.0 / 0.0 / 0.0 / 0.0)

Original comment: call the method self . _update_errors with an argument e .
// call the method self . _update_errors with an argument e .
Code line 1798:               self . _update_errors ( e )
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=11, Reference length=11) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: return boolean False .
// return boolean False .
Code line 1799:    return False
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=4, Reference length=4) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: substitute self . closed for close .
// substitute self . closed for close .
Code line 1800:               close = self . closed
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=7, Reference length=7) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: _urllib_robotparser_moved_attributes is a list containing an instance of MovedAttribute class , created with 3 argument: strings , " RobotFileParser " , " robotparser " , " urllib . robotparser " .
// map is a list containing 2 elements : <unk> and <unk> .
Code line 1801:     _urllib_robotparser_moved_attributes = [  MovedAttribute ( "RobotFileParser" , "robotparser" , "urllib.robotparser" ) ,  ]
BLEU = 4.60 (Bravity Penalty=0.205, Length ratio=0.387, Translated length=12, Reference length=31) 
(41.7 / 27.3 / 20.0 / 11.1)

Original comment: if digest is None ,
// if digest is None ,
Code line 1802:  if digest is None :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=5, Reference length=5) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: define the method tell with an argument self .
// define the method tell with an argument self .
Code line 1803:    def tell ( self ) :
BLEU = 100.00 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=9, Reference length=9) 
(100.0 / 100.0 / 100.0 / 100.0)

Original comment: derive the class HttpResponsePermanentRedirect from the HttpResponseRedirectBase base class .
// derive the class MemcachedCache from the HttpResponseRedirectBase base class .
Code line 1804:     class HttpResponsePermanentRedirect ( HttpResponseRedirectBase ) :
BLEU = 65.80 (Bravity Penalty=1.000, Length ratio=1.000, Translated length=10, Reference length=10) 
(90.0 / 77.8 / 62.5 / 42.9)

Original comment: call the function get_format with an argument string ' DATE_INPUT_FORMATS ' , substitute the first element of the result for input_format .
// call the function get_format with an argument <unk> , substitute the first element of the result for input_format .
Code line 1805:                   input_format = get_format ( 'DATE_INPUT_FORMATS' ) [ 0 ]
BLEU = 72.52 (Bravity Penalty=0.854, Length ratio=0.864, Translated length=19, Reference length=22) 
(94.7 / 88.9 / 82.4 / 75.0)
